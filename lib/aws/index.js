"use strict";
/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.apigatewayv2Deployment = exports.apigatewayv2Authorizer = exports.apigatewayv2ApiMapping = exports.apigatewayv2Api = exports.apiGatewayVpcLink = exports.apiGatewayUsagePlanKey = exports.apiGatewayUsagePlan = exports.apiGatewayStage = exports.apiGatewayRestApiPolicy = exports.apiGatewayRestApi = exports.apiGatewayResource = exports.apiGatewayRequestValidator = exports.apiGatewayModel = exports.apiGatewayMethodSettings = exports.apiGatewayMethodResponse = exports.apiGatewayMethod = exports.apiGatewayIntegrationResponse = exports.apiGatewayIntegration = exports.apiGatewayGatewayResponse = exports.apiGatewayDomainName = exports.apiGatewayDocumentationVersion = exports.apiGatewayDocumentationPart = exports.apiGatewayDeployment = exports.apiGatewayClientCertificate = exports.apiGatewayBasePathMapping = exports.apiGatewayAuthorizer = exports.apiGatewayApiKey = exports.apiGatewayAccount = exports.amplifyWebhook = exports.amplifyDomainAssociation = exports.amplifyBranch = exports.amplifyBackendEnvironment = exports.amplifyApp = exports.amiLaunchPermission = exports.amiFromInstance = exports.amiCopy = exports.ami = exports.albTargetGroupAttachment = exports.albTargetGroup = exports.albListenerRule = exports.albListenerCertificate = exports.albListener = exports.alb = exports.acmpcaCertificateAuthorityCertificate = exports.acmpcaCertificateAuthority = exports.acmpcaCertificate = exports.acmCertificateValidation = exports.acmCertificate = exports.accountAlternateContact = exports.accessanalyzerAnalyzer = void 0;
exports.autoscalingGroupTag = exports.autoscalingGroup = exports.autoscalingAttachment = exports.athenaWorkgroup = exports.athenaNamedQuery = exports.athenaDatabase = exports.appsyncResolver = exports.appsyncGraphqlApi = exports.appsyncFunction = exports.appsyncDomainNameApiAssociation = exports.appsyncDomainName = exports.appsyncDatasource = exports.appsyncApiKey = exports.appsyncApiCache = exports.appstreamUserStackAssociation = exports.appstreamUser = exports.appstreamStack = exports.appstreamImageBuilder = exports.appstreamFleetStackAssociation = exports.appstreamFleet = exports.appstreamDirectoryConfig = exports.apprunnerService = exports.apprunnerCustomDomainAssociation = exports.apprunnerConnection = exports.apprunnerAutoScalingConfigurationVersion = exports.appmeshVirtualService = exports.appmeshVirtualRouter = exports.appmeshVirtualNode = exports.appmeshVirtualGateway = exports.appmeshRoute = exports.appmeshMesh = exports.appmeshGatewayRoute = exports.appconfigHostedConfigurationVersion = exports.appconfigEnvironment = exports.appconfigDeploymentStrategy = exports.appconfigDeployment = exports.appconfigConfigurationProfile = exports.appconfigApplication = exports.appautoscalingTarget = exports.appautoscalingScheduledAction = exports.appautoscalingPolicy = exports.appCookieStickinessPolicy = exports.apigatewayv2VpcLink = exports.apigatewayv2Stage = exports.apigatewayv2RouteResponse = exports.apigatewayv2Route = exports.apigatewayv2Model = exports.apigatewayv2IntegrationResponse = exports.apigatewayv2Integration = exports.apigatewayv2DomainName = void 0;
exports.cloudtrail = exports.cloudsearchDomainServiceAccessPolicy = exports.cloudsearchDomain = exports.cloudhsmV2Hsm = exports.cloudhsmV2Cluster = exports.cloudfrontResponseHeadersPolicy = exports.cloudfrontRealtimeLogConfig = exports.cloudfrontPublicKey = exports.cloudfrontOriginRequestPolicy = exports.cloudfrontOriginAccessIdentity = exports.cloudfrontMonitoringSubscription = exports.cloudfrontKeyGroup = exports.cloudfrontFunction = exports.cloudfrontFieldLevelEncryptionProfile = exports.cloudfrontFieldLevelEncryptionConfig = exports.cloudfrontDistribution = exports.cloudfrontCachePolicy = exports.cloudformationType = exports.cloudformationStackSetInstance = exports.cloudformationStackSet = exports.cloudformationStack = exports.cloudcontrolapiResource = exports.cloud9EnvironmentMembership = exports.cloud9EnvironmentEc2 = exports.chimeVoiceConnectorTerminationCredentials = exports.chimeVoiceConnectorTermination = exports.chimeVoiceConnectorStreaming = exports.chimeVoiceConnectorOrigination = exports.chimeVoiceConnectorLogging = exports.chimeVoiceConnectorGroup = exports.chimeVoiceConnector = exports.budgetsBudgetAction = exports.budgetsBudget = exports.batchSchedulingPolicy = exports.batchJobQueue = exports.batchJobDefinition = exports.batchComputeEnvironment = exports.backupVaultPolicy = exports.backupVaultNotifications = exports.backupVaultLockConfiguration = exports.backupVault = exports.backupSelection = exports.backupRegionSettings = exports.backupPlan = exports.backupGlobalSettings = exports.autoscalingplansScalingPlan = exports.autoscalingSchedule = exports.autoscalingPolicy = exports.autoscalingNotification = exports.autoscalingLifecycleHook = void 0;
exports.cognitoUserPoolDomain = exports.cognitoUserPoolClient = exports.cognitoUserPool = exports.cognitoUserGroup = exports.cognitoResourceServer = exports.cognitoIdentityProvider = exports.cognitoIdentityPoolRolesAttachment = exports.cognitoIdentityPoolProviderPrincipalTag = exports.cognitoIdentityPool = exports.codestarnotificationsNotificationRule = exports.codestarconnectionsHost = exports.codestarconnectionsConnection = exports.codepipelineWebhook = exports.codepipeline = exports.codedeployDeploymentGroup = exports.codedeployDeploymentConfig = exports.codedeployApp = exports.codecommitTrigger = exports.codecommitRepository = exports.codecommitApprovalRuleTemplateAssociation = exports.codecommitApprovalRuleTemplate = exports.codebuildWebhook = exports.codebuildSourceCredential = exports.codebuildResourcePolicy = exports.codebuildReportGroup = exports.codebuildProject = exports.codeartifactRepositoryPermissionsPolicy = exports.codeartifactRepository = exports.codeartifactDomainPermissionsPolicy = exports.codeartifactDomain = exports.cloudwatchQueryDefinition = exports.cloudwatchMetricStream = exports.cloudwatchMetricAlarm = exports.cloudwatchLogSubscriptionFilter = exports.cloudwatchLogStream = exports.cloudwatchLogResourcePolicy = exports.cloudwatchLogMetricFilter = exports.cloudwatchLogGroup = exports.cloudwatchLogDestinationPolicy = exports.cloudwatchLogDestination = exports.cloudwatchEventTarget = exports.cloudwatchEventRule = exports.cloudwatchEventPermission = exports.cloudwatchEventConnection = exports.cloudwatchEventBusPolicy = exports.cloudwatchEventBus = exports.cloudwatchEventArchive = exports.cloudwatchEventApiDestination = exports.cloudwatchDashboard = exports.cloudwatchCompositeAlarm = void 0;
exports.dbSnapshot = exports.dbSecurityGroup = exports.dbProxyTarget = exports.dbProxyEndpoint = exports.dbProxyDefaultTargetGroup = exports.dbProxy = exports.dbParameterGroup = exports.dbOptionGroup = exports.dbInstanceRoleAssociation = exports.dbInstance = exports.dbEventSubscription = exports.dbClusterSnapshot = exports.daxSubnetGroup = exports.daxParameterGroup = exports.daxCluster = exports.datasyncTask = exports.datasyncLocationSmb = exports.datasyncLocationS3 = exports.datasyncLocationNfs = exports.datasyncLocationHdfs = exports.datasyncLocationFsxWindowsFileSystem = exports.datasyncLocationFsxLustreFileSystem = exports.datasyncLocationEfs = exports.datasyncAgent = exports.datapipelinePipelineDefinition = exports.datapipelinePipeline = exports.dataexchangeDataSet = exports.customerGateway = exports.curReportDefinition = exports.connectSecurityProfile = exports.connectQuickConnect = exports.connectQueue = exports.connectLambdaFunctionAssociation = exports.connectInstance = exports.connectHoursOfOperation = exports.connectContactFlowModule = exports.connectContactFlow = exports.connectBotAssociation = exports.configRemediationConfiguration = exports.configOrganizationManagedRule = exports.configOrganizationCustomRule = exports.configOrganizationConformancePack = exports.configDeliveryChannel = exports.configConformancePack = exports.configConfigurationRecorderStatus = exports.configConfigurationRecorder = exports.configConfigurationAggregator = exports.configConfigRule = exports.configAggregateAuthorization = exports.cognitoUserPoolUiCustomization = void 0;
exports.dxTransitVirtualInterface = exports.dxPublicVirtualInterface = exports.dxPrivateVirtualInterface = exports.dxLag = exports.dxHostedTransitVirtualInterfaceAccepter = exports.dxHostedTransitVirtualInterface = exports.dxHostedPublicVirtualInterfaceAccepter = exports.dxHostedPublicVirtualInterface = exports.dxHostedPrivateVirtualInterfaceAccepter = exports.dxHostedPrivateVirtualInterface = exports.dxHostedConnection = exports.dxGatewayAssociationProposal = exports.dxGatewayAssociation = exports.dxGateway = exports.dxConnectionConfirmation = exports.dxConnectionAssociation = exports.dxConnection = exports.dxBgpPeer = exports.docdbSubnetGroup = exports.docdbGlobalCluster = exports.docdbClusterSnapshot = exports.docdbClusterParameterGroup = exports.docdbClusterInstance = exports.docdbCluster = exports.dmsReplicationTask = exports.dmsReplicationSubnetGroup = exports.dmsReplicationInstance = exports.dmsEventSubscription = exports.dmsEndpoint = exports.dmsCertificate = exports.dlmLifecyclePolicy = exports.directoryServiceLogSubscription = exports.directoryServiceDirectory = exports.directoryServiceConditionalForwarder = exports.devicefarmUpload = exports.devicefarmTestGridProject = exports.devicefarmProject = exports.devicefarmNetworkProfile = exports.devicefarmInstanceProfile = exports.devicefarmDevicePool = exports.detectiveMember = exports.detectiveInvitationAccepter = exports.detectiveGraph = exports.defaultVpcDhcpOptions = exports.defaultVpc = exports.defaultSubnet = exports.defaultSecurityGroup = exports.defaultRouteTable = exports.defaultNetworkAcl = exports.dbSubnetGroup = void 0;
exports.ecrpublicRepositoryPolicy = exports.ecrpublicRepository = exports.ecrRepositoryPolicy = exports.ecrRepository = exports.ecrReplicationConfiguration = exports.ecrRegistryScanningConfiguration = exports.ecrRegistryPolicy = exports.ecrPullThroughCacheRule = exports.ecrLifecyclePolicy = exports.ec2EnclaveCertificateIamRoleAssociation = exports.ec2TransitGatewayVpcAttachmentAccepter = exports.ec2TransitGatewayVpcAttachment = exports.ec2TransitGatewayRouteTablePropagation = exports.ec2TransitGatewayRouteTableAssociation = exports.ec2TransitGatewayRouteTable = exports.ec2TransitGatewayRoute = exports.ec2TransitGatewayPrefixListReference = exports.ec2TransitGatewayPeeringAttachmentAccepter = exports.ec2TransitGatewayPeeringAttachment = exports.ec2TransitGateway = exports.ec2TrafficMirrorTarget = exports.ec2TrafficMirrorSession = exports.ec2TrafficMirrorFilterRule = exports.ec2TrafficMirrorFilter = exports.ec2Tag = exports.ec2SubnetCidrReservation = exports.ec2ManagedPrefixListEntry = exports.ec2ManagedPrefixList = exports.ec2LocalGatewayRouteTableVpcAssociation = exports.ec2LocalGatewayRoute = exports.ec2Host = exports.ec2Fleet = exports.ec2ClientVpnRoute = exports.ec2ClientVpnNetworkAssociation = exports.ec2ClientVpnEndpoint = exports.ec2ClientVpnAuthorizationRule = exports.ec2CarrierGateway = exports.ec2CapacityReservation = exports.ec2AvailabilityZoneGroup = exports.ebsVolume = exports.ebsSnapshotImport = exports.ebsSnapshotCopy = exports.ebsSnapshot = exports.ebsEncryptionByDefault = exports.ebsDefaultKmsKey = exports.dynamodbTag = exports.dynamodbTableItem = exports.dynamodbTable = exports.dynamodbKinesisStreamingDestination = exports.dynamodbGlobalTable = void 0;
exports.fmsPolicy = exports.fmsAdminAccount = exports.flowLog = exports.emrStudioSessionMapping = exports.emrStudio = exports.emrSecurityConfiguration = exports.emrManagedScalingPolicy = exports.emrInstanceGroup = exports.emrInstanceFleet = exports.emrCluster = exports.elbAttachment = exports.elb = exports.elastictranscoderPreset = exports.elastictranscoderPipeline = exports.elasticsearchDomainSamlOptions = exports.elasticsearchDomainPolicy = exports.elasticsearchDomain = exports.elasticacheUserGroup = exports.elasticacheUser = exports.elasticacheSubnetGroup = exports.elasticacheSecurityGroup = exports.elasticacheReplicationGroup = exports.elasticacheParameterGroup = exports.elasticacheGlobalReplicationGroup = exports.elasticacheCluster = exports.elasticBeanstalkEnvironment = exports.elasticBeanstalkConfigurationTemplate = exports.elasticBeanstalkApplicationVersion = exports.elasticBeanstalkApplication = exports.eksNodeGroup = exports.eksIdentityProviderConfig = exports.eksFargateProfile = exports.eksCluster = exports.eksAddon = exports.eipAssociation = exports.eip = exports.egressOnlyInternetGateway = exports.efsMountTarget = exports.efsFileSystemPolicy = exports.efsFileSystem = exports.efsBackupPolicy = exports.efsAccessPoint = exports.ecsTaskSet = exports.ecsTaskDefinition = exports.ecsTag = exports.ecsService = exports.ecsClusterCapacityProviders = exports.ecsCluster = exports.ecsCapacityProvider = exports.ecsAccountSettingDefault = void 0;
exports.iamGroup = exports.iamAccountPasswordPolicy = exports.iamAccountAlias = exports.iamAccessKey = exports.guarddutyThreatintelset = exports.guarddutyPublishingDestination = exports.guarddutyOrganizationConfiguration = exports.guarddutyOrganizationAdminAccount = exports.guarddutyMember = exports.guarddutyIpset = exports.guarddutyInviteAccepter = exports.guarddutyFilter = exports.guarddutyDetector = exports.glueWorkflow = exports.glueUserDefinedFunction = exports.glueTrigger = exports.glueSecurityConfiguration = exports.glueSchema = exports.glueResourcePolicy = exports.glueRegistry = exports.gluePartitionIndex = exports.gluePartition = exports.glueMlTransform = exports.glueJob = exports.glueDevEndpoint = exports.glueDataCatalogEncryptionSettings = exports.glueCrawler = exports.glueConnection = exports.glueClassifier = exports.glueCatalogTable = exports.glueCatalogDatabase = exports.globalacceleratorListener = exports.globalacceleratorEndpointGroup = exports.globalacceleratorAccelerator = exports.glacierVaultLock = exports.glacierVault = exports.gameliftGameSessionQueue = exports.gameliftFleet = exports.gameliftBuild = exports.gameliftAlias = exports.fsxWindowsFileSystem = exports.fsxOpenzfsVolume = exports.fsxOpenzfsSnapshot = exports.fsxOpenzfsFileSystem = exports.fsxOntapVolume = exports.fsxOntapStorageVirtualMachine = exports.fsxOntapFileSystem = exports.fsxLustreFileSystem = exports.fsxDataRepositoryAssociation = exports.fsxBackup = void 0;
exports.kmsAlias = exports.kinesisanalyticsv2ApplicationSnapshot = exports.kinesisanalyticsv2Application = exports.kinesisVideoStream = exports.kinesisStreamConsumer = exports.kinesisStream = exports.kinesisFirehoseDeliveryStream = exports.kinesisAnalyticsApplication = exports.keyPair = exports.iotTopicRule = exports.iotThingType = exports.iotThingPrincipalAttachment = exports.iotThingGroupMembership = exports.iotThingGroup = exports.iotThing = exports.iotRoleAlias = exports.iotPolicyAttachment = exports.iotPolicy = exports.iotCertificate = exports.iotAuthorizer = exports.internetGateway = exports.instance = exports.inspectorResourceGroup = exports.inspectorAssessmentTemplate = exports.inspectorAssessmentTarget = exports.imagebuilderInfrastructureConfiguration = exports.imagebuilderImageRecipe = exports.imagebuilderImagePipeline = exports.imagebuilderImage = exports.imagebuilderDistributionConfiguration = exports.imagebuilderComponent = exports.iamUserSshKey = exports.iamUserPolicyAttachment = exports.iamUserPolicy = exports.iamUserLoginProfile = exports.iamUserGroupMembership = exports.iamUser = exports.iamServiceLinkedRole = exports.iamServerCertificate = exports.iamSamlProvider = exports.iamRolePolicyAttachment = exports.iamRolePolicy = exports.iamRole = exports.iamPolicyAttachment = exports.iamPolicy = exports.iamOpenidConnectProvider = exports.iamInstanceProfile = exports.iamGroupPolicyAttachment = exports.iamGroupPolicy = exports.iamGroupMembership = void 0;
exports.macie2Member = exports.macie2InvitationAccepter = exports.macie2FindingsFilter = exports.macie2CustomDataIdentifier = exports.macie2ClassificationJob = exports.macie2Account = exports.loadBalancerPolicy = exports.loadBalancerListenerPolicy = exports.loadBalancerBackendServerPolicy = exports.lightsailStaticIpAttachment = exports.lightsailStaticIp = exports.lightsailKeyPair = exports.lightsailInstancePublicPorts = exports.lightsailInstance = exports.lightsailDomain = exports.licensemanagerLicenseConfiguration = exports.licensemanagerAssociation = exports.lexSlotType = exports.lexIntent = exports.lexBotAlias = exports.lexBot = exports.lbTargetGroupAttachment = exports.lbTargetGroup = exports.lbSslNegotiationPolicy = exports.lbListenerRule = exports.lbListenerCertificate = exports.lbListener = exports.lbCookieStickinessPolicy = exports.lb = exports.launchTemplate = exports.launchConfiguration = exports.lambdaProvisionedConcurrencyConfig = exports.lambdaPermission = exports.lambdaLayerVersionPermission = exports.lambdaLayerVersion = exports.lambdaInvocation = exports.lambdaFunctionEventInvokeConfig = exports.lambdaFunction = exports.lambdaEventSourceMapping = exports.lambdaCodeSigningConfig = exports.lambdaAlias = exports.lakeformationResource = exports.lakeformationPermissions = exports.lakeformationDataLakeSettings = exports.kmsReplicaKey = exports.kmsReplicaExternalKey = exports.kmsKey = exports.kmsGrant = exports.kmsExternalKey = exports.kmsCiphertext = void 0;
exports.opsworksNodejsAppLayer = exports.opsworksMysqlLayer = exports.opsworksMemcachedLayer = exports.opsworksJavaAppLayer = exports.opsworksInstance = exports.opsworksHaproxyLayer = exports.opsworksGangliaLayer = exports.opsworksCustomLayer = exports.opsworksApplication = exports.networkfirewallRuleGroup = exports.networkfirewallResourcePolicy = exports.networkfirewallLoggingConfiguration = exports.networkfirewallFirewallPolicy = exports.networkfirewallFirewall = exports.networkInterfaceSgAttachment = exports.networkInterfaceAttachment = exports.networkInterface = exports.networkAclRule = exports.networkAcl = exports.neptuneSubnetGroup = exports.neptuneParameterGroup = exports.neptuneEventSubscription = exports.neptuneClusterSnapshot = exports.neptuneClusterParameterGroup = exports.neptuneClusterInstance = exports.neptuneClusterEndpoint = exports.neptuneCluster = exports.natGateway = exports.mwaaEnvironment = exports.mskconnectWorkerConfiguration = exports.mskconnectCustomPlugin = exports.mskScramSecretAssociation = exports.mskConfiguration = exports.mskCluster = exports.mqConfiguration = exports.mqBroker = exports.memorydbUser = exports.memorydbSubnetGroup = exports.memorydbSnapshot = exports.memorydbParameterGroup = exports.memorydbCluster = exports.memorydbAcl = exports.mediaStoreContainerPolicy = exports.mediaStoreContainer = exports.mediaPackageChannel = exports.mediaConvertQueue = exports.mainRouteTableAssociation = exports.macieS3BucketAssociation = exports.macieMemberAccountAssociation = exports.macie2OrganizationAdminAccount = void 0;
exports.redshiftSnapshotCopyGrant = exports.redshiftSecurityGroup = exports.redshiftScheduledAction = exports.redshiftParameterGroup = exports.redshiftEventSubscription = exports.redshiftCluster = exports.rdsGlobalCluster = exports.rdsClusterRoleAssociation = exports.rdsClusterParameterGroup = exports.rdsClusterInstance = exports.rdsClusterEndpoint = exports.rdsCluster = exports.ramResourceShareAccepter = exports.ramResourceShare = exports.ramResourceAssociation = exports.ramPrincipalAssociation = exports.quicksightUser = exports.quicksightGroupMembership = exports.quicksightGroup = exports.quicksightDataSource = exports.qldbLedger = exports.proxyProtocolPolicy = exports.prometheusWorkspace = exports.prometheusRuleGroupNamespace = exports.prometheusAlertManagerDefinition = exports.placementGroup = exports.pinpointSmsChannel = exports.pinpointGcmChannel = exports.pinpointEventStream = exports.pinpointEmailChannel = exports.pinpointBaiduChannel = exports.pinpointApp = exports.pinpointApnsVoipSandboxChannel = exports.pinpointApnsVoipChannel = exports.pinpointApnsSandboxChannel = exports.pinpointApnsChannel = exports.pinpointAdmChannel = exports.organizationsPolicyAttachment = exports.organizationsPolicy = exports.organizationsOrganizationalUnit = exports.organizationsOrganization = exports.organizationsDelegatedAdministrator = exports.organizationsAccount = exports.opsworksUserProfile = exports.opsworksStaticWebLayer = exports.opsworksStack = exports.opsworksRdsDbInstance = exports.opsworksRailsAppLayer = exports.opsworksPhpAppLayer = exports.opsworksPermission = void 0;
exports.s3BucketObjectLockConfiguration = exports.s3BucketObject = exports.s3BucketNotification = exports.s3BucketMetric = exports.s3BucketLogging = exports.s3BucketLifecycleConfiguration = exports.s3BucketInventory = exports.s3BucketIntelligentTieringConfiguration = exports.s3BucketCorsConfiguration = exports.s3BucketAnalyticsConfiguration = exports.s3BucketAcl = exports.s3BucketAccelerateConfiguration = exports.s3Bucket = exports.s3AccountPublicAccessBlock = exports.s3AccessPoint = exports.routeTableAssociation = exports.routeTable = exports.route53RecoveryreadinessResourceSet = exports.route53RecoveryreadinessRecoveryGroup = exports.route53RecoveryreadinessReadinessCheck = exports.route53RecoveryreadinessCell = exports.route53RecoverycontrolconfigSafetyRule = exports.route53RecoverycontrolconfigRoutingControl = exports.route53RecoverycontrolconfigControlPanel = exports.route53RecoverycontrolconfigCluster = exports.route53ZoneAssociation = exports.route53Zone = exports.route53VpcAssociationAuthorization = exports.route53ResolverRuleAssociation = exports.route53ResolverRule = exports.route53ResolverQueryLogConfigAssociation = exports.route53ResolverQueryLogConfig = exports.route53ResolverFirewallRuleGroupAssociation = exports.route53ResolverFirewallRuleGroup = exports.route53ResolverFirewallRule = exports.route53ResolverFirewallDomainList = exports.route53ResolverFirewallConfig = exports.route53ResolverEndpoint = exports.route53ResolverDnssecConfig = exports.route53Record = exports.route53QueryLog = exports.route53KeySigningKey = exports.route53HostedZoneDnssec = exports.route53HealthCheck = exports.route53DelegationSet = exports.route = exports.resourcegroupsGroup = exports.redshiftSubnetGroup = exports.redshiftSnapshotScheduleAssociation = exports.redshiftSnapshotSchedule = void 0;
exports.securityGroupRule = exports.securityGroup = exports.secretsmanagerSecretVersion = exports.secretsmanagerSecretRotation = exports.secretsmanagerSecretPolicy = exports.secretsmanagerSecret = exports.schemasSchema = exports.schemasRegistry = exports.schemasDiscoverer = exports.sagemakerWorkteam = exports.sagemakerWorkforce = exports.sagemakerUserProfile = exports.sagemakerStudioLifecycleConfig = exports.sagemakerProject = exports.sagemakerNotebookInstanceLifecycleConfiguration = exports.sagemakerNotebookInstance = exports.sagemakerModelPackageGroupPolicy = exports.sagemakerModelPackageGroup = exports.sagemakerModel = exports.sagemakerImageVersion = exports.sagemakerImage = exports.sagemakerHumanTaskUi = exports.sagemakerFlowDefinition = exports.sagemakerFeatureGroup = exports.sagemakerEndpointConfiguration = exports.sagemakerEndpoint = exports.sagemakerDomain = exports.sagemakerDeviceFleet = exports.sagemakerDevice = exports.sagemakerCodeRepository = exports.sagemakerAppImageConfig = exports.sagemakerApp = exports.s3OutpostsEndpoint = exports.s3ControlObjectLambdaAccessPointPolicy = exports.s3ControlObjectLambdaAccessPoint = exports.s3ControlMultiRegionAccessPointPolicy = exports.s3ControlMultiRegionAccessPoint = exports.s3ControlBucketPolicy = exports.s3ControlBucketLifecycleConfiguration = exports.s3ControlBucket = exports.s3ControlAccessPointPolicy = exports.s3ObjectCopy = exports.s3BucketWebsiteConfiguration = exports.s3BucketVersioning = exports.s3BucketServerSideEncryptionConfiguration = exports.s3BucketRequestPaymentConfiguration = exports.s3BucketReplicationConfiguration = exports.s3BucketPublicAccessBlock = exports.s3BucketPolicy = exports.s3BucketOwnershipControls = void 0;
exports.shieldProtectionHealthCheckAssociation = exports.shieldProtectionGroup = exports.shieldProtection = exports.sfnStateMachine = exports.sfnActivity = exports.sesTemplate = exports.sesReceiptRuleSet = exports.sesReceiptRule = exports.sesReceiptFilter = exports.sesIdentityPolicy = exports.sesIdentityNotificationTopic = exports.sesEventDestination = exports.sesEmailIdentity = exports.sesDomainMailFrom = exports.sesDomainIdentityVerification = exports.sesDomainIdentity = exports.sesDomainDkim = exports.sesConfigurationSet = exports.sesActiveReceiptRuleSet = exports.servicequotasServiceQuota = exports.servicecatalogTagOptionResourceAssociation = exports.servicecatalogTagOption = exports.servicecatalogServiceAction = exports.servicecatalogProvisioningArtifact = exports.servicecatalogProvisionedProduct = exports.servicecatalogProductPortfolioAssociation = exports.servicecatalogProduct = exports.servicecatalogPrincipalPortfolioAssociation = exports.servicecatalogPortfolioShare = exports.servicecatalogPortfolio = exports.servicecatalogOrganizationsAccess = exports.servicecatalogConstraint = exports.servicecatalogBudgetResourceAssociation = exports.serviceDiscoveryService = exports.serviceDiscoveryPublicDnsNamespace = exports.serviceDiscoveryPrivateDnsNamespace = exports.serviceDiscoveryInstance = exports.serviceDiscoveryHttpNamespace = exports.serverlessapplicationrepositoryCloudformationStack = exports.securityhubStandardsSubscription = exports.securityhubStandardsControl = exports.securityhubProductSubscription = exports.securityhubOrganizationConfiguration = exports.securityhubOrganizationAdminAccount = exports.securityhubMember = exports.securityhubInviteAccepter = exports.securityhubInsight = exports.securityhubFindingAggregator = exports.securityhubActionTarget = exports.securityhubAccount = void 0;
exports.vpc = exports.volumeAttachment = exports.transferUser = exports.transferSshKey = exports.transferServer = exports.transferAccess = exports.timestreamwriteTable = exports.timestreamwriteDatabase = exports.syntheticsCanary = exports.swfDomain = exports.subnet = exports.storagegatewayWorkingStorage = exports.storagegatewayUploadBuffer = exports.storagegatewayTapePool = exports.storagegatewayStoredIscsiVolume = exports.storagegatewaySmbFileShare = exports.storagegatewayNfsFileShare = exports.storagegatewayGateway = exports.storagegatewayFileSystemAssociation = exports.storagegatewayCachedIscsiVolume = exports.storagegatewayCache = exports.ssoadminPermissionSetInlinePolicy = exports.ssoadminPermissionSet = exports.ssoadminManagedPolicyAttachment = exports.ssoadminAccountAssignment = exports.ssmResourceDataSync = exports.ssmPatchGroup = exports.ssmPatchBaseline = exports.ssmParameter = exports.ssmMaintenanceWindowTask = exports.ssmMaintenanceWindowTarget = exports.ssmMaintenanceWindow = exports.ssmDocument = exports.ssmAssociation = exports.ssmActivation = exports.sqsQueuePolicy = exports.sqsQueue = exports.spotInstanceRequest = exports.spotFleetRequest = exports.spotDatafeedSubscription = exports.snsTopicSubscription = exports.snsTopicPolicy = exports.snsTopic = exports.snsSmsPreferences = exports.snsPlatformApplication = exports.snapshotCreateVolumePermission = exports.simpledbDomain = exports.signerSigningProfilePermission = exports.signerSigningProfile = exports.signerSigningJob = void 0;
exports.wafregionalWebAclAssociation = exports.wafregionalWebAcl = exports.wafregionalSqlInjectionMatchSet = exports.wafregionalSizeConstraintSet = exports.wafregionalRuleGroup = exports.wafregionalRule = exports.wafregionalRegexPatternSet = exports.wafregionalRegexMatchSet = exports.wafregionalRateBasedRule = exports.wafregionalIpset = exports.wafregionalGeoMatchSet = exports.wafregionalByteMatchSet = exports.wafXssMatchSet = exports.wafWebAcl = exports.wafSqlInjectionMatchSet = exports.wafSizeConstraintSet = exports.wafRuleGroup = exports.wafRule = exports.wafRegexPatternSet = exports.wafRegexMatchSet = exports.wafRateBasedRule = exports.wafIpset = exports.wafGeoMatchSet = exports.wafByteMatchSet = exports.vpnGatewayRoutePropagation = exports.vpnGatewayAttachment = exports.vpnGateway = exports.vpnConnectionRoute = exports.vpnConnection = exports.vpcPeeringConnectionOptions = exports.vpcPeeringConnectionAccepter = exports.vpcPeeringConnection = exports.vpcIpv6CidrBlockAssociation = exports.vpcIpv4CidrBlockAssociation = exports.vpcIpamScope = exports.vpcIpamPreviewNextCidr = exports.vpcIpamPoolCidrAllocation = exports.vpcIpamPoolCidr = exports.vpcIpamPool = exports.vpcIpamOrganizationAdminAccount = exports.vpcIpam = exports.vpcEndpointSubnetAssociation = exports.vpcEndpointServiceAllowedPrincipal = exports.vpcEndpointService = exports.vpcEndpointRouteTableAssociation = exports.vpcEndpointConnectionNotification = exports.vpcEndpointConnectionAccepter = exports.vpcEndpoint = exports.vpcDhcpOptionsAssociation = exports.vpcDhcpOptions = void 0;
exports.dataAwsCloudcontrolapiResource = exports.dataAwsCanonicalUserId = exports.dataAwsCallerIdentity = exports.dataAwsBillingServiceAccount = exports.dataAwsBatchSchedulingPolicy = exports.dataAwsBatchJobQueue = exports.dataAwsBatchComputeEnvironment = exports.dataAwsBackupVault = exports.dataAwsBackupSelection = exports.dataAwsBackupPlan = exports.dataAwsAvailabilityZones = exports.dataAwsAvailabilityZone = exports.dataAwsAutoscalingGroups = exports.dataAwsAutoscalingGroup = exports.dataAwsArn = exports.dataAwsAppmeshVirtualService = exports.dataAwsAppmeshMesh = exports.dataAwsApigatewayv2Export = exports.dataAwsApigatewayv2Apis = exports.dataAwsApigatewayv2Api = exports.dataAwsApiGatewayVpcLink = exports.dataAwsApiGatewaySdk = exports.dataAwsApiGatewayRestApi = exports.dataAwsApiGatewayResource = exports.dataAwsApiGatewayExport = exports.dataAwsApiGatewayDomainName = exports.dataAwsApiGatewayApiKey = exports.dataAwsAmiIds = exports.dataAwsAmi = exports.dataAwsAlbTargetGroup = exports.dataAwsAlbListener = exports.dataAwsAlb = exports.dataAwsAcmpcaCertificateAuthority = exports.dataAwsAcmpcaCertificate = exports.dataAwsAcmCertificate = exports.xraySamplingRule = exports.xrayGroup = exports.xrayEncryptionConfig = exports.workspacesWorkspace = exports.workspacesIpGroup = exports.workspacesDirectory = exports.worklinkWebsiteCertificateAuthorityAssociation = exports.worklinkFleet = exports.wafv2WebAclLoggingConfiguration = exports.wafv2WebAclAssociation = exports.wafv2WebAcl = exports.wafv2RuleGroup = exports.wafv2RegexPatternSet = exports.wafv2IpSet = exports.wafregionalXssMatchSet = void 0;
exports.dataAwsDxLocation = exports.dataAwsDxGateway = exports.dataAwsDxConnection = exports.dataAwsDocdbOrderableDbInstance = exports.dataAwsDocdbEngineVersion = exports.dataAwsDirectoryServiceDirectory = exports.dataAwsDefaultTags = exports.dataAwsDbSubnetGroup = exports.dataAwsDbSnapshot = exports.dataAwsDbProxy = exports.dataAwsDbInstance = exports.dataAwsDbEventCategories = exports.dataAwsDbClusterSnapshot = exports.dataAwsDatapipelinePipelineDefinition = exports.dataAwsDatapipelinePipeline = exports.dataAwsCustomerGateway = exports.dataAwsCurReportDefinition = exports.dataAwsConnectQuickConnect = exports.dataAwsConnectPrompt = exports.dataAwsConnectLambdaFunctionAssociation = exports.dataAwsConnectInstance = exports.dataAwsConnectHoursOfOperation = exports.dataAwsConnectContactFlowModule = exports.dataAwsConnectContactFlow = exports.dataAwsConnectBotAssociation = exports.dataAwsCognitoUserPools = exports.dataAwsCognitoUserPoolSigningCertificate = exports.dataAwsCognitoUserPoolClients = exports.dataAwsCognitoUserPoolClient = exports.dataAwsCodestarconnectionsConnection = exports.dataAwsCodecommitRepository = exports.dataAwsCodecommitApprovalRuleTemplate = exports.dataAwsCodeartifactRepositoryEndpoint = exports.dataAwsCodeartifactAuthorizationToken = exports.dataAwsCloudwatchLogGroups = exports.dataAwsCloudwatchLogGroup = exports.dataAwsCloudwatchEventSource = exports.dataAwsCloudwatchEventConnection = exports.dataAwsCloudtrailServiceAccount = exports.dataAwsCloudhsmV2Cluster = exports.dataAwsCloudfrontResponseHeadersPolicy = exports.dataAwsCloudfrontOriginRequestPolicy = exports.dataAwsCloudfrontOriginAccessIdentity = exports.dataAwsCloudfrontLogDeliveryCanonicalUserId = exports.dataAwsCloudfrontFunction = exports.dataAwsCloudfrontDistribution = exports.dataAwsCloudfrontCachePolicy = exports.dataAwsCloudformationType = exports.dataAwsCloudformationStack = exports.dataAwsCloudformationExport = void 0;
exports.dataAwsElasticBeanstalkApplication = exports.dataAwsEksNodeGroups = exports.dataAwsEksNodeGroup = exports.dataAwsEksClusters = exports.dataAwsEksClusterAuth = exports.dataAwsEksCluster = exports.dataAwsEksAddon = exports.dataAwsEip = exports.dataAwsEfsMountTarget = exports.dataAwsEfsFileSystem = exports.dataAwsEfsAccessPoints = exports.dataAwsEfsAccessPoint = exports.dataAwsEcsTaskDefinition = exports.dataAwsEcsService = exports.dataAwsEcsContainerDefinition = exports.dataAwsEcsCluster = exports.dataAwsEcrRepository = exports.dataAwsEcrImage = exports.dataAwsEcrAuthorizationToken = exports.dataAwsEc2TransitGatewayVpnAttachment = exports.dataAwsEc2TransitGatewayVpcAttachment = exports.dataAwsEc2TransitGatewayRouteTables = exports.dataAwsEc2TransitGatewayRouteTable = exports.dataAwsEc2TransitGatewayPeeringAttachment = exports.dataAwsEc2TransitGatewayDxGatewayAttachment = exports.dataAwsEc2TransitGateway = exports.dataAwsEc2SpotPrice = exports.dataAwsEc2ManagedPrefixList = exports.dataAwsEc2LocalGateways = exports.dataAwsEc2LocalGatewayVirtualInterfaceGroups = exports.dataAwsEc2LocalGatewayVirtualInterfaceGroup = exports.dataAwsEc2LocalGatewayVirtualInterface = exports.dataAwsEc2LocalGatewayRouteTables = exports.dataAwsEc2LocalGatewayRouteTable = exports.dataAwsEc2LocalGateway = exports.dataAwsEc2InstanceTypes = exports.dataAwsEc2InstanceTypeOfferings = exports.dataAwsEc2InstanceTypeOffering = exports.dataAwsEc2InstanceType = exports.dataAwsEc2Host = exports.dataAwsEc2CoipPools = exports.dataAwsEc2CoipPool = exports.dataAwsEbsVolumes = exports.dataAwsEbsVolume = exports.dataAwsEbsSnapshotIds = exports.dataAwsEbsSnapshot = exports.dataAwsEbsEncryptionByDefault = exports.dataAwsEbsDefaultKmsKey = exports.dataAwsDynamodbTable = exports.dataAwsDxLocations = void 0;
exports.dataAwsKmsAlias = exports.dataAwsKinesisStreamConsumer = exports.dataAwsKinesisStream = exports.dataAwsKinesisFirehoseDeliveryStream = exports.dataAwsKeyPair = exports.dataAwsIpRanges = exports.dataAwsIotEndpoint = exports.dataAwsInternetGateway = exports.dataAwsInstances = exports.dataAwsInstance = exports.dataAwsInspectorRulesPackages = exports.dataAwsImagebuilderInfrastructureConfigurations = exports.dataAwsImagebuilderInfrastructureConfiguration = exports.dataAwsImagebuilderImageRecipes = exports.dataAwsImagebuilderImageRecipe = exports.dataAwsImagebuilderImagePipeline = exports.dataAwsImagebuilderImage = exports.dataAwsImagebuilderDistributionConfigurations = exports.dataAwsImagebuilderDistributionConfiguration = exports.dataAwsImagebuilderComponents = exports.dataAwsImagebuilderComponent = exports.dataAwsIdentitystoreUser = exports.dataAwsIdentitystoreGroup = exports.dataAwsIamUsers = exports.dataAwsIamUserSshKey = exports.dataAwsIamUser = exports.dataAwsIamSessionContext = exports.dataAwsIamServerCertificate = exports.dataAwsIamRoles = exports.dataAwsIamRole = exports.dataAwsIamPolicyDocument = exports.dataAwsIamPolicy = exports.dataAwsIamInstanceProfile = exports.dataAwsIamGroup = exports.dataAwsIamAccountAlias = exports.dataAwsGuarddutyDetector = exports.dataAwsGlueScript = exports.dataAwsGlueDataCatalogEncryptionSettings = exports.dataAwsGlueConnection = exports.dataAwsGlobalacceleratorAccelerator = exports.dataAwsEmrReleaseLabels = exports.dataAwsElbServiceAccount = exports.dataAwsElbHostedZoneId = exports.dataAwsElb = exports.dataAwsElasticsearchDomain = exports.dataAwsElasticacheUser = exports.dataAwsElasticacheReplicationGroup = exports.dataAwsElasticacheCluster = exports.dataAwsElasticBeanstalkSolutionStack = exports.dataAwsElasticBeanstalkHostedZone = void 0;
exports.dataAwsQldbLedger = exports.dataAwsPricingProduct = exports.dataAwsPrefixList = exports.dataAwsPartition = exports.dataAwsOutpostsSites = exports.dataAwsOutpostsSite = exports.dataAwsOutpostsOutposts = exports.dataAwsOutpostsOutpostInstanceTypes = exports.dataAwsOutpostsOutpostInstanceType = exports.dataAwsOutpostsOutpost = exports.dataAwsOrganizationsResourceTags = exports.dataAwsOrganizationsOrganizationalUnits = exports.dataAwsOrganizationsOrganization = exports.dataAwsOrganizationsDelegatedServices = exports.dataAwsOrganizationsDelegatedAdministrators = exports.dataAwsNetworkInterfaces = exports.dataAwsNetworkInterface = exports.dataAwsNetworkAcls = exports.dataAwsNeptuneOrderableDbInstance = exports.dataAwsNeptuneEngineVersion = exports.dataAwsNatGateway = exports.dataAwsMskconnectWorkerConfiguration = exports.dataAwsMskconnectCustomPlugin = exports.dataAwsMskKafkaVersion = exports.dataAwsMskConfiguration = exports.dataAwsMskCluster = exports.dataAwsMskBrokerNodes = exports.dataAwsMqBroker = exports.dataAwsLexSlotType = exports.dataAwsLexIntent = exports.dataAwsLexBotAlias = exports.dataAwsLexBot = exports.dataAwsLbTargetGroup = exports.dataAwsLbListener = exports.dataAwsLb = exports.dataAwsLaunchTemplate = exports.dataAwsLaunchConfiguration = exports.dataAwsLambdaLayerVersion = exports.dataAwsLambdaInvocation = exports.dataAwsLambdaFunction = exports.dataAwsLambdaCodeSigningConfig = exports.dataAwsLambdaAlias = exports.dataAwsLakeformationResource = exports.dataAwsLakeformationPermissions = exports.dataAwsLakeformationDataLakeSettings = exports.dataAwsKmsSecrets = exports.dataAwsKmsSecret = exports.dataAwsKmsPublicKey = exports.dataAwsKmsKey = exports.dataAwsKmsCiphertext = void 0;
exports.dataAwsSsmPatchBaseline = exports.dataAwsSsmParametersByPath = exports.dataAwsSsmParameter = exports.dataAwsSsmDocument = exports.dataAwsSqsQueue = exports.dataAwsSnsTopic = exports.dataAwsSignerSigningProfile = exports.dataAwsSignerSigningJob = exports.dataAwsSfnStateMachine = exports.dataAwsSfnActivity = exports.dataAwsSesEmailIdentity = exports.dataAwsSesDomainIdentity = exports.dataAwsSesActiveReceiptRuleSet = exports.dataAwsServicequotasServiceQuota = exports.dataAwsServicequotasService = exports.dataAwsServicecatalogProduct = exports.dataAwsServicecatalogPortfolioConstraints = exports.dataAwsServicecatalogPortfolio = exports.dataAwsServicecatalogLaunchPaths = exports.dataAwsServicecatalogConstraint = exports.dataAwsServiceDiscoveryDnsNamespace = exports.dataAwsServerlessapplicationrepositoryApplication = exports.dataAwsSecurityGroups = exports.dataAwsSecurityGroup = exports.dataAwsSecretsmanagerSecretVersion = exports.dataAwsSecretsmanagerSecretRotation = exports.dataAwsSecretsmanagerSecret = exports.dataAwsSagemakerPrebuiltEcrImage = exports.dataAwsS3BucketObjects = exports.dataAwsS3BucketObject = exports.dataAwsS3Bucket = exports.dataAwsRouteTables = exports.dataAwsRouteTable = exports.dataAwsRoute53Zone = exports.dataAwsRoute53ResolverRules = exports.dataAwsRoute53ResolverRule = exports.dataAwsRoute53ResolverEndpoint = exports.dataAwsRoute53DelegationSet = exports.dataAwsRoute = exports.dataAwsResourcegroupstaggingapiResources = exports.dataAwsRegions = exports.dataAwsRegion = exports.dataAwsRedshiftServiceAccount = exports.dataAwsRedshiftOrderableCluster = exports.dataAwsRedshiftCluster = exports.dataAwsRdsOrderableDbInstance = exports.dataAwsRdsEngineVersion = exports.dataAwsRdsCluster = exports.dataAwsRdsCertificate = exports.dataAwsRamResourceShare = void 0;
exports.provider = exports.dataAwsWorkspacesWorkspace = exports.dataAwsWorkspacesImage = exports.dataAwsWorkspacesDirectory = exports.dataAwsWorkspacesBundle = exports.dataAwsWafv2WebAcl = exports.dataAwsWafv2RuleGroup = exports.dataAwsWafv2RegexPatternSet = exports.dataAwsWafv2IpSet = exports.dataAwsWafregionalWebAcl = exports.dataAwsWafregionalRule = exports.dataAwsWafregionalRateBasedRule = exports.dataAwsWafregionalIpset = exports.dataAwsWafWebAcl = exports.dataAwsWafRule = exports.dataAwsWafRateBasedRule = exports.dataAwsWafIpset = exports.dataAwsVpnGateway = exports.dataAwsVpcs = exports.dataAwsVpcPeeringConnections = exports.dataAwsVpcPeeringConnection = exports.dataAwsVpcIpamPreviewNextCidr = exports.dataAwsVpcIpamPool = exports.dataAwsVpcEndpointService = exports.dataAwsVpcEndpoint = exports.dataAwsVpcDhcpOptions = exports.dataAwsVpc = exports.dataAwsTransferServer = exports.dataAwsSubnets = exports.dataAwsSubnetIds = exports.dataAwsSubnet = exports.dataAwsStoragegatewayLocalDisk = exports.dataAwsSsoadminPermissionSet = exports.dataAwsSsoadminInstances = void 0;
// generated by cdktf get
exports.accessanalyzerAnalyzer = require("./accessanalyzer-analyzer");
exports.accountAlternateContact = require("./account-alternate-contact");
exports.acmCertificate = require("./acm-certificate");
exports.acmCertificateValidation = require("./acm-certificate-validation");
exports.acmpcaCertificate = require("./acmpca-certificate");
exports.acmpcaCertificateAuthority = require("./acmpca-certificate-authority");
exports.acmpcaCertificateAuthorityCertificate = require("./acmpca-certificate-authority-certificate");
exports.alb = require("./alb");
exports.albListener = require("./alb-listener");
exports.albListenerCertificate = require("./alb-listener-certificate");
exports.albListenerRule = require("./alb-listener-rule");
exports.albTargetGroup = require("./alb-target-group");
exports.albTargetGroupAttachment = require("./alb-target-group-attachment");
exports.ami = require("./ami");
exports.amiCopy = require("./ami-copy");
exports.amiFromInstance = require("./ami-from-instance");
exports.amiLaunchPermission = require("./ami-launch-permission");
exports.amplifyApp = require("./amplify-app");
exports.amplifyBackendEnvironment = require("./amplify-backend-environment");
exports.amplifyBranch = require("./amplify-branch");
exports.amplifyDomainAssociation = require("./amplify-domain-association");
exports.amplifyWebhook = require("./amplify-webhook");
exports.apiGatewayAccount = require("./api-gateway-account");
exports.apiGatewayApiKey = require("./api-gateway-api-key");
exports.apiGatewayAuthorizer = require("./api-gateway-authorizer");
exports.apiGatewayBasePathMapping = require("./api-gateway-base-path-mapping");
exports.apiGatewayClientCertificate = require("./api-gateway-client-certificate");
exports.apiGatewayDeployment = require("./api-gateway-deployment");
exports.apiGatewayDocumentationPart = require("./api-gateway-documentation-part");
exports.apiGatewayDocumentationVersion = require("./api-gateway-documentation-version");
exports.apiGatewayDomainName = require("./api-gateway-domain-name");
exports.apiGatewayGatewayResponse = require("./api-gateway-gateway-response");
exports.apiGatewayIntegration = require("./api-gateway-integration");
exports.apiGatewayIntegrationResponse = require("./api-gateway-integration-response");
exports.apiGatewayMethod = require("./api-gateway-method");
exports.apiGatewayMethodResponse = require("./api-gateway-method-response");
exports.apiGatewayMethodSettings = require("./api-gateway-method-settings");
exports.apiGatewayModel = require("./api-gateway-model");
exports.apiGatewayRequestValidator = require("./api-gateway-request-validator");
exports.apiGatewayResource = require("./api-gateway-resource");
exports.apiGatewayRestApi = require("./api-gateway-rest-api");
exports.apiGatewayRestApiPolicy = require("./api-gateway-rest-api-policy");
exports.apiGatewayStage = require("./api-gateway-stage");
exports.apiGatewayUsagePlan = require("./api-gateway-usage-plan");
exports.apiGatewayUsagePlanKey = require("./api-gateway-usage-plan-key");
exports.apiGatewayVpcLink = require("./api-gateway-vpc-link");
exports.apigatewayv2Api = require("./apigatewayv2-api");
exports.apigatewayv2ApiMapping = require("./apigatewayv2-api-mapping");
exports.apigatewayv2Authorizer = require("./apigatewayv2-authorizer");
exports.apigatewayv2Deployment = require("./apigatewayv2-deployment");
exports.apigatewayv2DomainName = require("./apigatewayv2-domain-name");
exports.apigatewayv2Integration = require("./apigatewayv2-integration");
exports.apigatewayv2IntegrationResponse = require("./apigatewayv2-integration-response");
exports.apigatewayv2Model = require("./apigatewayv2-model");
exports.apigatewayv2Route = require("./apigatewayv2-route");
exports.apigatewayv2RouteResponse = require("./apigatewayv2-route-response");
exports.apigatewayv2Stage = require("./apigatewayv2-stage");
exports.apigatewayv2VpcLink = require("./apigatewayv2-vpc-link");
exports.appCookieStickinessPolicy = require("./app-cookie-stickiness-policy");
exports.appautoscalingPolicy = require("./appautoscaling-policy");
exports.appautoscalingScheduledAction = require("./appautoscaling-scheduled-action");
exports.appautoscalingTarget = require("./appautoscaling-target");
exports.appconfigApplication = require("./appconfig-application");
exports.appconfigConfigurationProfile = require("./appconfig-configuration-profile");
exports.appconfigDeployment = require("./appconfig-deployment");
exports.appconfigDeploymentStrategy = require("./appconfig-deployment-strategy");
exports.appconfigEnvironment = require("./appconfig-environment");
exports.appconfigHostedConfigurationVersion = require("./appconfig-hosted-configuration-version");
exports.appmeshGatewayRoute = require("./appmesh-gateway-route");
exports.appmeshMesh = require("./appmesh-mesh");
exports.appmeshRoute = require("./appmesh-route");
exports.appmeshVirtualGateway = require("./appmesh-virtual-gateway");
exports.appmeshVirtualNode = require("./appmesh-virtual-node");
exports.appmeshVirtualRouter = require("./appmesh-virtual-router");
exports.appmeshVirtualService = require("./appmesh-virtual-service");
exports.apprunnerAutoScalingConfigurationVersion = require("./apprunner-auto-scaling-configuration-version");
exports.apprunnerConnection = require("./apprunner-connection");
exports.apprunnerCustomDomainAssociation = require("./apprunner-custom-domain-association");
exports.apprunnerService = require("./apprunner-service");
exports.appstreamDirectoryConfig = require("./appstream-directory-config");
exports.appstreamFleet = require("./appstream-fleet");
exports.appstreamFleetStackAssociation = require("./appstream-fleet-stack-association");
exports.appstreamImageBuilder = require("./appstream-image-builder");
exports.appstreamStack = require("./appstream-stack");
exports.appstreamUser = require("./appstream-user");
exports.appstreamUserStackAssociation = require("./appstream-user-stack-association");
exports.appsyncApiCache = require("./appsync-api-cache");
exports.appsyncApiKey = require("./appsync-api-key");
exports.appsyncDatasource = require("./appsync-datasource");
exports.appsyncDomainName = require("./appsync-domain-name");
exports.appsyncDomainNameApiAssociation = require("./appsync-domain-name-api-association");
exports.appsyncFunction = require("./appsync-function");
exports.appsyncGraphqlApi = require("./appsync-graphql-api");
exports.appsyncResolver = require("./appsync-resolver");
exports.athenaDatabase = require("./athena-database");
exports.athenaNamedQuery = require("./athena-named-query");
exports.athenaWorkgroup = require("./athena-workgroup");
exports.autoscalingAttachment = require("./autoscaling-attachment");
exports.autoscalingGroup = require("./autoscaling-group");
exports.autoscalingGroupTag = require("./autoscaling-group-tag");
exports.autoscalingLifecycleHook = require("./autoscaling-lifecycle-hook");
exports.autoscalingNotification = require("./autoscaling-notification");
exports.autoscalingPolicy = require("./autoscaling-policy");
exports.autoscalingSchedule = require("./autoscaling-schedule");
exports.autoscalingplansScalingPlan = require("./autoscalingplans-scaling-plan");
exports.backupGlobalSettings = require("./backup-global-settings");
exports.backupPlan = require("./backup-plan");
exports.backupRegionSettings = require("./backup-region-settings");
exports.backupSelection = require("./backup-selection");
exports.backupVault = require("./backup-vault");
exports.backupVaultLockConfiguration = require("./backup-vault-lock-configuration");
exports.backupVaultNotifications = require("./backup-vault-notifications");
exports.backupVaultPolicy = require("./backup-vault-policy");
exports.batchComputeEnvironment = require("./batch-compute-environment");
exports.batchJobDefinition = require("./batch-job-definition");
exports.batchJobQueue = require("./batch-job-queue");
exports.batchSchedulingPolicy = require("./batch-scheduling-policy");
exports.budgetsBudget = require("./budgets-budget");
exports.budgetsBudgetAction = require("./budgets-budget-action");
exports.chimeVoiceConnector = require("./chime-voice-connector");
exports.chimeVoiceConnectorGroup = require("./chime-voice-connector-group");
exports.chimeVoiceConnectorLogging = require("./chime-voice-connector-logging");
exports.chimeVoiceConnectorOrigination = require("./chime-voice-connector-origination");
exports.chimeVoiceConnectorStreaming = require("./chime-voice-connector-streaming");
exports.chimeVoiceConnectorTermination = require("./chime-voice-connector-termination");
exports.chimeVoiceConnectorTerminationCredentials = require("./chime-voice-connector-termination-credentials");
exports.cloud9EnvironmentEc2 = require("./cloud9-environment-ec2");
exports.cloud9EnvironmentMembership = require("./cloud9-environment-membership");
exports.cloudcontrolapiResource = require("./cloudcontrolapi-resource");
exports.cloudformationStack = require("./cloudformation-stack");
exports.cloudformationStackSet = require("./cloudformation-stack-set");
exports.cloudformationStackSetInstance = require("./cloudformation-stack-set-instance");
exports.cloudformationType = require("./cloudformation-type");
exports.cloudfrontCachePolicy = require("./cloudfront-cache-policy");
exports.cloudfrontDistribution = require("./cloudfront-distribution");
exports.cloudfrontFieldLevelEncryptionConfig = require("./cloudfront-field-level-encryption-config");
exports.cloudfrontFieldLevelEncryptionProfile = require("./cloudfront-field-level-encryption-profile");
exports.cloudfrontFunction = require("./cloudfront-function");
exports.cloudfrontKeyGroup = require("./cloudfront-key-group");
exports.cloudfrontMonitoringSubscription = require("./cloudfront-monitoring-subscription");
exports.cloudfrontOriginAccessIdentity = require("./cloudfront-origin-access-identity");
exports.cloudfrontOriginRequestPolicy = require("./cloudfront-origin-request-policy");
exports.cloudfrontPublicKey = require("./cloudfront-public-key");
exports.cloudfrontRealtimeLogConfig = require("./cloudfront-realtime-log-config");
exports.cloudfrontResponseHeadersPolicy = require("./cloudfront-response-headers-policy");
exports.cloudhsmV2Cluster = require("./cloudhsm-v2-cluster");
exports.cloudhsmV2Hsm = require("./cloudhsm-v2-hsm");
exports.cloudsearchDomain = require("./cloudsearch-domain");
exports.cloudsearchDomainServiceAccessPolicy = require("./cloudsearch-domain-service-access-policy");
exports.cloudtrail = require("./cloudtrail");
exports.cloudwatchCompositeAlarm = require("./cloudwatch-composite-alarm");
exports.cloudwatchDashboard = require("./cloudwatch-dashboard");
exports.cloudwatchEventApiDestination = require("./cloudwatch-event-api-destination");
exports.cloudwatchEventArchive = require("./cloudwatch-event-archive");
exports.cloudwatchEventBus = require("./cloudwatch-event-bus");
exports.cloudwatchEventBusPolicy = require("./cloudwatch-event-bus-policy");
exports.cloudwatchEventConnection = require("./cloudwatch-event-connection");
exports.cloudwatchEventPermission = require("./cloudwatch-event-permission");
exports.cloudwatchEventRule = require("./cloudwatch-event-rule");
exports.cloudwatchEventTarget = require("./cloudwatch-event-target");
exports.cloudwatchLogDestination = require("./cloudwatch-log-destination");
exports.cloudwatchLogDestinationPolicy = require("./cloudwatch-log-destination-policy");
exports.cloudwatchLogGroup = require("./cloudwatch-log-group");
exports.cloudwatchLogMetricFilter = require("./cloudwatch-log-metric-filter");
exports.cloudwatchLogResourcePolicy = require("./cloudwatch-log-resource-policy");
exports.cloudwatchLogStream = require("./cloudwatch-log-stream");
exports.cloudwatchLogSubscriptionFilter = require("./cloudwatch-log-subscription-filter");
exports.cloudwatchMetricAlarm = require("./cloudwatch-metric-alarm");
exports.cloudwatchMetricStream = require("./cloudwatch-metric-stream");
exports.cloudwatchQueryDefinition = require("./cloudwatch-query-definition");
exports.codeartifactDomain = require("./codeartifact-domain");
exports.codeartifactDomainPermissionsPolicy = require("./codeartifact-domain-permissions-policy");
exports.codeartifactRepository = require("./codeartifact-repository");
exports.codeartifactRepositoryPermissionsPolicy = require("./codeartifact-repository-permissions-policy");
exports.codebuildProject = require("./codebuild-project");
exports.codebuildReportGroup = require("./codebuild-report-group");
exports.codebuildResourcePolicy = require("./codebuild-resource-policy");
exports.codebuildSourceCredential = require("./codebuild-source-credential");
exports.codebuildWebhook = require("./codebuild-webhook");
exports.codecommitApprovalRuleTemplate = require("./codecommit-approval-rule-template");
exports.codecommitApprovalRuleTemplateAssociation = require("./codecommit-approval-rule-template-association");
exports.codecommitRepository = require("./codecommit-repository");
exports.codecommitTrigger = require("./codecommit-trigger");
exports.codedeployApp = require("./codedeploy-app");
exports.codedeployDeploymentConfig = require("./codedeploy-deployment-config");
exports.codedeployDeploymentGroup = require("./codedeploy-deployment-group");
exports.codepipeline = require("./codepipeline");
exports.codepipelineWebhook = require("./codepipeline-webhook");
exports.codestarconnectionsConnection = require("./codestarconnections-connection");
exports.codestarconnectionsHost = require("./codestarconnections-host");
exports.codestarnotificationsNotificationRule = require("./codestarnotifications-notification-rule");
exports.cognitoIdentityPool = require("./cognito-identity-pool");
exports.cognitoIdentityPoolProviderPrincipalTag = require("./cognito-identity-pool-provider-principal-tag");
exports.cognitoIdentityPoolRolesAttachment = require("./cognito-identity-pool-roles-attachment");
exports.cognitoIdentityProvider = require("./cognito-identity-provider");
exports.cognitoResourceServer = require("./cognito-resource-server");
exports.cognitoUserGroup = require("./cognito-user-group");
exports.cognitoUserPool = require("./cognito-user-pool");
exports.cognitoUserPoolClient = require("./cognito-user-pool-client");
exports.cognitoUserPoolDomain = require("./cognito-user-pool-domain");
exports.cognitoUserPoolUiCustomization = require("./cognito-user-pool-ui-customization");
exports.configAggregateAuthorization = require("./config-aggregate-authorization");
exports.configConfigRule = require("./config-config-rule");
exports.configConfigurationAggregator = require("./config-configuration-aggregator");
exports.configConfigurationRecorder = require("./config-configuration-recorder");
exports.configConfigurationRecorderStatus = require("./config-configuration-recorder-status");
exports.configConformancePack = require("./config-conformance-pack");
exports.configDeliveryChannel = require("./config-delivery-channel");
exports.configOrganizationConformancePack = require("./config-organization-conformance-pack");
exports.configOrganizationCustomRule = require("./config-organization-custom-rule");
exports.configOrganizationManagedRule = require("./config-organization-managed-rule");
exports.configRemediationConfiguration = require("./config-remediation-configuration");
exports.connectBotAssociation = require("./connect-bot-association");
exports.connectContactFlow = require("./connect-contact-flow");
exports.connectContactFlowModule = require("./connect-contact-flow-module");
exports.connectHoursOfOperation = require("./connect-hours-of-operation");
exports.connectInstance = require("./connect-instance");
exports.connectLambdaFunctionAssociation = require("./connect-lambda-function-association");
exports.connectQueue = require("./connect-queue");
exports.connectQuickConnect = require("./connect-quick-connect");
exports.connectSecurityProfile = require("./connect-security-profile");
exports.curReportDefinition = require("./cur-report-definition");
exports.customerGateway = require("./customer-gateway");
exports.dataexchangeDataSet = require("./dataexchange-data-set");
exports.datapipelinePipeline = require("./datapipeline-pipeline");
exports.datapipelinePipelineDefinition = require("./datapipeline-pipeline-definition");
exports.datasyncAgent = require("./datasync-agent");
exports.datasyncLocationEfs = require("./datasync-location-efs");
exports.datasyncLocationFsxLustreFileSystem = require("./datasync-location-fsx-lustre-file-system");
exports.datasyncLocationFsxWindowsFileSystem = require("./datasync-location-fsx-windows-file-system");
exports.datasyncLocationHdfs = require("./datasync-location-hdfs");
exports.datasyncLocationNfs = require("./datasync-location-nfs");
exports.datasyncLocationS3 = require("./datasync-location-s3");
exports.datasyncLocationSmb = require("./datasync-location-smb");
exports.datasyncTask = require("./datasync-task");
exports.daxCluster = require("./dax-cluster");
exports.daxParameterGroup = require("./dax-parameter-group");
exports.daxSubnetGroup = require("./dax-subnet-group");
exports.dbClusterSnapshot = require("./db-cluster-snapshot");
exports.dbEventSubscription = require("./db-event-subscription");
exports.dbInstance = require("./db-instance");
exports.dbInstanceRoleAssociation = require("./db-instance-role-association");
exports.dbOptionGroup = require("./db-option-group");
exports.dbParameterGroup = require("./db-parameter-group");
exports.dbProxy = require("./db-proxy");
exports.dbProxyDefaultTargetGroup = require("./db-proxy-default-target-group");
exports.dbProxyEndpoint = require("./db-proxy-endpoint");
exports.dbProxyTarget = require("./db-proxy-target");
exports.dbSecurityGroup = require("./db-security-group");
exports.dbSnapshot = require("./db-snapshot");
exports.dbSubnetGroup = require("./db-subnet-group");
exports.defaultNetworkAcl = require("./default-network-acl");
exports.defaultRouteTable = require("./default-route-table");
exports.defaultSecurityGroup = require("./default-security-group");
exports.defaultSubnet = require("./default-subnet");
exports.defaultVpc = require("./default-vpc");
exports.defaultVpcDhcpOptions = require("./default-vpc-dhcp-options");
exports.detectiveGraph = require("./detective-graph");
exports.detectiveInvitationAccepter = require("./detective-invitation-accepter");
exports.detectiveMember = require("./detective-member");
exports.devicefarmDevicePool = require("./devicefarm-device-pool");
exports.devicefarmInstanceProfile = require("./devicefarm-instance-profile");
exports.devicefarmNetworkProfile = require("./devicefarm-network-profile");
exports.devicefarmProject = require("./devicefarm-project");
exports.devicefarmTestGridProject = require("./devicefarm-test-grid-project");
exports.devicefarmUpload = require("./devicefarm-upload");
exports.directoryServiceConditionalForwarder = require("./directory-service-conditional-forwarder");
exports.directoryServiceDirectory = require("./directory-service-directory");
exports.directoryServiceLogSubscription = require("./directory-service-log-subscription");
exports.dlmLifecyclePolicy = require("./dlm-lifecycle-policy");
exports.dmsCertificate = require("./dms-certificate");
exports.dmsEndpoint = require("./dms-endpoint");
exports.dmsEventSubscription = require("./dms-event-subscription");
exports.dmsReplicationInstance = require("./dms-replication-instance");
exports.dmsReplicationSubnetGroup = require("./dms-replication-subnet-group");
exports.dmsReplicationTask = require("./dms-replication-task");
exports.docdbCluster = require("./docdb-cluster");
exports.docdbClusterInstance = require("./docdb-cluster-instance");
exports.docdbClusterParameterGroup = require("./docdb-cluster-parameter-group");
exports.docdbClusterSnapshot = require("./docdb-cluster-snapshot");
exports.docdbGlobalCluster = require("./docdb-global-cluster");
exports.docdbSubnetGroup = require("./docdb-subnet-group");
exports.dxBgpPeer = require("./dx-bgp-peer");
exports.dxConnection = require("./dx-connection");
exports.dxConnectionAssociation = require("./dx-connection-association");
exports.dxConnectionConfirmation = require("./dx-connection-confirmation");
exports.dxGateway = require("./dx-gateway");
exports.dxGatewayAssociation = require("./dx-gateway-association");
exports.dxGatewayAssociationProposal = require("./dx-gateway-association-proposal");
exports.dxHostedConnection = require("./dx-hosted-connection");
exports.dxHostedPrivateVirtualInterface = require("./dx-hosted-private-virtual-interface");
exports.dxHostedPrivateVirtualInterfaceAccepter = require("./dx-hosted-private-virtual-interface-accepter");
exports.dxHostedPublicVirtualInterface = require("./dx-hosted-public-virtual-interface");
exports.dxHostedPublicVirtualInterfaceAccepter = require("./dx-hosted-public-virtual-interface-accepter");
exports.dxHostedTransitVirtualInterface = require("./dx-hosted-transit-virtual-interface");
exports.dxHostedTransitVirtualInterfaceAccepter = require("./dx-hosted-transit-virtual-interface-accepter");
exports.dxLag = require("./dx-lag");
exports.dxPrivateVirtualInterface = require("./dx-private-virtual-interface");
exports.dxPublicVirtualInterface = require("./dx-public-virtual-interface");
exports.dxTransitVirtualInterface = require("./dx-transit-virtual-interface");
exports.dynamodbGlobalTable = require("./dynamodb-global-table");
exports.dynamodbKinesisStreamingDestination = require("./dynamodb-kinesis-streaming-destination");
exports.dynamodbTable = require("./dynamodb-table");
exports.dynamodbTableItem = require("./dynamodb-table-item");
exports.dynamodbTag = require("./dynamodb-tag");
exports.ebsDefaultKmsKey = require("./ebs-default-kms-key");
exports.ebsEncryptionByDefault = require("./ebs-encryption-by-default");
exports.ebsSnapshot = require("./ebs-snapshot");
exports.ebsSnapshotCopy = require("./ebs-snapshot-copy");
exports.ebsSnapshotImport = require("./ebs-snapshot-import");
exports.ebsVolume = require("./ebs-volume");
exports.ec2AvailabilityZoneGroup = require("./ec2-availability-zone-group");
exports.ec2CapacityReservation = require("./ec2-capacity-reservation");
exports.ec2CarrierGateway = require("./ec2-carrier-gateway");
exports.ec2ClientVpnAuthorizationRule = require("./ec2-client-vpn-authorization-rule");
exports.ec2ClientVpnEndpoint = require("./ec2-client-vpn-endpoint");
exports.ec2ClientVpnNetworkAssociation = require("./ec2-client-vpn-network-association");
exports.ec2ClientVpnRoute = require("./ec2-client-vpn-route");
exports.ec2Fleet = require("./ec2-fleet");
exports.ec2Host = require("./ec2-host");
exports.ec2LocalGatewayRoute = require("./ec2-local-gateway-route");
exports.ec2LocalGatewayRouteTableVpcAssociation = require("./ec2-local-gateway-route-table-vpc-association");
exports.ec2ManagedPrefixList = require("./ec2-managed-prefix-list");
exports.ec2ManagedPrefixListEntry = require("./ec2-managed-prefix-list-entry");
exports.ec2SubnetCidrReservation = require("./ec2-subnet-cidr-reservation");
exports.ec2Tag = require("./ec2-tag");
exports.ec2TrafficMirrorFilter = require("./ec2-traffic-mirror-filter");
exports.ec2TrafficMirrorFilterRule = require("./ec2-traffic-mirror-filter-rule");
exports.ec2TrafficMirrorSession = require("./ec2-traffic-mirror-session");
exports.ec2TrafficMirrorTarget = require("./ec2-traffic-mirror-target");
exports.ec2TransitGateway = require("./ec2-transit-gateway");
exports.ec2TransitGatewayPeeringAttachment = require("./ec2-transit-gateway-peering-attachment");
exports.ec2TransitGatewayPeeringAttachmentAccepter = require("./ec2-transit-gateway-peering-attachment-accepter");
exports.ec2TransitGatewayPrefixListReference = require("./ec2-transit-gateway-prefix-list-reference");
exports.ec2TransitGatewayRoute = require("./ec2-transit-gateway-route");
exports.ec2TransitGatewayRouteTable = require("./ec2-transit-gateway-route-table");
exports.ec2TransitGatewayRouteTableAssociation = require("./ec2-transit-gateway-route-table-association");
exports.ec2TransitGatewayRouteTablePropagation = require("./ec2-transit-gateway-route-table-propagation");
exports.ec2TransitGatewayVpcAttachment = require("./ec2-transit-gateway-vpc-attachment");
exports.ec2TransitGatewayVpcAttachmentAccepter = require("./ec2-transit-gateway-vpc-attachment-accepter");
exports.ec2EnclaveCertificateIamRoleAssociation = require("./ec2-enclave-certificate-iam-role-association");
exports.ecrLifecyclePolicy = require("./ecr-lifecycle-policy");
exports.ecrPullThroughCacheRule = require("./ecr-pull-through-cache-rule");
exports.ecrRegistryPolicy = require("./ecr-registry-policy");
exports.ecrRegistryScanningConfiguration = require("./ecr-registry-scanning-configuration");
exports.ecrReplicationConfiguration = require("./ecr-replication-configuration");
exports.ecrRepository = require("./ecr-repository");
exports.ecrRepositoryPolicy = require("./ecr-repository-policy");
exports.ecrpublicRepository = require("./ecrpublic-repository");
exports.ecrpublicRepositoryPolicy = require("./ecrpublic-repository-policy");
exports.ecsAccountSettingDefault = require("./ecs-account-setting-default");
exports.ecsCapacityProvider = require("./ecs-capacity-provider");
exports.ecsCluster = require("./ecs-cluster");
exports.ecsClusterCapacityProviders = require("./ecs-cluster-capacity-providers");
exports.ecsService = require("./ecs-service");
exports.ecsTag = require("./ecs-tag");
exports.ecsTaskDefinition = require("./ecs-task-definition");
exports.ecsTaskSet = require("./ecs-task-set");
exports.efsAccessPoint = require("./efs-access-point");
exports.efsBackupPolicy = require("./efs-backup-policy");
exports.efsFileSystem = require("./efs-file-system");
exports.efsFileSystemPolicy = require("./efs-file-system-policy");
exports.efsMountTarget = require("./efs-mount-target");
exports.egressOnlyInternetGateway = require("./egress-only-internet-gateway");
exports.eip = require("./eip");
exports.eipAssociation = require("./eip-association");
exports.eksAddon = require("./eks-addon");
exports.eksCluster = require("./eks-cluster");
exports.eksFargateProfile = require("./eks-fargate-profile");
exports.eksIdentityProviderConfig = require("./eks-identity-provider-config");
exports.eksNodeGroup = require("./eks-node-group");
exports.elasticBeanstalkApplication = require("./elastic-beanstalk-application");
exports.elasticBeanstalkApplicationVersion = require("./elastic-beanstalk-application-version");
exports.elasticBeanstalkConfigurationTemplate = require("./elastic-beanstalk-configuration-template");
exports.elasticBeanstalkEnvironment = require("./elastic-beanstalk-environment");
exports.elasticacheCluster = require("./elasticache-cluster");
exports.elasticacheGlobalReplicationGroup = require("./elasticache-global-replication-group");
exports.elasticacheParameterGroup = require("./elasticache-parameter-group");
exports.elasticacheReplicationGroup = require("./elasticache-replication-group");
exports.elasticacheSecurityGroup = require("./elasticache-security-group");
exports.elasticacheSubnetGroup = require("./elasticache-subnet-group");
exports.elasticacheUser = require("./elasticache-user");
exports.elasticacheUserGroup = require("./elasticache-user-group");
exports.elasticsearchDomain = require("./elasticsearch-domain");
exports.elasticsearchDomainPolicy = require("./elasticsearch-domain-policy");
exports.elasticsearchDomainSamlOptions = require("./elasticsearch-domain-saml-options");
exports.elastictranscoderPipeline = require("./elastictranscoder-pipeline");
exports.elastictranscoderPreset = require("./elastictranscoder-preset");
exports.elb = require("./elb");
exports.elbAttachment = require("./elb-attachment");
exports.emrCluster = require("./emr-cluster");
exports.emrInstanceFleet = require("./emr-instance-fleet");
exports.emrInstanceGroup = require("./emr-instance-group");
exports.emrManagedScalingPolicy = require("./emr-managed-scaling-policy");
exports.emrSecurityConfiguration = require("./emr-security-configuration");
exports.emrStudio = require("./emr-studio");
exports.emrStudioSessionMapping = require("./emr-studio-session-mapping");
exports.flowLog = require("./flow-log");
exports.fmsAdminAccount = require("./fms-admin-account");
exports.fmsPolicy = require("./fms-policy");
exports.fsxBackup = require("./fsx-backup");
exports.fsxDataRepositoryAssociation = require("./fsx-data-repository-association");
exports.fsxLustreFileSystem = require("./fsx-lustre-file-system");
exports.fsxOntapFileSystem = require("./fsx-ontap-file-system");
exports.fsxOntapStorageVirtualMachine = require("./fsx-ontap-storage-virtual-machine");
exports.fsxOntapVolume = require("./fsx-ontap-volume");
exports.fsxOpenzfsFileSystem = require("./fsx-openzfs-file-system");
exports.fsxOpenzfsSnapshot = require("./fsx-openzfs-snapshot");
exports.fsxOpenzfsVolume = require("./fsx-openzfs-volume");
exports.fsxWindowsFileSystem = require("./fsx-windows-file-system");
exports.gameliftAlias = require("./gamelift-alias");
exports.gameliftBuild = require("./gamelift-build");
exports.gameliftFleet = require("./gamelift-fleet");
exports.gameliftGameSessionQueue = require("./gamelift-game-session-queue");
exports.glacierVault = require("./glacier-vault");
exports.glacierVaultLock = require("./glacier-vault-lock");
exports.globalacceleratorAccelerator = require("./globalaccelerator-accelerator");
exports.globalacceleratorEndpointGroup = require("./globalaccelerator-endpoint-group");
exports.globalacceleratorListener = require("./globalaccelerator-listener");
exports.glueCatalogDatabase = require("./glue-catalog-database");
exports.glueCatalogTable = require("./glue-catalog-table");
exports.glueClassifier = require("./glue-classifier");
exports.glueConnection = require("./glue-connection");
exports.glueCrawler = require("./glue-crawler");
exports.glueDataCatalogEncryptionSettings = require("./glue-data-catalog-encryption-settings");
exports.glueDevEndpoint = require("./glue-dev-endpoint");
exports.glueJob = require("./glue-job");
exports.glueMlTransform = require("./glue-ml-transform");
exports.gluePartition = require("./glue-partition");
exports.gluePartitionIndex = require("./glue-partition-index");
exports.glueRegistry = require("./glue-registry");
exports.glueResourcePolicy = require("./glue-resource-policy");
exports.glueSchema = require("./glue-schema");
exports.glueSecurityConfiguration = require("./glue-security-configuration");
exports.glueTrigger = require("./glue-trigger");
exports.glueUserDefinedFunction = require("./glue-user-defined-function");
exports.glueWorkflow = require("./glue-workflow");
exports.guarddutyDetector = require("./guardduty-detector");
exports.guarddutyFilter = require("./guardduty-filter");
exports.guarddutyInviteAccepter = require("./guardduty-invite-accepter");
exports.guarddutyIpset = require("./guardduty-ipset");
exports.guarddutyMember = require("./guardduty-member");
exports.guarddutyOrganizationAdminAccount = require("./guardduty-organization-admin-account");
exports.guarddutyOrganizationConfiguration = require("./guardduty-organization-configuration");
exports.guarddutyPublishingDestination = require("./guardduty-publishing-destination");
exports.guarddutyThreatintelset = require("./guardduty-threatintelset");
exports.iamAccessKey = require("./iam-access-key");
exports.iamAccountAlias = require("./iam-account-alias");
exports.iamAccountPasswordPolicy = require("./iam-account-password-policy");
exports.iamGroup = require("./iam-group");
exports.iamGroupMembership = require("./iam-group-membership");
exports.iamGroupPolicy = require("./iam-group-policy");
exports.iamGroupPolicyAttachment = require("./iam-group-policy-attachment");
exports.iamInstanceProfile = require("./iam-instance-profile");
exports.iamOpenidConnectProvider = require("./iam-openid-connect-provider");
exports.iamPolicy = require("./iam-policy");
exports.iamPolicyAttachment = require("./iam-policy-attachment");
exports.iamRole = require("./iam-role");
exports.iamRolePolicy = require("./iam-role-policy");
exports.iamRolePolicyAttachment = require("./iam-role-policy-attachment");
exports.iamSamlProvider = require("./iam-saml-provider");
exports.iamServerCertificate = require("./iam-server-certificate");
exports.iamServiceLinkedRole = require("./iam-service-linked-role");
exports.iamUser = require("./iam-user");
exports.iamUserGroupMembership = require("./iam-user-group-membership");
exports.iamUserLoginProfile = require("./iam-user-login-profile");
exports.iamUserPolicy = require("./iam-user-policy");
exports.iamUserPolicyAttachment = require("./iam-user-policy-attachment");
exports.iamUserSshKey = require("./iam-user-ssh-key");
exports.imagebuilderComponent = require("./imagebuilder-component");
exports.imagebuilderDistributionConfiguration = require("./imagebuilder-distribution-configuration");
exports.imagebuilderImage = require("./imagebuilder-image");
exports.imagebuilderImagePipeline = require("./imagebuilder-image-pipeline");
exports.imagebuilderImageRecipe = require("./imagebuilder-image-recipe");
exports.imagebuilderInfrastructureConfiguration = require("./imagebuilder-infrastructure-configuration");
exports.inspectorAssessmentTarget = require("./inspector-assessment-target");
exports.inspectorAssessmentTemplate = require("./inspector-assessment-template");
exports.inspectorResourceGroup = require("./inspector-resource-group");
exports.instance = require("./instance");
exports.internetGateway = require("./internet-gateway");
exports.iotAuthorizer = require("./iot-authorizer");
exports.iotCertificate = require("./iot-certificate");
exports.iotPolicy = require("./iot-policy");
exports.iotPolicyAttachment = require("./iot-policy-attachment");
exports.iotRoleAlias = require("./iot-role-alias");
exports.iotThing = require("./iot-thing");
exports.iotThingGroup = require("./iot-thing-group");
exports.iotThingGroupMembership = require("./iot-thing-group-membership");
exports.iotThingPrincipalAttachment = require("./iot-thing-principal-attachment");
exports.iotThingType = require("./iot-thing-type");
exports.iotTopicRule = require("./iot-topic-rule");
exports.keyPair = require("./key-pair");
exports.kinesisAnalyticsApplication = require("./kinesis-analytics-application");
exports.kinesisFirehoseDeliveryStream = require("./kinesis-firehose-delivery-stream");
exports.kinesisStream = require("./kinesis-stream");
exports.kinesisStreamConsumer = require("./kinesis-stream-consumer");
exports.kinesisVideoStream = require("./kinesis-video-stream");
exports.kinesisanalyticsv2Application = require("./kinesisanalyticsv2-application");
exports.kinesisanalyticsv2ApplicationSnapshot = require("./kinesisanalyticsv2-application-snapshot");
exports.kmsAlias = require("./kms-alias");
exports.kmsCiphertext = require("./kms-ciphertext");
exports.kmsExternalKey = require("./kms-external-key");
exports.kmsGrant = require("./kms-grant");
exports.kmsKey = require("./kms-key");
exports.kmsReplicaExternalKey = require("./kms-replica-external-key");
exports.kmsReplicaKey = require("./kms-replica-key");
exports.lakeformationDataLakeSettings = require("./lakeformation-data-lake-settings");
exports.lakeformationPermissions = require("./lakeformation-permissions");
exports.lakeformationResource = require("./lakeformation-resource");
exports.lambdaAlias = require("./lambda-alias");
exports.lambdaCodeSigningConfig = require("./lambda-code-signing-config");
exports.lambdaEventSourceMapping = require("./lambda-event-source-mapping");
exports.lambdaFunction = require("./lambda-function");
exports.lambdaFunctionEventInvokeConfig = require("./lambda-function-event-invoke-config");
exports.lambdaInvocation = require("./lambda-invocation");
exports.lambdaLayerVersion = require("./lambda-layer-version");
exports.lambdaLayerVersionPermission = require("./lambda-layer-version-permission");
exports.lambdaPermission = require("./lambda-permission");
exports.lambdaProvisionedConcurrencyConfig = require("./lambda-provisioned-concurrency-config");
exports.launchConfiguration = require("./launch-configuration");
exports.launchTemplate = require("./launch-template");
exports.lb = require("./lb");
exports.lbCookieStickinessPolicy = require("./lb-cookie-stickiness-policy");
exports.lbListener = require("./lb-listener");
exports.lbListenerCertificate = require("./lb-listener-certificate");
exports.lbListenerRule = require("./lb-listener-rule");
exports.lbSslNegotiationPolicy = require("./lb-ssl-negotiation-policy");
exports.lbTargetGroup = require("./lb-target-group");
exports.lbTargetGroupAttachment = require("./lb-target-group-attachment");
exports.lexBot = require("./lex-bot");
exports.lexBotAlias = require("./lex-bot-alias");
exports.lexIntent = require("./lex-intent");
exports.lexSlotType = require("./lex-slot-type");
exports.licensemanagerAssociation = require("./licensemanager-association");
exports.licensemanagerLicenseConfiguration = require("./licensemanager-license-configuration");
exports.lightsailDomain = require("./lightsail-domain");
exports.lightsailInstance = require("./lightsail-instance");
exports.lightsailInstancePublicPorts = require("./lightsail-instance-public-ports");
exports.lightsailKeyPair = require("./lightsail-key-pair");
exports.lightsailStaticIp = require("./lightsail-static-ip");
exports.lightsailStaticIpAttachment = require("./lightsail-static-ip-attachment");
exports.loadBalancerBackendServerPolicy = require("./load-balancer-backend-server-policy");
exports.loadBalancerListenerPolicy = require("./load-balancer-listener-policy");
exports.loadBalancerPolicy = require("./load-balancer-policy");
exports.macie2Account = require("./macie2-account");
exports.macie2ClassificationJob = require("./macie2-classification-job");
exports.macie2CustomDataIdentifier = require("./macie2-custom-data-identifier");
exports.macie2FindingsFilter = require("./macie2-findings-filter");
exports.macie2InvitationAccepter = require("./macie2-invitation-accepter");
exports.macie2Member = require("./macie2-member");
exports.macie2OrganizationAdminAccount = require("./macie2-organization-admin-account");
exports.macieMemberAccountAssociation = require("./macie-member-account-association");
exports.macieS3BucketAssociation = require("./macie-s3-bucket-association");
exports.mainRouteTableAssociation = require("./main-route-table-association");
exports.mediaConvertQueue = require("./media-convert-queue");
exports.mediaPackageChannel = require("./media-package-channel");
exports.mediaStoreContainer = require("./media-store-container");
exports.mediaStoreContainerPolicy = require("./media-store-container-policy");
exports.memorydbAcl = require("./memorydb-acl");
exports.memorydbCluster = require("./memorydb-cluster");
exports.memorydbParameterGroup = require("./memorydb-parameter-group");
exports.memorydbSnapshot = require("./memorydb-snapshot");
exports.memorydbSubnetGroup = require("./memorydb-subnet-group");
exports.memorydbUser = require("./memorydb-user");
exports.mqBroker = require("./mq-broker");
exports.mqConfiguration = require("./mq-configuration");
exports.mskCluster = require("./msk-cluster");
exports.mskConfiguration = require("./msk-configuration");
exports.mskScramSecretAssociation = require("./msk-scram-secret-association");
exports.mskconnectCustomPlugin = require("./mskconnect-custom-plugin");
exports.mskconnectWorkerConfiguration = require("./mskconnect-worker-configuration");
exports.mwaaEnvironment = require("./mwaa-environment");
exports.natGateway = require("./nat-gateway");
exports.neptuneCluster = require("./neptune-cluster");
exports.neptuneClusterEndpoint = require("./neptune-cluster-endpoint");
exports.neptuneClusterInstance = require("./neptune-cluster-instance");
exports.neptuneClusterParameterGroup = require("./neptune-cluster-parameter-group");
exports.neptuneClusterSnapshot = require("./neptune-cluster-snapshot");
exports.neptuneEventSubscription = require("./neptune-event-subscription");
exports.neptuneParameterGroup = require("./neptune-parameter-group");
exports.neptuneSubnetGroup = require("./neptune-subnet-group");
exports.networkAcl = require("./network-acl");
exports.networkAclRule = require("./network-acl-rule");
exports.networkInterface = require("./network-interface");
exports.networkInterfaceAttachment = require("./network-interface-attachment");
exports.networkInterfaceSgAttachment = require("./network-interface-sg-attachment");
exports.networkfirewallFirewall = require("./networkfirewall-firewall");
exports.networkfirewallFirewallPolicy = require("./networkfirewall-firewall-policy");
exports.networkfirewallLoggingConfiguration = require("./networkfirewall-logging-configuration");
exports.networkfirewallResourcePolicy = require("./networkfirewall-resource-policy");
exports.networkfirewallRuleGroup = require("./networkfirewall-rule-group");
exports.opsworksApplication = require("./opsworks-application");
exports.opsworksCustomLayer = require("./opsworks-custom-layer");
exports.opsworksGangliaLayer = require("./opsworks-ganglia-layer");
exports.opsworksHaproxyLayer = require("./opsworks-haproxy-layer");
exports.opsworksInstance = require("./opsworks-instance");
exports.opsworksJavaAppLayer = require("./opsworks-java-app-layer");
exports.opsworksMemcachedLayer = require("./opsworks-memcached-layer");
exports.opsworksMysqlLayer = require("./opsworks-mysql-layer");
exports.opsworksNodejsAppLayer = require("./opsworks-nodejs-app-layer");
exports.opsworksPermission = require("./opsworks-permission");
exports.opsworksPhpAppLayer = require("./opsworks-php-app-layer");
exports.opsworksRailsAppLayer = require("./opsworks-rails-app-layer");
exports.opsworksRdsDbInstance = require("./opsworks-rds-db-instance");
exports.opsworksStack = require("./opsworks-stack");
exports.opsworksStaticWebLayer = require("./opsworks-static-web-layer");
exports.opsworksUserProfile = require("./opsworks-user-profile");
exports.organizationsAccount = require("./organizations-account");
exports.organizationsDelegatedAdministrator = require("./organizations-delegated-administrator");
exports.organizationsOrganization = require("./organizations-organization");
exports.organizationsOrganizationalUnit = require("./organizations-organizational-unit");
exports.organizationsPolicy = require("./organizations-policy");
exports.organizationsPolicyAttachment = require("./organizations-policy-attachment");
exports.pinpointAdmChannel = require("./pinpoint-adm-channel");
exports.pinpointApnsChannel = require("./pinpoint-apns-channel");
exports.pinpointApnsSandboxChannel = require("./pinpoint-apns-sandbox-channel");
exports.pinpointApnsVoipChannel = require("./pinpoint-apns-voip-channel");
exports.pinpointApnsVoipSandboxChannel = require("./pinpoint-apns-voip-sandbox-channel");
exports.pinpointApp = require("./pinpoint-app");
exports.pinpointBaiduChannel = require("./pinpoint-baidu-channel");
exports.pinpointEmailChannel = require("./pinpoint-email-channel");
exports.pinpointEventStream = require("./pinpoint-event-stream");
exports.pinpointGcmChannel = require("./pinpoint-gcm-channel");
exports.pinpointSmsChannel = require("./pinpoint-sms-channel");
exports.placementGroup = require("./placement-group");
exports.prometheusAlertManagerDefinition = require("./prometheus-alert-manager-definition");
exports.prometheusRuleGroupNamespace = require("./prometheus-rule-group-namespace");
exports.prometheusWorkspace = require("./prometheus-workspace");
exports.proxyProtocolPolicy = require("./proxy-protocol-policy");
exports.qldbLedger = require("./qldb-ledger");
exports.quicksightDataSource = require("./quicksight-data-source");
exports.quicksightGroup = require("./quicksight-group");
exports.quicksightGroupMembership = require("./quicksight-group-membership");
exports.quicksightUser = require("./quicksight-user");
exports.ramPrincipalAssociation = require("./ram-principal-association");
exports.ramResourceAssociation = require("./ram-resource-association");
exports.ramResourceShare = require("./ram-resource-share");
exports.ramResourceShareAccepter = require("./ram-resource-share-accepter");
exports.rdsCluster = require("./rds-cluster");
exports.rdsClusterEndpoint = require("./rds-cluster-endpoint");
exports.rdsClusterInstance = require("./rds-cluster-instance");
exports.rdsClusterParameterGroup = require("./rds-cluster-parameter-group");
exports.rdsClusterRoleAssociation = require("./rds-cluster-role-association");
exports.rdsGlobalCluster = require("./rds-global-cluster");
exports.redshiftCluster = require("./redshift-cluster");
exports.redshiftEventSubscription = require("./redshift-event-subscription");
exports.redshiftParameterGroup = require("./redshift-parameter-group");
exports.redshiftScheduledAction = require("./redshift-scheduled-action");
exports.redshiftSecurityGroup = require("./redshift-security-group");
exports.redshiftSnapshotCopyGrant = require("./redshift-snapshot-copy-grant");
exports.redshiftSnapshotSchedule = require("./redshift-snapshot-schedule");
exports.redshiftSnapshotScheduleAssociation = require("./redshift-snapshot-schedule-association");
exports.redshiftSubnetGroup = require("./redshift-subnet-group");
exports.resourcegroupsGroup = require("./resourcegroups-group");
exports.route = require("./route");
exports.route53DelegationSet = require("./route53-delegation-set");
exports.route53HealthCheck = require("./route53-health-check");
exports.route53HostedZoneDnssec = require("./route53-hosted-zone-dnssec");
exports.route53KeySigningKey = require("./route53-key-signing-key");
exports.route53QueryLog = require("./route53-query-log");
exports.route53Record = require("./route53-record");
exports.route53ResolverDnssecConfig = require("./route53-resolver-dnssec-config");
exports.route53ResolverEndpoint = require("./route53-resolver-endpoint");
exports.route53ResolverFirewallConfig = require("./route53-resolver-firewall-config");
exports.route53ResolverFirewallDomainList = require("./route53-resolver-firewall-domain-list");
exports.route53ResolverFirewallRule = require("./route53-resolver-firewall-rule");
exports.route53ResolverFirewallRuleGroup = require("./route53-resolver-firewall-rule-group");
exports.route53ResolverFirewallRuleGroupAssociation = require("./route53-resolver-firewall-rule-group-association");
exports.route53ResolverQueryLogConfig = require("./route53-resolver-query-log-config");
exports.route53ResolverQueryLogConfigAssociation = require("./route53-resolver-query-log-config-association");
exports.route53ResolverRule = require("./route53-resolver-rule");
exports.route53ResolverRuleAssociation = require("./route53-resolver-rule-association");
exports.route53VpcAssociationAuthorization = require("./route53-vpc-association-authorization");
exports.route53Zone = require("./route53-zone");
exports.route53ZoneAssociation = require("./route53-zone-association");
exports.route53RecoverycontrolconfigCluster = require("./route53recoverycontrolconfig-cluster");
exports.route53RecoverycontrolconfigControlPanel = require("./route53recoverycontrolconfig-control-panel");
exports.route53RecoverycontrolconfigRoutingControl = require("./route53recoverycontrolconfig-routing-control");
exports.route53RecoverycontrolconfigSafetyRule = require("./route53recoverycontrolconfig-safety-rule");
exports.route53RecoveryreadinessCell = require("./route53recoveryreadiness-cell");
exports.route53RecoveryreadinessReadinessCheck = require("./route53recoveryreadiness-readiness-check");
exports.route53RecoveryreadinessRecoveryGroup = require("./route53recoveryreadiness-recovery-group");
exports.route53RecoveryreadinessResourceSet = require("./route53recoveryreadiness-resource-set");
exports.routeTable = require("./route-table");
exports.routeTableAssociation = require("./route-table-association");
exports.s3AccessPoint = require("./s3-access-point");
exports.s3AccountPublicAccessBlock = require("./s3-account-public-access-block");
exports.s3Bucket = require("./s3-bucket");
exports.s3BucketAccelerateConfiguration = require("./s3-bucket-accelerate-configuration");
exports.s3BucketAcl = require("./s3-bucket-acl");
exports.s3BucketAnalyticsConfiguration = require("./s3-bucket-analytics-configuration");
exports.s3BucketCorsConfiguration = require("./s3-bucket-cors-configuration");
exports.s3BucketIntelligentTieringConfiguration = require("./s3-bucket-intelligent-tiering-configuration");
exports.s3BucketInventory = require("./s3-bucket-inventory");
exports.s3BucketLifecycleConfiguration = require("./s3-bucket-lifecycle-configuration");
exports.s3BucketLogging = require("./s3-bucket-logging");
exports.s3BucketMetric = require("./s3-bucket-metric");
exports.s3BucketNotification = require("./s3-bucket-notification");
exports.s3BucketObject = require("./s3-bucket-object");
exports.s3BucketObjectLockConfiguration = require("./s3-bucket-object-lock-configuration");
exports.s3BucketOwnershipControls = require("./s3-bucket-ownership-controls");
exports.s3BucketPolicy = require("./s3-bucket-policy");
exports.s3BucketPublicAccessBlock = require("./s3-bucket-public-access-block");
exports.s3BucketReplicationConfiguration = require("./s3-bucket-replication-configuration");
exports.s3BucketRequestPaymentConfiguration = require("./s3-bucket-request-payment-configuration");
exports.s3BucketServerSideEncryptionConfiguration = require("./s3-bucket-server-side-encryption-configuration");
exports.s3BucketVersioning = require("./s3-bucket-versioning");
exports.s3BucketWebsiteConfiguration = require("./s3-bucket-website-configuration");
exports.s3ObjectCopy = require("./s3-object-copy");
exports.s3ControlAccessPointPolicy = require("./s3control-access-point-policy");
exports.s3ControlBucket = require("./s3control-bucket");
exports.s3ControlBucketLifecycleConfiguration = require("./s3control-bucket-lifecycle-configuration");
exports.s3ControlBucketPolicy = require("./s3control-bucket-policy");
exports.s3ControlMultiRegionAccessPoint = require("./s3control-multi-region-access-point");
exports.s3ControlMultiRegionAccessPointPolicy = require("./s3control-multi-region-access-point-policy");
exports.s3ControlObjectLambdaAccessPoint = require("./s3control-object-lambda-access-point");
exports.s3ControlObjectLambdaAccessPointPolicy = require("./s3control-object-lambda-access-point-policy");
exports.s3OutpostsEndpoint = require("./s3outposts-endpoint");
exports.sagemakerApp = require("./sagemaker-app");
exports.sagemakerAppImageConfig = require("./sagemaker-app-image-config");
exports.sagemakerCodeRepository = require("./sagemaker-code-repository");
exports.sagemakerDevice = require("./sagemaker-device");
exports.sagemakerDeviceFleet = require("./sagemaker-device-fleet");
exports.sagemakerDomain = require("./sagemaker-domain");
exports.sagemakerEndpoint = require("./sagemaker-endpoint");
exports.sagemakerEndpointConfiguration = require("./sagemaker-endpoint-configuration");
exports.sagemakerFeatureGroup = require("./sagemaker-feature-group");
exports.sagemakerFlowDefinition = require("./sagemaker-flow-definition");
exports.sagemakerHumanTaskUi = require("./sagemaker-human-task-ui");
exports.sagemakerImage = require("./sagemaker-image");
exports.sagemakerImageVersion = require("./sagemaker-image-version");
exports.sagemakerModel = require("./sagemaker-model");
exports.sagemakerModelPackageGroup = require("./sagemaker-model-package-group");
exports.sagemakerModelPackageGroupPolicy = require("./sagemaker-model-package-group-policy");
exports.sagemakerNotebookInstance = require("./sagemaker-notebook-instance");
exports.sagemakerNotebookInstanceLifecycleConfiguration = require("./sagemaker-notebook-instance-lifecycle-configuration");
exports.sagemakerProject = require("./sagemaker-project");
exports.sagemakerStudioLifecycleConfig = require("./sagemaker-studio-lifecycle-config");
exports.sagemakerUserProfile = require("./sagemaker-user-profile");
exports.sagemakerWorkforce = require("./sagemaker-workforce");
exports.sagemakerWorkteam = require("./sagemaker-workteam");
exports.schemasDiscoverer = require("./schemas-discoverer");
exports.schemasRegistry = require("./schemas-registry");
exports.schemasSchema = require("./schemas-schema");
exports.secretsmanagerSecret = require("./secretsmanager-secret");
exports.secretsmanagerSecretPolicy = require("./secretsmanager-secret-policy");
exports.secretsmanagerSecretRotation = require("./secretsmanager-secret-rotation");
exports.secretsmanagerSecretVersion = require("./secretsmanager-secret-version");
exports.securityGroup = require("./security-group");
exports.securityGroupRule = require("./security-group-rule");
exports.securityhubAccount = require("./securityhub-account");
exports.securityhubActionTarget = require("./securityhub-action-target");
exports.securityhubFindingAggregator = require("./securityhub-finding-aggregator");
exports.securityhubInsight = require("./securityhub-insight");
exports.securityhubInviteAccepter = require("./securityhub-invite-accepter");
exports.securityhubMember = require("./securityhub-member");
exports.securityhubOrganizationAdminAccount = require("./securityhub-organization-admin-account");
exports.securityhubOrganizationConfiguration = require("./securityhub-organization-configuration");
exports.securityhubProductSubscription = require("./securityhub-product-subscription");
exports.securityhubStandardsControl = require("./securityhub-standards-control");
exports.securityhubStandardsSubscription = require("./securityhub-standards-subscription");
exports.serverlessapplicationrepositoryCloudformationStack = require("./serverlessapplicationrepository-cloudformation-stack");
exports.serviceDiscoveryHttpNamespace = require("./service-discovery-http-namespace");
exports.serviceDiscoveryInstance = require("./service-discovery-instance");
exports.serviceDiscoveryPrivateDnsNamespace = require("./service-discovery-private-dns-namespace");
exports.serviceDiscoveryPublicDnsNamespace = require("./service-discovery-public-dns-namespace");
exports.serviceDiscoveryService = require("./service-discovery-service");
exports.servicecatalogBudgetResourceAssociation = require("./servicecatalog-budget-resource-association");
exports.servicecatalogConstraint = require("./servicecatalog-constraint");
exports.servicecatalogOrganizationsAccess = require("./servicecatalog-organizations-access");
exports.servicecatalogPortfolio = require("./servicecatalog-portfolio");
exports.servicecatalogPortfolioShare = require("./servicecatalog-portfolio-share");
exports.servicecatalogPrincipalPortfolioAssociation = require("./servicecatalog-principal-portfolio-association");
exports.servicecatalogProduct = require("./servicecatalog-product");
exports.servicecatalogProductPortfolioAssociation = require("./servicecatalog-product-portfolio-association");
exports.servicecatalogProvisionedProduct = require("./servicecatalog-provisioned-product");
exports.servicecatalogProvisioningArtifact = require("./servicecatalog-provisioning-artifact");
exports.servicecatalogServiceAction = require("./servicecatalog-service-action");
exports.servicecatalogTagOption = require("./servicecatalog-tag-option");
exports.servicecatalogTagOptionResourceAssociation = require("./servicecatalog-tag-option-resource-association");
exports.servicequotasServiceQuota = require("./servicequotas-service-quota");
exports.sesActiveReceiptRuleSet = require("./ses-active-receipt-rule-set");
exports.sesConfigurationSet = require("./ses-configuration-set");
exports.sesDomainDkim = require("./ses-domain-dkim");
exports.sesDomainIdentity = require("./ses-domain-identity");
exports.sesDomainIdentityVerification = require("./ses-domain-identity-verification");
exports.sesDomainMailFrom = require("./ses-domain-mail-from");
exports.sesEmailIdentity = require("./ses-email-identity");
exports.sesEventDestination = require("./ses-event-destination");
exports.sesIdentityNotificationTopic = require("./ses-identity-notification-topic");
exports.sesIdentityPolicy = require("./ses-identity-policy");
exports.sesReceiptFilter = require("./ses-receipt-filter");
exports.sesReceiptRule = require("./ses-receipt-rule");
exports.sesReceiptRuleSet = require("./ses-receipt-rule-set");
exports.sesTemplate = require("./ses-template");
exports.sfnActivity = require("./sfn-activity");
exports.sfnStateMachine = require("./sfn-state-machine");
exports.shieldProtection = require("./shield-protection");
exports.shieldProtectionGroup = require("./shield-protection-group");
exports.shieldProtectionHealthCheckAssociation = require("./shield-protection-health-check-association");
exports.signerSigningJob = require("./signer-signing-job");
exports.signerSigningProfile = require("./signer-signing-profile");
exports.signerSigningProfilePermission = require("./signer-signing-profile-permission");
exports.simpledbDomain = require("./simpledb-domain");
exports.snapshotCreateVolumePermission = require("./snapshot-create-volume-permission");
exports.snsPlatformApplication = require("./sns-platform-application");
exports.snsSmsPreferences = require("./sns-sms-preferences");
exports.snsTopic = require("./sns-topic");
exports.snsTopicPolicy = require("./sns-topic-policy");
exports.snsTopicSubscription = require("./sns-topic-subscription");
exports.spotDatafeedSubscription = require("./spot-datafeed-subscription");
exports.spotFleetRequest = require("./spot-fleet-request");
exports.spotInstanceRequest = require("./spot-instance-request");
exports.sqsQueue = require("./sqs-queue");
exports.sqsQueuePolicy = require("./sqs-queue-policy");
exports.ssmActivation = require("./ssm-activation");
exports.ssmAssociation = require("./ssm-association");
exports.ssmDocument = require("./ssm-document");
exports.ssmMaintenanceWindow = require("./ssm-maintenance-window");
exports.ssmMaintenanceWindowTarget = require("./ssm-maintenance-window-target");
exports.ssmMaintenanceWindowTask = require("./ssm-maintenance-window-task");
exports.ssmParameter = require("./ssm-parameter");
exports.ssmPatchBaseline = require("./ssm-patch-baseline");
exports.ssmPatchGroup = require("./ssm-patch-group");
exports.ssmResourceDataSync = require("./ssm-resource-data-sync");
exports.ssoadminAccountAssignment = require("./ssoadmin-account-assignment");
exports.ssoadminManagedPolicyAttachment = require("./ssoadmin-managed-policy-attachment");
exports.ssoadminPermissionSet = require("./ssoadmin-permission-set");
exports.ssoadminPermissionSetInlinePolicy = require("./ssoadmin-permission-set-inline-policy");
exports.storagegatewayCache = require("./storagegateway-cache");
exports.storagegatewayCachedIscsiVolume = require("./storagegateway-cached-iscsi-volume");
exports.storagegatewayFileSystemAssociation = require("./storagegateway-file-system-association");
exports.storagegatewayGateway = require("./storagegateway-gateway");
exports.storagegatewayNfsFileShare = require("./storagegateway-nfs-file-share");
exports.storagegatewaySmbFileShare = require("./storagegateway-smb-file-share");
exports.storagegatewayStoredIscsiVolume = require("./storagegateway-stored-iscsi-volume");
exports.storagegatewayTapePool = require("./storagegateway-tape-pool");
exports.storagegatewayUploadBuffer = require("./storagegateway-upload-buffer");
exports.storagegatewayWorkingStorage = require("./storagegateway-working-storage");
exports.subnet = require("./subnet");
exports.swfDomain = require("./swf-domain");
exports.syntheticsCanary = require("./synthetics-canary");
exports.timestreamwriteDatabase = require("./timestreamwrite-database");
exports.timestreamwriteTable = require("./timestreamwrite-table");
exports.transferAccess = require("./transfer-access");
exports.transferServer = require("./transfer-server");
exports.transferSshKey = require("./transfer-ssh-key");
exports.transferUser = require("./transfer-user");
exports.volumeAttachment = require("./volume-attachment");
exports.vpc = require("./vpc");
exports.vpcDhcpOptions = require("./vpc-dhcp-options");
exports.vpcDhcpOptionsAssociation = require("./vpc-dhcp-options-association");
exports.vpcEndpoint = require("./vpc-endpoint");
exports.vpcEndpointConnectionAccepter = require("./vpc-endpoint-connection-accepter");
exports.vpcEndpointConnectionNotification = require("./vpc-endpoint-connection-notification");
exports.vpcEndpointRouteTableAssociation = require("./vpc-endpoint-route-table-association");
exports.vpcEndpointService = require("./vpc-endpoint-service");
exports.vpcEndpointServiceAllowedPrincipal = require("./vpc-endpoint-service-allowed-principal");
exports.vpcEndpointSubnetAssociation = require("./vpc-endpoint-subnet-association");
exports.vpcIpam = require("./vpc-ipam");
exports.vpcIpamOrganizationAdminAccount = require("./vpc-ipam-organization-admin-account");
exports.vpcIpamPool = require("./vpc-ipam-pool");
exports.vpcIpamPoolCidr = require("./vpc-ipam-pool-cidr");
exports.vpcIpamPoolCidrAllocation = require("./vpc-ipam-pool-cidr-allocation");
exports.vpcIpamPreviewNextCidr = require("./vpc-ipam-preview-next-cidr");
exports.vpcIpamScope = require("./vpc-ipam-scope");
exports.vpcIpv4CidrBlockAssociation = require("./vpc-ipv4-cidr-block-association");
exports.vpcIpv6CidrBlockAssociation = require("./vpc-ipv6-cidr-block-association");
exports.vpcPeeringConnection = require("./vpc-peering-connection");
exports.vpcPeeringConnectionAccepter = require("./vpc-peering-connection-accepter");
exports.vpcPeeringConnectionOptions = require("./vpc-peering-connection-options");
exports.vpnConnection = require("./vpn-connection");
exports.vpnConnectionRoute = require("./vpn-connection-route");
exports.vpnGateway = require("./vpn-gateway");
exports.vpnGatewayAttachment = require("./vpn-gateway-attachment");
exports.vpnGatewayRoutePropagation = require("./vpn-gateway-route-propagation");
exports.wafByteMatchSet = require("./waf-byte-match-set");
exports.wafGeoMatchSet = require("./waf-geo-match-set");
exports.wafIpset = require("./waf-ipset");
exports.wafRateBasedRule = require("./waf-rate-based-rule");
exports.wafRegexMatchSet = require("./waf-regex-match-set");
exports.wafRegexPatternSet = require("./waf-regex-pattern-set");
exports.wafRule = require("./waf-rule");
exports.wafRuleGroup = require("./waf-rule-group");
exports.wafSizeConstraintSet = require("./waf-size-constraint-set");
exports.wafSqlInjectionMatchSet = require("./waf-sql-injection-match-set");
exports.wafWebAcl = require("./waf-web-acl");
exports.wafXssMatchSet = require("./waf-xss-match-set");
exports.wafregionalByteMatchSet = require("./wafregional-byte-match-set");
exports.wafregionalGeoMatchSet = require("./wafregional-geo-match-set");
exports.wafregionalIpset = require("./wafregional-ipset");
exports.wafregionalRateBasedRule = require("./wafregional-rate-based-rule");
exports.wafregionalRegexMatchSet = require("./wafregional-regex-match-set");
exports.wafregionalRegexPatternSet = require("./wafregional-regex-pattern-set");
exports.wafregionalRule = require("./wafregional-rule");
exports.wafregionalRuleGroup = require("./wafregional-rule-group");
exports.wafregionalSizeConstraintSet = require("./wafregional-size-constraint-set");
exports.wafregionalSqlInjectionMatchSet = require("./wafregional-sql-injection-match-set");
exports.wafregionalWebAcl = require("./wafregional-web-acl");
exports.wafregionalWebAclAssociation = require("./wafregional-web-acl-association");
exports.wafregionalXssMatchSet = require("./wafregional-xss-match-set");
exports.wafv2IpSet = require("./wafv2-ip-set");
exports.wafv2RegexPatternSet = require("./wafv2-regex-pattern-set");
exports.wafv2RuleGroup = require("./wafv2-rule-group");
exports.wafv2WebAcl = require("./wafv2-web-acl");
exports.wafv2WebAclAssociation = require("./wafv2-web-acl-association");
exports.wafv2WebAclLoggingConfiguration = require("./wafv2-web-acl-logging-configuration");
exports.worklinkFleet = require("./worklink-fleet");
exports.worklinkWebsiteCertificateAuthorityAssociation = require("./worklink-website-certificate-authority-association");
exports.workspacesDirectory = require("./workspaces-directory");
exports.workspacesIpGroup = require("./workspaces-ip-group");
exports.workspacesWorkspace = require("./workspaces-workspace");
exports.xrayEncryptionConfig = require("./xray-encryption-config");
exports.xrayGroup = require("./xray-group");
exports.xraySamplingRule = require("./xray-sampling-rule");
exports.dataAwsAcmCertificate = require("./data-aws-acm-certificate");
exports.dataAwsAcmpcaCertificate = require("./data-aws-acmpca-certificate");
exports.dataAwsAcmpcaCertificateAuthority = require("./data-aws-acmpca-certificate-authority");
exports.dataAwsAlb = require("./data-aws-alb");
exports.dataAwsAlbListener = require("./data-aws-alb-listener");
exports.dataAwsAlbTargetGroup = require("./data-aws-alb-target-group");
exports.dataAwsAmi = require("./data-aws-ami");
exports.dataAwsAmiIds = require("./data-aws-ami-ids");
exports.dataAwsApiGatewayApiKey = require("./data-aws-api-gateway-api-key");
exports.dataAwsApiGatewayDomainName = require("./data-aws-api-gateway-domain-name");
exports.dataAwsApiGatewayExport = require("./data-aws-api-gateway-export");
exports.dataAwsApiGatewayResource = require("./data-aws-api-gateway-resource");
exports.dataAwsApiGatewayRestApi = require("./data-aws-api-gateway-rest-api");
exports.dataAwsApiGatewaySdk = require("./data-aws-api-gateway-sdk");
exports.dataAwsApiGatewayVpcLink = require("./data-aws-api-gateway-vpc-link");
exports.dataAwsApigatewayv2Api = require("./data-aws-apigatewayv2-api");
exports.dataAwsApigatewayv2Apis = require("./data-aws-apigatewayv2-apis");
exports.dataAwsApigatewayv2Export = require("./data-aws-apigatewayv2-export");
exports.dataAwsAppmeshMesh = require("./data-aws-appmesh-mesh");
exports.dataAwsAppmeshVirtualService = require("./data-aws-appmesh-virtual-service");
exports.dataAwsArn = require("./data-aws-arn");
exports.dataAwsAutoscalingGroup = require("./data-aws-autoscaling-group");
exports.dataAwsAutoscalingGroups = require("./data-aws-autoscaling-groups");
exports.dataAwsAvailabilityZone = require("./data-aws-availability-zone");
exports.dataAwsAvailabilityZones = require("./data-aws-availability-zones");
exports.dataAwsBackupPlan = require("./data-aws-backup-plan");
exports.dataAwsBackupSelection = require("./data-aws-backup-selection");
exports.dataAwsBackupVault = require("./data-aws-backup-vault");
exports.dataAwsBatchComputeEnvironment = require("./data-aws-batch-compute-environment");
exports.dataAwsBatchJobQueue = require("./data-aws-batch-job-queue");
exports.dataAwsBatchSchedulingPolicy = require("./data-aws-batch-scheduling-policy");
exports.dataAwsBillingServiceAccount = require("./data-aws-billing-service-account");
exports.dataAwsCallerIdentity = require("./data-aws-caller-identity");
exports.dataAwsCanonicalUserId = require("./data-aws-canonical-user-id");
exports.dataAwsCloudcontrolapiResource = require("./data-aws-cloudcontrolapi-resource");
exports.dataAwsCloudformationExport = require("./data-aws-cloudformation-export");
exports.dataAwsCloudformationStack = require("./data-aws-cloudformation-stack");
exports.dataAwsCloudformationType = require("./data-aws-cloudformation-type");
exports.dataAwsCloudfrontCachePolicy = require("./data-aws-cloudfront-cache-policy");
exports.dataAwsCloudfrontDistribution = require("./data-aws-cloudfront-distribution");
exports.dataAwsCloudfrontFunction = require("./data-aws-cloudfront-function");
exports.dataAwsCloudfrontLogDeliveryCanonicalUserId = require("./data-aws-cloudfront-log-delivery-canonical-user-id");
exports.dataAwsCloudfrontOriginAccessIdentity = require("./data-aws-cloudfront-origin-access-identity");
exports.dataAwsCloudfrontOriginRequestPolicy = require("./data-aws-cloudfront-origin-request-policy");
exports.dataAwsCloudfrontResponseHeadersPolicy = require("./data-aws-cloudfront-response-headers-policy");
exports.dataAwsCloudhsmV2Cluster = require("./data-aws-cloudhsm-v2-cluster");
exports.dataAwsCloudtrailServiceAccount = require("./data-aws-cloudtrail-service-account");
exports.dataAwsCloudwatchEventConnection = require("./data-aws-cloudwatch-event-connection");
exports.dataAwsCloudwatchEventSource = require("./data-aws-cloudwatch-event-source");
exports.dataAwsCloudwatchLogGroup = require("./data-aws-cloudwatch-log-group");
exports.dataAwsCloudwatchLogGroups = require("./data-aws-cloudwatch-log-groups");
exports.dataAwsCodeartifactAuthorizationToken = require("./data-aws-codeartifact-authorization-token");
exports.dataAwsCodeartifactRepositoryEndpoint = require("./data-aws-codeartifact-repository-endpoint");
exports.dataAwsCodecommitApprovalRuleTemplate = require("./data-aws-codecommit-approval-rule-template");
exports.dataAwsCodecommitRepository = require("./data-aws-codecommit-repository");
exports.dataAwsCodestarconnectionsConnection = require("./data-aws-codestarconnections-connection");
exports.dataAwsCognitoUserPoolClient = require("./data-aws-cognito-user-pool-client");
exports.dataAwsCognitoUserPoolClients = require("./data-aws-cognito-user-pool-clients");
exports.dataAwsCognitoUserPoolSigningCertificate = require("./data-aws-cognito-user-pool-signing-certificate");
exports.dataAwsCognitoUserPools = require("./data-aws-cognito-user-pools");
exports.dataAwsConnectBotAssociation = require("./data-aws-connect-bot-association");
exports.dataAwsConnectContactFlow = require("./data-aws-connect-contact-flow");
exports.dataAwsConnectContactFlowModule = require("./data-aws-connect-contact-flow-module");
exports.dataAwsConnectHoursOfOperation = require("./data-aws-connect-hours-of-operation");
exports.dataAwsConnectInstance = require("./data-aws-connect-instance");
exports.dataAwsConnectLambdaFunctionAssociation = require("./data-aws-connect-lambda-function-association");
exports.dataAwsConnectPrompt = require("./data-aws-connect-prompt");
exports.dataAwsConnectQuickConnect = require("./data-aws-connect-quick-connect");
exports.dataAwsCurReportDefinition = require("./data-aws-cur-report-definition");
exports.dataAwsCustomerGateway = require("./data-aws-customer-gateway");
exports.dataAwsDatapipelinePipeline = require("./data-aws-datapipeline-pipeline");
exports.dataAwsDatapipelinePipelineDefinition = require("./data-aws-datapipeline-pipeline-definition");
exports.dataAwsDbClusterSnapshot = require("./data-aws-db-cluster-snapshot");
exports.dataAwsDbEventCategories = require("./data-aws-db-event-categories");
exports.dataAwsDbInstance = require("./data-aws-db-instance");
exports.dataAwsDbProxy = require("./data-aws-db-proxy");
exports.dataAwsDbSnapshot = require("./data-aws-db-snapshot");
exports.dataAwsDbSubnetGroup = require("./data-aws-db-subnet-group");
exports.dataAwsDefaultTags = require("./data-aws-default-tags");
exports.dataAwsDirectoryServiceDirectory = require("./data-aws-directory-service-directory");
exports.dataAwsDocdbEngineVersion = require("./data-aws-docdb-engine-version");
exports.dataAwsDocdbOrderableDbInstance = require("./data-aws-docdb-orderable-db-instance");
exports.dataAwsDxConnection = require("./data-aws-dx-connection");
exports.dataAwsDxGateway = require("./data-aws-dx-gateway");
exports.dataAwsDxLocation = require("./data-aws-dx-location");
exports.dataAwsDxLocations = require("./data-aws-dx-locations");
exports.dataAwsDynamodbTable = require("./data-aws-dynamodb-table");
exports.dataAwsEbsDefaultKmsKey = require("./data-aws-ebs-default-kms-key");
exports.dataAwsEbsEncryptionByDefault = require("./data-aws-ebs-encryption-by-default");
exports.dataAwsEbsSnapshot = require("./data-aws-ebs-snapshot");
exports.dataAwsEbsSnapshotIds = require("./data-aws-ebs-snapshot-ids");
exports.dataAwsEbsVolume = require("./data-aws-ebs-volume");
exports.dataAwsEbsVolumes = require("./data-aws-ebs-volumes");
exports.dataAwsEc2CoipPool = require("./data-aws-ec2-coip-pool");
exports.dataAwsEc2CoipPools = require("./data-aws-ec2-coip-pools");
exports.dataAwsEc2Host = require("./data-aws-ec2-host");
exports.dataAwsEc2InstanceType = require("./data-aws-ec2-instance-type");
exports.dataAwsEc2InstanceTypeOffering = require("./data-aws-ec2-instance-type-offering");
exports.dataAwsEc2InstanceTypeOfferings = require("./data-aws-ec2-instance-type-offerings");
exports.dataAwsEc2InstanceTypes = require("./data-aws-ec2-instance-types");
exports.dataAwsEc2LocalGateway = require("./data-aws-ec2-local-gateway");
exports.dataAwsEc2LocalGatewayRouteTable = require("./data-aws-ec2-local-gateway-route-table");
exports.dataAwsEc2LocalGatewayRouteTables = require("./data-aws-ec2-local-gateway-route-tables");
exports.dataAwsEc2LocalGatewayVirtualInterface = require("./data-aws-ec2-local-gateway-virtual-interface");
exports.dataAwsEc2LocalGatewayVirtualInterfaceGroup = require("./data-aws-ec2-local-gateway-virtual-interface-group");
exports.dataAwsEc2LocalGatewayVirtualInterfaceGroups = require("./data-aws-ec2-local-gateway-virtual-interface-groups");
exports.dataAwsEc2LocalGateways = require("./data-aws-ec2-local-gateways");
exports.dataAwsEc2ManagedPrefixList = require("./data-aws-ec2-managed-prefix-list");
exports.dataAwsEc2SpotPrice = require("./data-aws-ec2-spot-price");
exports.dataAwsEc2TransitGateway = require("./data-aws-ec2-transit-gateway");
exports.dataAwsEc2TransitGatewayDxGatewayAttachment = require("./data-aws-ec2-transit-gateway-dx-gateway-attachment");
exports.dataAwsEc2TransitGatewayPeeringAttachment = require("./data-aws-ec2-transit-gateway-peering-attachment");
exports.dataAwsEc2TransitGatewayRouteTable = require("./data-aws-ec2-transit-gateway-route-table");
exports.dataAwsEc2TransitGatewayRouteTables = require("./data-aws-ec2-transit-gateway-route-tables");
exports.dataAwsEc2TransitGatewayVpcAttachment = require("./data-aws-ec2-transit-gateway-vpc-attachment");
exports.dataAwsEc2TransitGatewayVpnAttachment = require("./data-aws-ec2-transit-gateway-vpn-attachment");
exports.dataAwsEcrAuthorizationToken = require("./data-aws-ecr-authorization-token");
exports.dataAwsEcrImage = require("./data-aws-ecr-image");
exports.dataAwsEcrRepository = require("./data-aws-ecr-repository");
exports.dataAwsEcsCluster = require("./data-aws-ecs-cluster");
exports.dataAwsEcsContainerDefinition = require("./data-aws-ecs-container-definition");
exports.dataAwsEcsService = require("./data-aws-ecs-service");
exports.dataAwsEcsTaskDefinition = require("./data-aws-ecs-task-definition");
exports.dataAwsEfsAccessPoint = require("./data-aws-efs-access-point");
exports.dataAwsEfsAccessPoints = require("./data-aws-efs-access-points");
exports.dataAwsEfsFileSystem = require("./data-aws-efs-file-system");
exports.dataAwsEfsMountTarget = require("./data-aws-efs-mount-target");
exports.dataAwsEip = require("./data-aws-eip");
exports.dataAwsEksAddon = require("./data-aws-eks-addon");
exports.dataAwsEksCluster = require("./data-aws-eks-cluster");
exports.dataAwsEksClusterAuth = require("./data-aws-eks-cluster-auth");
exports.dataAwsEksClusters = require("./data-aws-eks-clusters");
exports.dataAwsEksNodeGroup = require("./data-aws-eks-node-group");
exports.dataAwsEksNodeGroups = require("./data-aws-eks-node-groups");
exports.dataAwsElasticBeanstalkApplication = require("./data-aws-elastic-beanstalk-application");
exports.dataAwsElasticBeanstalkHostedZone = require("./data-aws-elastic-beanstalk-hosted-zone");
exports.dataAwsElasticBeanstalkSolutionStack = require("./data-aws-elastic-beanstalk-solution-stack");
exports.dataAwsElasticacheCluster = require("./data-aws-elasticache-cluster");
exports.dataAwsElasticacheReplicationGroup = require("./data-aws-elasticache-replication-group");
exports.dataAwsElasticacheUser = require("./data-aws-elasticache-user");
exports.dataAwsElasticsearchDomain = require("./data-aws-elasticsearch-domain");
exports.dataAwsElb = require("./data-aws-elb");
exports.dataAwsElbHostedZoneId = require("./data-aws-elb-hosted-zone-id");
exports.dataAwsElbServiceAccount = require("./data-aws-elb-service-account");
exports.dataAwsEmrReleaseLabels = require("./data-aws-emr-release-labels");
exports.dataAwsGlobalacceleratorAccelerator = require("./data-aws-globalaccelerator-accelerator");
exports.dataAwsGlueConnection = require("./data-aws-glue-connection");
exports.dataAwsGlueDataCatalogEncryptionSettings = require("./data-aws-glue-data-catalog-encryption-settings");
exports.dataAwsGlueScript = require("./data-aws-glue-script");
exports.dataAwsGuarddutyDetector = require("./data-aws-guardduty-detector");
exports.dataAwsIamAccountAlias = require("./data-aws-iam-account-alias");
exports.dataAwsIamGroup = require("./data-aws-iam-group");
exports.dataAwsIamInstanceProfile = require("./data-aws-iam-instance-profile");
exports.dataAwsIamPolicy = require("./data-aws-iam-policy");
exports.dataAwsIamPolicyDocument = require("./data-aws-iam-policy-document");
exports.dataAwsIamRole = require("./data-aws-iam-role");
exports.dataAwsIamRoles = require("./data-aws-iam-roles");
exports.dataAwsIamServerCertificate = require("./data-aws-iam-server-certificate");
exports.dataAwsIamSessionContext = require("./data-aws-iam-session-context");
exports.dataAwsIamUser = require("./data-aws-iam-user");
exports.dataAwsIamUserSshKey = require("./data-aws-iam-user-ssh-key");
exports.dataAwsIamUsers = require("./data-aws-iam-users");
exports.dataAwsIdentitystoreGroup = require("./data-aws-identitystore-group");
exports.dataAwsIdentitystoreUser = require("./data-aws-identitystore-user");
exports.dataAwsImagebuilderComponent = require("./data-aws-imagebuilder-component");
exports.dataAwsImagebuilderComponents = require("./data-aws-imagebuilder-components");
exports.dataAwsImagebuilderDistributionConfiguration = require("./data-aws-imagebuilder-distribution-configuration");
exports.dataAwsImagebuilderDistributionConfigurations = require("./data-aws-imagebuilder-distribution-configurations");
exports.dataAwsImagebuilderImage = require("./data-aws-imagebuilder-image");
exports.dataAwsImagebuilderImagePipeline = require("./data-aws-imagebuilder-image-pipeline");
exports.dataAwsImagebuilderImageRecipe = require("./data-aws-imagebuilder-image-recipe");
exports.dataAwsImagebuilderImageRecipes = require("./data-aws-imagebuilder-image-recipes");
exports.dataAwsImagebuilderInfrastructureConfiguration = require("./data-aws-imagebuilder-infrastructure-configuration");
exports.dataAwsImagebuilderInfrastructureConfigurations = require("./data-aws-imagebuilder-infrastructure-configurations");
exports.dataAwsInspectorRulesPackages = require("./data-aws-inspector-rules-packages");
exports.dataAwsInstance = require("./data-aws-instance");
exports.dataAwsInstances = require("./data-aws-instances");
exports.dataAwsInternetGateway = require("./data-aws-internet-gateway");
exports.dataAwsIotEndpoint = require("./data-aws-iot-endpoint");
exports.dataAwsIpRanges = require("./data-aws-ip-ranges");
exports.dataAwsKeyPair = require("./data-aws-key-pair");
exports.dataAwsKinesisFirehoseDeliveryStream = require("./data-aws-kinesis-firehose-delivery-stream");
exports.dataAwsKinesisStream = require("./data-aws-kinesis-stream");
exports.dataAwsKinesisStreamConsumer = require("./data-aws-kinesis-stream-consumer");
exports.dataAwsKmsAlias = require("./data-aws-kms-alias");
exports.dataAwsKmsCiphertext = require("./data-aws-kms-ciphertext");
exports.dataAwsKmsKey = require("./data-aws-kms-key");
exports.dataAwsKmsPublicKey = require("./data-aws-kms-public-key");
exports.dataAwsKmsSecret = require("./data-aws-kms-secret");
exports.dataAwsKmsSecrets = require("./data-aws-kms-secrets");
exports.dataAwsLakeformationDataLakeSettings = require("./data-aws-lakeformation-data-lake-settings");
exports.dataAwsLakeformationPermissions = require("./data-aws-lakeformation-permissions");
exports.dataAwsLakeformationResource = require("./data-aws-lakeformation-resource");
exports.dataAwsLambdaAlias = require("./data-aws-lambda-alias");
exports.dataAwsLambdaCodeSigningConfig = require("./data-aws-lambda-code-signing-config");
exports.dataAwsLambdaFunction = require("./data-aws-lambda-function");
exports.dataAwsLambdaInvocation = require("./data-aws-lambda-invocation");
exports.dataAwsLambdaLayerVersion = require("./data-aws-lambda-layer-version");
exports.dataAwsLaunchConfiguration = require("./data-aws-launch-configuration");
exports.dataAwsLaunchTemplate = require("./data-aws-launch-template");
exports.dataAwsLb = require("./data-aws-lb");
exports.dataAwsLbListener = require("./data-aws-lb-listener");
exports.dataAwsLbTargetGroup = require("./data-aws-lb-target-group");
exports.dataAwsLexBot = require("./data-aws-lex-bot");
exports.dataAwsLexBotAlias = require("./data-aws-lex-bot-alias");
exports.dataAwsLexIntent = require("./data-aws-lex-intent");
exports.dataAwsLexSlotType = require("./data-aws-lex-slot-type");
exports.dataAwsMqBroker = require("./data-aws-mq-broker");
exports.dataAwsMskBrokerNodes = require("./data-aws-msk-broker-nodes");
exports.dataAwsMskCluster = require("./data-aws-msk-cluster");
exports.dataAwsMskConfiguration = require("./data-aws-msk-configuration");
exports.dataAwsMskKafkaVersion = require("./data-aws-msk-kafka-version");
exports.dataAwsMskconnectCustomPlugin = require("./data-aws-mskconnect-custom-plugin");
exports.dataAwsMskconnectWorkerConfiguration = require("./data-aws-mskconnect-worker-configuration");
exports.dataAwsNatGateway = require("./data-aws-nat-gateway");
exports.dataAwsNeptuneEngineVersion = require("./data-aws-neptune-engine-version");
exports.dataAwsNeptuneOrderableDbInstance = require("./data-aws-neptune-orderable-db-instance");
exports.dataAwsNetworkAcls = require("./data-aws-network-acls");
exports.dataAwsNetworkInterface = require("./data-aws-network-interface");
exports.dataAwsNetworkInterfaces = require("./data-aws-network-interfaces");
exports.dataAwsOrganizationsDelegatedAdministrators = require("./data-aws-organizations-delegated-administrators");
exports.dataAwsOrganizationsDelegatedServices = require("./data-aws-organizations-delegated-services");
exports.dataAwsOrganizationsOrganization = require("./data-aws-organizations-organization");
exports.dataAwsOrganizationsOrganizationalUnits = require("./data-aws-organizations-organizational-units");
exports.dataAwsOrganizationsResourceTags = require("./data-aws-organizations-resource-tags");
exports.dataAwsOutpostsOutpost = require("./data-aws-outposts-outpost");
exports.dataAwsOutpostsOutpostInstanceType = require("./data-aws-outposts-outpost-instance-type");
exports.dataAwsOutpostsOutpostInstanceTypes = require("./data-aws-outposts-outpost-instance-types");
exports.dataAwsOutpostsOutposts = require("./data-aws-outposts-outposts");
exports.dataAwsOutpostsSite = require("./data-aws-outposts-site");
exports.dataAwsOutpostsSites = require("./data-aws-outposts-sites");
exports.dataAwsPartition = require("./data-aws-partition");
exports.dataAwsPrefixList = require("./data-aws-prefix-list");
exports.dataAwsPricingProduct = require("./data-aws-pricing-product");
exports.dataAwsQldbLedger = require("./data-aws-qldb-ledger");
exports.dataAwsRamResourceShare = require("./data-aws-ram-resource-share");
exports.dataAwsRdsCertificate = require("./data-aws-rds-certificate");
exports.dataAwsRdsCluster = require("./data-aws-rds-cluster");
exports.dataAwsRdsEngineVersion = require("./data-aws-rds-engine-version");
exports.dataAwsRdsOrderableDbInstance = require("./data-aws-rds-orderable-db-instance");
exports.dataAwsRedshiftCluster = require("./data-aws-redshift-cluster");
exports.dataAwsRedshiftOrderableCluster = require("./data-aws-redshift-orderable-cluster");
exports.dataAwsRedshiftServiceAccount = require("./data-aws-redshift-service-account");
exports.dataAwsRegion = require("./data-aws-region");
exports.dataAwsRegions = require("./data-aws-regions");
exports.dataAwsResourcegroupstaggingapiResources = require("./data-aws-resourcegroupstaggingapi-resources");
exports.dataAwsRoute = require("./data-aws-route");
exports.dataAwsRoute53DelegationSet = require("./data-aws-route53-delegation-set");
exports.dataAwsRoute53ResolverEndpoint = require("./data-aws-route53-resolver-endpoint");
exports.dataAwsRoute53ResolverRule = require("./data-aws-route53-resolver-rule");
exports.dataAwsRoute53ResolverRules = require("./data-aws-route53-resolver-rules");
exports.dataAwsRoute53Zone = require("./data-aws-route53-zone");
exports.dataAwsRouteTable = require("./data-aws-route-table");
exports.dataAwsRouteTables = require("./data-aws-route-tables");
exports.dataAwsS3Bucket = require("./data-aws-s3-bucket");
exports.dataAwsS3BucketObject = require("./data-aws-s3-bucket-object");
exports.dataAwsS3BucketObjects = require("./data-aws-s3-bucket-objects");
exports.dataAwsSagemakerPrebuiltEcrImage = require("./data-aws-sagemaker-prebuilt-ecr-image");
exports.dataAwsSecretsmanagerSecret = require("./data-aws-secretsmanager-secret");
exports.dataAwsSecretsmanagerSecretRotation = require("./data-aws-secretsmanager-secret-rotation");
exports.dataAwsSecretsmanagerSecretVersion = require("./data-aws-secretsmanager-secret-version");
exports.dataAwsSecurityGroup = require("./data-aws-security-group");
exports.dataAwsSecurityGroups = require("./data-aws-security-groups");
exports.dataAwsServerlessapplicationrepositoryApplication = require("./data-aws-serverlessapplicationrepository-application");
exports.dataAwsServiceDiscoveryDnsNamespace = require("./data-aws-service-discovery-dns-namespace");
exports.dataAwsServicecatalogConstraint = require("./data-aws-servicecatalog-constraint");
exports.dataAwsServicecatalogLaunchPaths = require("./data-aws-servicecatalog-launch-paths");
exports.dataAwsServicecatalogPortfolio = require("./data-aws-servicecatalog-portfolio");
exports.dataAwsServicecatalogPortfolioConstraints = require("./data-aws-servicecatalog-portfolio-constraints");
exports.dataAwsServicecatalogProduct = require("./data-aws-servicecatalog-product");
exports.dataAwsServicequotasService = require("./data-aws-servicequotas-service");
exports.dataAwsServicequotasServiceQuota = require("./data-aws-servicequotas-service-quota");
exports.dataAwsSesActiveReceiptRuleSet = require("./data-aws-ses-active-receipt-rule-set");
exports.dataAwsSesDomainIdentity = require("./data-aws-ses-domain-identity");
exports.dataAwsSesEmailIdentity = require("./data-aws-ses-email-identity");
exports.dataAwsSfnActivity = require("./data-aws-sfn-activity");
exports.dataAwsSfnStateMachine = require("./data-aws-sfn-state-machine");
exports.dataAwsSignerSigningJob = require("./data-aws-signer-signing-job");
exports.dataAwsSignerSigningProfile = require("./data-aws-signer-signing-profile");
exports.dataAwsSnsTopic = require("./data-aws-sns-topic");
exports.dataAwsSqsQueue = require("./data-aws-sqs-queue");
exports.dataAwsSsmDocument = require("./data-aws-ssm-document");
exports.dataAwsSsmParameter = require("./data-aws-ssm-parameter");
exports.dataAwsSsmParametersByPath = require("./data-aws-ssm-parameters-by-path");
exports.dataAwsSsmPatchBaseline = require("./data-aws-ssm-patch-baseline");
exports.dataAwsSsoadminInstances = require("./data-aws-ssoadmin-instances");
exports.dataAwsSsoadminPermissionSet = require("./data-aws-ssoadmin-permission-set");
exports.dataAwsStoragegatewayLocalDisk = require("./data-aws-storagegateway-local-disk");
exports.dataAwsSubnet = require("./data-aws-subnet");
exports.dataAwsSubnetIds = require("./data-aws-subnet-ids");
exports.dataAwsSubnets = require("./data-aws-subnets");
exports.dataAwsTransferServer = require("./data-aws-transfer-server");
exports.dataAwsVpc = require("./data-aws-vpc");
exports.dataAwsVpcDhcpOptions = require("./data-aws-vpc-dhcp-options");
exports.dataAwsVpcEndpoint = require("./data-aws-vpc-endpoint");
exports.dataAwsVpcEndpointService = require("./data-aws-vpc-endpoint-service");
exports.dataAwsVpcIpamPool = require("./data-aws-vpc-ipam-pool");
exports.dataAwsVpcIpamPreviewNextCidr = require("./data-aws-vpc-ipam-preview-next-cidr");
exports.dataAwsVpcPeeringConnection = require("./data-aws-vpc-peering-connection");
exports.dataAwsVpcPeeringConnections = require("./data-aws-vpc-peering-connections");
exports.dataAwsVpcs = require("./data-aws-vpcs");
exports.dataAwsVpnGateway = require("./data-aws-vpn-gateway");
exports.dataAwsWafIpset = require("./data-aws-waf-ipset");
exports.dataAwsWafRateBasedRule = require("./data-aws-waf-rate-based-rule");
exports.dataAwsWafRule = require("./data-aws-waf-rule");
exports.dataAwsWafWebAcl = require("./data-aws-waf-web-acl");
exports.dataAwsWafregionalIpset = require("./data-aws-wafregional-ipset");
exports.dataAwsWafregionalRateBasedRule = require("./data-aws-wafregional-rate-based-rule");
exports.dataAwsWafregionalRule = require("./data-aws-wafregional-rule");
exports.dataAwsWafregionalWebAcl = require("./data-aws-wafregional-web-acl");
exports.dataAwsWafv2IpSet = require("./data-aws-wafv2-ip-set");
exports.dataAwsWafv2RegexPatternSet = require("./data-aws-wafv2-regex-pattern-set");
exports.dataAwsWafv2RuleGroup = require("./data-aws-wafv2-rule-group");
exports.dataAwsWafv2WebAcl = require("./data-aws-wafv2-web-acl");
exports.dataAwsWorkspacesBundle = require("./data-aws-workspaces-bundle");
exports.dataAwsWorkspacesDirectory = require("./data-aws-workspaces-directory");
exports.dataAwsWorkspacesImage = require("./data-aws-workspaces-image");
exports.dataAwsWorkspacesWorkspace = require("./data-aws-workspaces-workspace");
exports.provider = require("./provider");
//# sourceMappingURL=data:application/json;base64,