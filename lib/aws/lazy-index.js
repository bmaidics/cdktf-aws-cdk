"use strict";
/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */
// generated by cdktf get
Object.defineProperty(exports, 'accessanalyzerAnalyzer', { get: function () { return require('./accessanalyzer-analyzer'); } });
Object.defineProperty(exports, 'accountAlternateContact', { get: function () { return require('./account-alternate-contact'); } });
Object.defineProperty(exports, 'acmCertificate', { get: function () { return require('./acm-certificate'); } });
Object.defineProperty(exports, 'acmCertificateValidation', { get: function () { return require('./acm-certificate-validation'); } });
Object.defineProperty(exports, 'acmpcaCertificate', { get: function () { return require('./acmpca-certificate'); } });
Object.defineProperty(exports, 'acmpcaCertificateAuthority', { get: function () { return require('./acmpca-certificate-authority'); } });
Object.defineProperty(exports, 'acmpcaCertificateAuthorityCertificate', { get: function () { return require('./acmpca-certificate-authority-certificate'); } });
Object.defineProperty(exports, 'alb', { get: function () { return require('./alb'); } });
Object.defineProperty(exports, 'albListener', { get: function () { return require('./alb-listener'); } });
Object.defineProperty(exports, 'albListenerCertificate', { get: function () { return require('./alb-listener-certificate'); } });
Object.defineProperty(exports, 'albListenerRule', { get: function () { return require('./alb-listener-rule'); } });
Object.defineProperty(exports, 'albTargetGroup', { get: function () { return require('./alb-target-group'); } });
Object.defineProperty(exports, 'albTargetGroupAttachment', { get: function () { return require('./alb-target-group-attachment'); } });
Object.defineProperty(exports, 'ami', { get: function () { return require('./ami'); } });
Object.defineProperty(exports, 'amiCopy', { get: function () { return require('./ami-copy'); } });
Object.defineProperty(exports, 'amiFromInstance', { get: function () { return require('./ami-from-instance'); } });
Object.defineProperty(exports, 'amiLaunchPermission', { get: function () { return require('./ami-launch-permission'); } });
Object.defineProperty(exports, 'amplifyApp', { get: function () { return require('./amplify-app'); } });
Object.defineProperty(exports, 'amplifyBackendEnvironment', { get: function () { return require('./amplify-backend-environment'); } });
Object.defineProperty(exports, 'amplifyBranch', { get: function () { return require('./amplify-branch'); } });
Object.defineProperty(exports, 'amplifyDomainAssociation', { get: function () { return require('./amplify-domain-association'); } });
Object.defineProperty(exports, 'amplifyWebhook', { get: function () { return require('./amplify-webhook'); } });
Object.defineProperty(exports, 'apiGatewayAccount', { get: function () { return require('./api-gateway-account'); } });
Object.defineProperty(exports, 'apiGatewayApiKey', { get: function () { return require('./api-gateway-api-key'); } });
Object.defineProperty(exports, 'apiGatewayAuthorizer', { get: function () { return require('./api-gateway-authorizer'); } });
Object.defineProperty(exports, 'apiGatewayBasePathMapping', { get: function () { return require('./api-gateway-base-path-mapping'); } });
Object.defineProperty(exports, 'apiGatewayClientCertificate', { get: function () { return require('./api-gateway-client-certificate'); } });
Object.defineProperty(exports, 'apiGatewayDeployment', { get: function () { return require('./api-gateway-deployment'); } });
Object.defineProperty(exports, 'apiGatewayDocumentationPart', { get: function () { return require('./api-gateway-documentation-part'); } });
Object.defineProperty(exports, 'apiGatewayDocumentationVersion', { get: function () { return require('./api-gateway-documentation-version'); } });
Object.defineProperty(exports, 'apiGatewayDomainName', { get: function () { return require('./api-gateway-domain-name'); } });
Object.defineProperty(exports, 'apiGatewayGatewayResponse', { get: function () { return require('./api-gateway-gateway-response'); } });
Object.defineProperty(exports, 'apiGatewayIntegration', { get: function () { return require('./api-gateway-integration'); } });
Object.defineProperty(exports, 'apiGatewayIntegrationResponse', { get: function () { return require('./api-gateway-integration-response'); } });
Object.defineProperty(exports, 'apiGatewayMethod', { get: function () { return require('./api-gateway-method'); } });
Object.defineProperty(exports, 'apiGatewayMethodResponse', { get: function () { return require('./api-gateway-method-response'); } });
Object.defineProperty(exports, 'apiGatewayMethodSettings', { get: function () { return require('./api-gateway-method-settings'); } });
Object.defineProperty(exports, 'apiGatewayModel', { get: function () { return require('./api-gateway-model'); } });
Object.defineProperty(exports, 'apiGatewayRequestValidator', { get: function () { return require('./api-gateway-request-validator'); } });
Object.defineProperty(exports, 'apiGatewayResource', { get: function () { return require('./api-gateway-resource'); } });
Object.defineProperty(exports, 'apiGatewayRestApi', { get: function () { return require('./api-gateway-rest-api'); } });
Object.defineProperty(exports, 'apiGatewayRestApiPolicy', { get: function () { return require('./api-gateway-rest-api-policy'); } });
Object.defineProperty(exports, 'apiGatewayStage', { get: function () { return require('./api-gateway-stage'); } });
Object.defineProperty(exports, 'apiGatewayUsagePlan', { get: function () { return require('./api-gateway-usage-plan'); } });
Object.defineProperty(exports, 'apiGatewayUsagePlanKey', { get: function () { return require('./api-gateway-usage-plan-key'); } });
Object.defineProperty(exports, 'apiGatewayVpcLink', { get: function () { return require('./api-gateway-vpc-link'); } });
Object.defineProperty(exports, 'apigatewayv2Api', { get: function () { return require('./apigatewayv2-api'); } });
Object.defineProperty(exports, 'apigatewayv2ApiMapping', { get: function () { return require('./apigatewayv2-api-mapping'); } });
Object.defineProperty(exports, 'apigatewayv2Authorizer', { get: function () { return require('./apigatewayv2-authorizer'); } });
Object.defineProperty(exports, 'apigatewayv2Deployment', { get: function () { return require('./apigatewayv2-deployment'); } });
Object.defineProperty(exports, 'apigatewayv2DomainName', { get: function () { return require('./apigatewayv2-domain-name'); } });
Object.defineProperty(exports, 'apigatewayv2Integration', { get: function () { return require('./apigatewayv2-integration'); } });
Object.defineProperty(exports, 'apigatewayv2IntegrationResponse', { get: function () { return require('./apigatewayv2-integration-response'); } });
Object.defineProperty(exports, 'apigatewayv2Model', { get: function () { return require('./apigatewayv2-model'); } });
Object.defineProperty(exports, 'apigatewayv2Route', { get: function () { return require('./apigatewayv2-route'); } });
Object.defineProperty(exports, 'apigatewayv2RouteResponse', { get: function () { return require('./apigatewayv2-route-response'); } });
Object.defineProperty(exports, 'apigatewayv2Stage', { get: function () { return require('./apigatewayv2-stage'); } });
Object.defineProperty(exports, 'apigatewayv2VpcLink', { get: function () { return require('./apigatewayv2-vpc-link'); } });
Object.defineProperty(exports, 'appCookieStickinessPolicy', { get: function () { return require('./app-cookie-stickiness-policy'); } });
Object.defineProperty(exports, 'appautoscalingPolicy', { get: function () { return require('./appautoscaling-policy'); } });
Object.defineProperty(exports, 'appautoscalingScheduledAction', { get: function () { return require('./appautoscaling-scheduled-action'); } });
Object.defineProperty(exports, 'appautoscalingTarget', { get: function () { return require('./appautoscaling-target'); } });
Object.defineProperty(exports, 'appconfigApplication', { get: function () { return require('./appconfig-application'); } });
Object.defineProperty(exports, 'appconfigConfigurationProfile', { get: function () { return require('./appconfig-configuration-profile'); } });
Object.defineProperty(exports, 'appconfigDeployment', { get: function () { return require('./appconfig-deployment'); } });
Object.defineProperty(exports, 'appconfigDeploymentStrategy', { get: function () { return require('./appconfig-deployment-strategy'); } });
Object.defineProperty(exports, 'appconfigEnvironment', { get: function () { return require('./appconfig-environment'); } });
Object.defineProperty(exports, 'appconfigHostedConfigurationVersion', { get: function () { return require('./appconfig-hosted-configuration-version'); } });
Object.defineProperty(exports, 'appmeshGatewayRoute', { get: function () { return require('./appmesh-gateway-route'); } });
Object.defineProperty(exports, 'appmeshMesh', { get: function () { return require('./appmesh-mesh'); } });
Object.defineProperty(exports, 'appmeshRoute', { get: function () { return require('./appmesh-route'); } });
Object.defineProperty(exports, 'appmeshVirtualGateway', { get: function () { return require('./appmesh-virtual-gateway'); } });
Object.defineProperty(exports, 'appmeshVirtualNode', { get: function () { return require('./appmesh-virtual-node'); } });
Object.defineProperty(exports, 'appmeshVirtualRouter', { get: function () { return require('./appmesh-virtual-router'); } });
Object.defineProperty(exports, 'appmeshVirtualService', { get: function () { return require('./appmesh-virtual-service'); } });
Object.defineProperty(exports, 'apprunnerAutoScalingConfigurationVersion', { get: function () { return require('./apprunner-auto-scaling-configuration-version'); } });
Object.defineProperty(exports, 'apprunnerConnection', { get: function () { return require('./apprunner-connection'); } });
Object.defineProperty(exports, 'apprunnerCustomDomainAssociation', { get: function () { return require('./apprunner-custom-domain-association'); } });
Object.defineProperty(exports, 'apprunnerService', { get: function () { return require('./apprunner-service'); } });
Object.defineProperty(exports, 'appstreamDirectoryConfig', { get: function () { return require('./appstream-directory-config'); } });
Object.defineProperty(exports, 'appstreamFleet', { get: function () { return require('./appstream-fleet'); } });
Object.defineProperty(exports, 'appstreamFleetStackAssociation', { get: function () { return require('./appstream-fleet-stack-association'); } });
Object.defineProperty(exports, 'appstreamImageBuilder', { get: function () { return require('./appstream-image-builder'); } });
Object.defineProperty(exports, 'appstreamStack', { get: function () { return require('./appstream-stack'); } });
Object.defineProperty(exports, 'appstreamUser', { get: function () { return require('./appstream-user'); } });
Object.defineProperty(exports, 'appstreamUserStackAssociation', { get: function () { return require('./appstream-user-stack-association'); } });
Object.defineProperty(exports, 'appsyncApiCache', { get: function () { return require('./appsync-api-cache'); } });
Object.defineProperty(exports, 'appsyncApiKey', { get: function () { return require('./appsync-api-key'); } });
Object.defineProperty(exports, 'appsyncDatasource', { get: function () { return require('./appsync-datasource'); } });
Object.defineProperty(exports, 'appsyncDomainName', { get: function () { return require('./appsync-domain-name'); } });
Object.defineProperty(exports, 'appsyncDomainNameApiAssociation', { get: function () { return require('./appsync-domain-name-api-association'); } });
Object.defineProperty(exports, 'appsyncFunction', { get: function () { return require('./appsync-function'); } });
Object.defineProperty(exports, 'appsyncGraphqlApi', { get: function () { return require('./appsync-graphql-api'); } });
Object.defineProperty(exports, 'appsyncResolver', { get: function () { return require('./appsync-resolver'); } });
Object.defineProperty(exports, 'athenaDatabase', { get: function () { return require('./athena-database'); } });
Object.defineProperty(exports, 'athenaNamedQuery', { get: function () { return require('./athena-named-query'); } });
Object.defineProperty(exports, 'athenaWorkgroup', { get: function () { return require('./athena-workgroup'); } });
Object.defineProperty(exports, 'autoscalingAttachment', { get: function () { return require('./autoscaling-attachment'); } });
Object.defineProperty(exports, 'autoscalingGroup', { get: function () { return require('./autoscaling-group'); } });
Object.defineProperty(exports, 'autoscalingGroupTag', { get: function () { return require('./autoscaling-group-tag'); } });
Object.defineProperty(exports, 'autoscalingLifecycleHook', { get: function () { return require('./autoscaling-lifecycle-hook'); } });
Object.defineProperty(exports, 'autoscalingNotification', { get: function () { return require('./autoscaling-notification'); } });
Object.defineProperty(exports, 'autoscalingPolicy', { get: function () { return require('./autoscaling-policy'); } });
Object.defineProperty(exports, 'autoscalingSchedule', { get: function () { return require('./autoscaling-schedule'); } });
Object.defineProperty(exports, 'autoscalingplansScalingPlan', { get: function () { return require('./autoscalingplans-scaling-plan'); } });
Object.defineProperty(exports, 'backupGlobalSettings', { get: function () { return require('./backup-global-settings'); } });
Object.defineProperty(exports, 'backupPlan', { get: function () { return require('./backup-plan'); } });
Object.defineProperty(exports, 'backupRegionSettings', { get: function () { return require('./backup-region-settings'); } });
Object.defineProperty(exports, 'backupSelection', { get: function () { return require('./backup-selection'); } });
Object.defineProperty(exports, 'backupVault', { get: function () { return require('./backup-vault'); } });
Object.defineProperty(exports, 'backupVaultLockConfiguration', { get: function () { return require('./backup-vault-lock-configuration'); } });
Object.defineProperty(exports, 'backupVaultNotifications', { get: function () { return require('./backup-vault-notifications'); } });
Object.defineProperty(exports, 'backupVaultPolicy', { get: function () { return require('./backup-vault-policy'); } });
Object.defineProperty(exports, 'batchComputeEnvironment', { get: function () { return require('./batch-compute-environment'); } });
Object.defineProperty(exports, 'batchJobDefinition', { get: function () { return require('./batch-job-definition'); } });
Object.defineProperty(exports, 'batchJobQueue', { get: function () { return require('./batch-job-queue'); } });
Object.defineProperty(exports, 'batchSchedulingPolicy', { get: function () { return require('./batch-scheduling-policy'); } });
Object.defineProperty(exports, 'budgetsBudget', { get: function () { return require('./budgets-budget'); } });
Object.defineProperty(exports, 'budgetsBudgetAction', { get: function () { return require('./budgets-budget-action'); } });
Object.defineProperty(exports, 'chimeVoiceConnector', { get: function () { return require('./chime-voice-connector'); } });
Object.defineProperty(exports, 'chimeVoiceConnectorGroup', { get: function () { return require('./chime-voice-connector-group'); } });
Object.defineProperty(exports, 'chimeVoiceConnectorLogging', { get: function () { return require('./chime-voice-connector-logging'); } });
Object.defineProperty(exports, 'chimeVoiceConnectorOrigination', { get: function () { return require('./chime-voice-connector-origination'); } });
Object.defineProperty(exports, 'chimeVoiceConnectorStreaming', { get: function () { return require('./chime-voice-connector-streaming'); } });
Object.defineProperty(exports, 'chimeVoiceConnectorTermination', { get: function () { return require('./chime-voice-connector-termination'); } });
Object.defineProperty(exports, 'chimeVoiceConnectorTerminationCredentials', { get: function () { return require('./chime-voice-connector-termination-credentials'); } });
Object.defineProperty(exports, 'cloud9EnvironmentEc2', { get: function () { return require('./cloud9-environment-ec2'); } });
Object.defineProperty(exports, 'cloud9EnvironmentMembership', { get: function () { return require('./cloud9-environment-membership'); } });
Object.defineProperty(exports, 'cloudcontrolapiResource', { get: function () { return require('./cloudcontrolapi-resource'); } });
Object.defineProperty(exports, 'cloudformationStack', { get: function () { return require('./cloudformation-stack'); } });
Object.defineProperty(exports, 'cloudformationStackSet', { get: function () { return require('./cloudformation-stack-set'); } });
Object.defineProperty(exports, 'cloudformationStackSetInstance', { get: function () { return require('./cloudformation-stack-set-instance'); } });
Object.defineProperty(exports, 'cloudformationType', { get: function () { return require('./cloudformation-type'); } });
Object.defineProperty(exports, 'cloudfrontCachePolicy', { get: function () { return require('./cloudfront-cache-policy'); } });
Object.defineProperty(exports, 'cloudfrontDistribution', { get: function () { return require('./cloudfront-distribution'); } });
Object.defineProperty(exports, 'cloudfrontFieldLevelEncryptionConfig', { get: function () { return require('./cloudfront-field-level-encryption-config'); } });
Object.defineProperty(exports, 'cloudfrontFieldLevelEncryptionProfile', { get: function () { return require('./cloudfront-field-level-encryption-profile'); } });
Object.defineProperty(exports, 'cloudfrontFunction', { get: function () { return require('./cloudfront-function'); } });
Object.defineProperty(exports, 'cloudfrontKeyGroup', { get: function () { return require('./cloudfront-key-group'); } });
Object.defineProperty(exports, 'cloudfrontMonitoringSubscription', { get: function () { return require('./cloudfront-monitoring-subscription'); } });
Object.defineProperty(exports, 'cloudfrontOriginAccessIdentity', { get: function () { return require('./cloudfront-origin-access-identity'); } });
Object.defineProperty(exports, 'cloudfrontOriginRequestPolicy', { get: function () { return require('./cloudfront-origin-request-policy'); } });
Object.defineProperty(exports, 'cloudfrontPublicKey', { get: function () { return require('./cloudfront-public-key'); } });
Object.defineProperty(exports, 'cloudfrontRealtimeLogConfig', { get: function () { return require('./cloudfront-realtime-log-config'); } });
Object.defineProperty(exports, 'cloudfrontResponseHeadersPolicy', { get: function () { return require('./cloudfront-response-headers-policy'); } });
Object.defineProperty(exports, 'cloudhsmV2Cluster', { get: function () { return require('./cloudhsm-v2-cluster'); } });
Object.defineProperty(exports, 'cloudhsmV2Hsm', { get: function () { return require('./cloudhsm-v2-hsm'); } });
Object.defineProperty(exports, 'cloudsearchDomain', { get: function () { return require('./cloudsearch-domain'); } });
Object.defineProperty(exports, 'cloudsearchDomainServiceAccessPolicy', { get: function () { return require('./cloudsearch-domain-service-access-policy'); } });
Object.defineProperty(exports, 'cloudtrail', { get: function () { return require('./cloudtrail'); } });
Object.defineProperty(exports, 'cloudwatchCompositeAlarm', { get: function () { return require('./cloudwatch-composite-alarm'); } });
Object.defineProperty(exports, 'cloudwatchDashboard', { get: function () { return require('./cloudwatch-dashboard'); } });
Object.defineProperty(exports, 'cloudwatchEventApiDestination', { get: function () { return require('./cloudwatch-event-api-destination'); } });
Object.defineProperty(exports, 'cloudwatchEventArchive', { get: function () { return require('./cloudwatch-event-archive'); } });
Object.defineProperty(exports, 'cloudwatchEventBus', { get: function () { return require('./cloudwatch-event-bus'); } });
Object.defineProperty(exports, 'cloudwatchEventBusPolicy', { get: function () { return require('./cloudwatch-event-bus-policy'); } });
Object.defineProperty(exports, 'cloudwatchEventConnection', { get: function () { return require('./cloudwatch-event-connection'); } });
Object.defineProperty(exports, 'cloudwatchEventPermission', { get: function () { return require('./cloudwatch-event-permission'); } });
Object.defineProperty(exports, 'cloudwatchEventRule', { get: function () { return require('./cloudwatch-event-rule'); } });
Object.defineProperty(exports, 'cloudwatchEventTarget', { get: function () { return require('./cloudwatch-event-target'); } });
Object.defineProperty(exports, 'cloudwatchLogDestination', { get: function () { return require('./cloudwatch-log-destination'); } });
Object.defineProperty(exports, 'cloudwatchLogDestinationPolicy', { get: function () { return require('./cloudwatch-log-destination-policy'); } });
Object.defineProperty(exports, 'cloudwatchLogGroup', { get: function () { return require('./cloudwatch-log-group'); } });
Object.defineProperty(exports, 'cloudwatchLogMetricFilter', { get: function () { return require('./cloudwatch-log-metric-filter'); } });
Object.defineProperty(exports, 'cloudwatchLogResourcePolicy', { get: function () { return require('./cloudwatch-log-resource-policy'); } });
Object.defineProperty(exports, 'cloudwatchLogStream', { get: function () { return require('./cloudwatch-log-stream'); } });
Object.defineProperty(exports, 'cloudwatchLogSubscriptionFilter', { get: function () { return require('./cloudwatch-log-subscription-filter'); } });
Object.defineProperty(exports, 'cloudwatchMetricAlarm', { get: function () { return require('./cloudwatch-metric-alarm'); } });
Object.defineProperty(exports, 'cloudwatchMetricStream', { get: function () { return require('./cloudwatch-metric-stream'); } });
Object.defineProperty(exports, 'cloudwatchQueryDefinition', { get: function () { return require('./cloudwatch-query-definition'); } });
Object.defineProperty(exports, 'codeartifactDomain', { get: function () { return require('./codeartifact-domain'); } });
Object.defineProperty(exports, 'codeartifactDomainPermissionsPolicy', { get: function () { return require('./codeartifact-domain-permissions-policy'); } });
Object.defineProperty(exports, 'codeartifactRepository', { get: function () { return require('./codeartifact-repository'); } });
Object.defineProperty(exports, 'codeartifactRepositoryPermissionsPolicy', { get: function () { return require('./codeartifact-repository-permissions-policy'); } });
Object.defineProperty(exports, 'codebuildProject', { get: function () { return require('./codebuild-project'); } });
Object.defineProperty(exports, 'codebuildReportGroup', { get: function () { return require('./codebuild-report-group'); } });
Object.defineProperty(exports, 'codebuildResourcePolicy', { get: function () { return require('./codebuild-resource-policy'); } });
Object.defineProperty(exports, 'codebuildSourceCredential', { get: function () { return require('./codebuild-source-credential'); } });
Object.defineProperty(exports, 'codebuildWebhook', { get: function () { return require('./codebuild-webhook'); } });
Object.defineProperty(exports, 'codecommitApprovalRuleTemplate', { get: function () { return require('./codecommit-approval-rule-template'); } });
Object.defineProperty(exports, 'codecommitApprovalRuleTemplateAssociation', { get: function () { return require('./codecommit-approval-rule-template-association'); } });
Object.defineProperty(exports, 'codecommitRepository', { get: function () { return require('./codecommit-repository'); } });
Object.defineProperty(exports, 'codecommitTrigger', { get: function () { return require('./codecommit-trigger'); } });
Object.defineProperty(exports, 'codedeployApp', { get: function () { return require('./codedeploy-app'); } });
Object.defineProperty(exports, 'codedeployDeploymentConfig', { get: function () { return require('./codedeploy-deployment-config'); } });
Object.defineProperty(exports, 'codedeployDeploymentGroup', { get: function () { return require('./codedeploy-deployment-group'); } });
Object.defineProperty(exports, 'codepipeline', { get: function () { return require('./codepipeline'); } });
Object.defineProperty(exports, 'codepipelineWebhook', { get: function () { return require('./codepipeline-webhook'); } });
Object.defineProperty(exports, 'codestarconnectionsConnection', { get: function () { return require('./codestarconnections-connection'); } });
Object.defineProperty(exports, 'codestarconnectionsHost', { get: function () { return require('./codestarconnections-host'); } });
Object.defineProperty(exports, 'codestarnotificationsNotificationRule', { get: function () { return require('./codestarnotifications-notification-rule'); } });
Object.defineProperty(exports, 'cognitoIdentityPool', { get: function () { return require('./cognito-identity-pool'); } });
Object.defineProperty(exports, 'cognitoIdentityPoolProviderPrincipalTag', { get: function () { return require('./cognito-identity-pool-provider-principal-tag'); } });
Object.defineProperty(exports, 'cognitoIdentityPoolRolesAttachment', { get: function () { return require('./cognito-identity-pool-roles-attachment'); } });
Object.defineProperty(exports, 'cognitoIdentityProvider', { get: function () { return require('./cognito-identity-provider'); } });
Object.defineProperty(exports, 'cognitoResourceServer', { get: function () { return require('./cognito-resource-server'); } });
Object.defineProperty(exports, 'cognitoUserGroup', { get: function () { return require('./cognito-user-group'); } });
Object.defineProperty(exports, 'cognitoUserPool', { get: function () { return require('./cognito-user-pool'); } });
Object.defineProperty(exports, 'cognitoUserPoolClient', { get: function () { return require('./cognito-user-pool-client'); } });
Object.defineProperty(exports, 'cognitoUserPoolDomain', { get: function () { return require('./cognito-user-pool-domain'); } });
Object.defineProperty(exports, 'cognitoUserPoolUiCustomization', { get: function () { return require('./cognito-user-pool-ui-customization'); } });
Object.defineProperty(exports, 'configAggregateAuthorization', { get: function () { return require('./config-aggregate-authorization'); } });
Object.defineProperty(exports, 'configConfigRule', { get: function () { return require('./config-config-rule'); } });
Object.defineProperty(exports, 'configConfigurationAggregator', { get: function () { return require('./config-configuration-aggregator'); } });
Object.defineProperty(exports, 'configConfigurationRecorder', { get: function () { return require('./config-configuration-recorder'); } });
Object.defineProperty(exports, 'configConfigurationRecorderStatus', { get: function () { return require('./config-configuration-recorder-status'); } });
Object.defineProperty(exports, 'configConformancePack', { get: function () { return require('./config-conformance-pack'); } });
Object.defineProperty(exports, 'configDeliveryChannel', { get: function () { return require('./config-delivery-channel'); } });
Object.defineProperty(exports, 'configOrganizationConformancePack', { get: function () { return require('./config-organization-conformance-pack'); } });
Object.defineProperty(exports, 'configOrganizationCustomRule', { get: function () { return require('./config-organization-custom-rule'); } });
Object.defineProperty(exports, 'configOrganizationManagedRule', { get: function () { return require('./config-organization-managed-rule'); } });
Object.defineProperty(exports, 'configRemediationConfiguration', { get: function () { return require('./config-remediation-configuration'); } });
Object.defineProperty(exports, 'connectBotAssociation', { get: function () { return require('./connect-bot-association'); } });
Object.defineProperty(exports, 'connectContactFlow', { get: function () { return require('./connect-contact-flow'); } });
Object.defineProperty(exports, 'connectContactFlowModule', { get: function () { return require('./connect-contact-flow-module'); } });
Object.defineProperty(exports, 'connectHoursOfOperation', { get: function () { return require('./connect-hours-of-operation'); } });
Object.defineProperty(exports, 'connectInstance', { get: function () { return require('./connect-instance'); } });
Object.defineProperty(exports, 'connectLambdaFunctionAssociation', { get: function () { return require('./connect-lambda-function-association'); } });
Object.defineProperty(exports, 'connectQueue', { get: function () { return require('./connect-queue'); } });
Object.defineProperty(exports, 'connectQuickConnect', { get: function () { return require('./connect-quick-connect'); } });
Object.defineProperty(exports, 'connectSecurityProfile', { get: function () { return require('./connect-security-profile'); } });
Object.defineProperty(exports, 'curReportDefinition', { get: function () { return require('./cur-report-definition'); } });
Object.defineProperty(exports, 'customerGateway', { get: function () { return require('./customer-gateway'); } });
Object.defineProperty(exports, 'dataexchangeDataSet', { get: function () { return require('./dataexchange-data-set'); } });
Object.defineProperty(exports, 'datapipelinePipeline', { get: function () { return require('./datapipeline-pipeline'); } });
Object.defineProperty(exports, 'datapipelinePipelineDefinition', { get: function () { return require('./datapipeline-pipeline-definition'); } });
Object.defineProperty(exports, 'datasyncAgent', { get: function () { return require('./datasync-agent'); } });
Object.defineProperty(exports, 'datasyncLocationEfs', { get: function () { return require('./datasync-location-efs'); } });
Object.defineProperty(exports, 'datasyncLocationFsxLustreFileSystem', { get: function () { return require('./datasync-location-fsx-lustre-file-system'); } });
Object.defineProperty(exports, 'datasyncLocationFsxWindowsFileSystem', { get: function () { return require('./datasync-location-fsx-windows-file-system'); } });
Object.defineProperty(exports, 'datasyncLocationHdfs', { get: function () { return require('./datasync-location-hdfs'); } });
Object.defineProperty(exports, 'datasyncLocationNfs', { get: function () { return require('./datasync-location-nfs'); } });
Object.defineProperty(exports, 'datasyncLocationS3', { get: function () { return require('./datasync-location-s3'); } });
Object.defineProperty(exports, 'datasyncLocationSmb', { get: function () { return require('./datasync-location-smb'); } });
Object.defineProperty(exports, 'datasyncTask', { get: function () { return require('./datasync-task'); } });
Object.defineProperty(exports, 'daxCluster', { get: function () { return require('./dax-cluster'); } });
Object.defineProperty(exports, 'daxParameterGroup', { get: function () { return require('./dax-parameter-group'); } });
Object.defineProperty(exports, 'daxSubnetGroup', { get: function () { return require('./dax-subnet-group'); } });
Object.defineProperty(exports, 'dbClusterSnapshot', { get: function () { return require('./db-cluster-snapshot'); } });
Object.defineProperty(exports, 'dbEventSubscription', { get: function () { return require('./db-event-subscription'); } });
Object.defineProperty(exports, 'dbInstance', { get: function () { return require('./db-instance'); } });
Object.defineProperty(exports, 'dbInstanceRoleAssociation', { get: function () { return require('./db-instance-role-association'); } });
Object.defineProperty(exports, 'dbOptionGroup', { get: function () { return require('./db-option-group'); } });
Object.defineProperty(exports, 'dbParameterGroup', { get: function () { return require('./db-parameter-group'); } });
Object.defineProperty(exports, 'dbProxy', { get: function () { return require('./db-proxy'); } });
Object.defineProperty(exports, 'dbProxyDefaultTargetGroup', { get: function () { return require('./db-proxy-default-target-group'); } });
Object.defineProperty(exports, 'dbProxyEndpoint', { get: function () { return require('./db-proxy-endpoint'); } });
Object.defineProperty(exports, 'dbProxyTarget', { get: function () { return require('./db-proxy-target'); } });
Object.defineProperty(exports, 'dbSecurityGroup', { get: function () { return require('./db-security-group'); } });
Object.defineProperty(exports, 'dbSnapshot', { get: function () { return require('./db-snapshot'); } });
Object.defineProperty(exports, 'dbSubnetGroup', { get: function () { return require('./db-subnet-group'); } });
Object.defineProperty(exports, 'defaultNetworkAcl', { get: function () { return require('./default-network-acl'); } });
Object.defineProperty(exports, 'defaultRouteTable', { get: function () { return require('./default-route-table'); } });
Object.defineProperty(exports, 'defaultSecurityGroup', { get: function () { return require('./default-security-group'); } });
Object.defineProperty(exports, 'defaultSubnet', { get: function () { return require('./default-subnet'); } });
Object.defineProperty(exports, 'defaultVpc', { get: function () { return require('./default-vpc'); } });
Object.defineProperty(exports, 'defaultVpcDhcpOptions', { get: function () { return require('./default-vpc-dhcp-options'); } });
Object.defineProperty(exports, 'detectiveGraph', { get: function () { return require('./detective-graph'); } });
Object.defineProperty(exports, 'detectiveInvitationAccepter', { get: function () { return require('./detective-invitation-accepter'); } });
Object.defineProperty(exports, 'detectiveMember', { get: function () { return require('./detective-member'); } });
Object.defineProperty(exports, 'devicefarmDevicePool', { get: function () { return require('./devicefarm-device-pool'); } });
Object.defineProperty(exports, 'devicefarmInstanceProfile', { get: function () { return require('./devicefarm-instance-profile'); } });
Object.defineProperty(exports, 'devicefarmNetworkProfile', { get: function () { return require('./devicefarm-network-profile'); } });
Object.defineProperty(exports, 'devicefarmProject', { get: function () { return require('./devicefarm-project'); } });
Object.defineProperty(exports, 'devicefarmTestGridProject', { get: function () { return require('./devicefarm-test-grid-project'); } });
Object.defineProperty(exports, 'devicefarmUpload', { get: function () { return require('./devicefarm-upload'); } });
Object.defineProperty(exports, 'directoryServiceConditionalForwarder', { get: function () { return require('./directory-service-conditional-forwarder'); } });
Object.defineProperty(exports, 'directoryServiceDirectory', { get: function () { return require('./directory-service-directory'); } });
Object.defineProperty(exports, 'directoryServiceLogSubscription', { get: function () { return require('./directory-service-log-subscription'); } });
Object.defineProperty(exports, 'dlmLifecyclePolicy', { get: function () { return require('./dlm-lifecycle-policy'); } });
Object.defineProperty(exports, 'dmsCertificate', { get: function () { return require('./dms-certificate'); } });
Object.defineProperty(exports, 'dmsEndpoint', { get: function () { return require('./dms-endpoint'); } });
Object.defineProperty(exports, 'dmsEventSubscription', { get: function () { return require('./dms-event-subscription'); } });
Object.defineProperty(exports, 'dmsReplicationInstance', { get: function () { return require('./dms-replication-instance'); } });
Object.defineProperty(exports, 'dmsReplicationSubnetGroup', { get: function () { return require('./dms-replication-subnet-group'); } });
Object.defineProperty(exports, 'dmsReplicationTask', { get: function () { return require('./dms-replication-task'); } });
Object.defineProperty(exports, 'docdbCluster', { get: function () { return require('./docdb-cluster'); } });
Object.defineProperty(exports, 'docdbClusterInstance', { get: function () { return require('./docdb-cluster-instance'); } });
Object.defineProperty(exports, 'docdbClusterParameterGroup', { get: function () { return require('./docdb-cluster-parameter-group'); } });
Object.defineProperty(exports, 'docdbClusterSnapshot', { get: function () { return require('./docdb-cluster-snapshot'); } });
Object.defineProperty(exports, 'docdbGlobalCluster', { get: function () { return require('./docdb-global-cluster'); } });
Object.defineProperty(exports, 'docdbSubnetGroup', { get: function () { return require('./docdb-subnet-group'); } });
Object.defineProperty(exports, 'dxBgpPeer', { get: function () { return require('./dx-bgp-peer'); } });
Object.defineProperty(exports, 'dxConnection', { get: function () { return require('./dx-connection'); } });
Object.defineProperty(exports, 'dxConnectionAssociation', { get: function () { return require('./dx-connection-association'); } });
Object.defineProperty(exports, 'dxConnectionConfirmation', { get: function () { return require('./dx-connection-confirmation'); } });
Object.defineProperty(exports, 'dxGateway', { get: function () { return require('./dx-gateway'); } });
Object.defineProperty(exports, 'dxGatewayAssociation', { get: function () { return require('./dx-gateway-association'); } });
Object.defineProperty(exports, 'dxGatewayAssociationProposal', { get: function () { return require('./dx-gateway-association-proposal'); } });
Object.defineProperty(exports, 'dxHostedConnection', { get: function () { return require('./dx-hosted-connection'); } });
Object.defineProperty(exports, 'dxHostedPrivateVirtualInterface', { get: function () { return require('./dx-hosted-private-virtual-interface'); } });
Object.defineProperty(exports, 'dxHostedPrivateVirtualInterfaceAccepter', { get: function () { return require('./dx-hosted-private-virtual-interface-accepter'); } });
Object.defineProperty(exports, 'dxHostedPublicVirtualInterface', { get: function () { return require('./dx-hosted-public-virtual-interface'); } });
Object.defineProperty(exports, 'dxHostedPublicVirtualInterfaceAccepter', { get: function () { return require('./dx-hosted-public-virtual-interface-accepter'); } });
Object.defineProperty(exports, 'dxHostedTransitVirtualInterface', { get: function () { return require('./dx-hosted-transit-virtual-interface'); } });
Object.defineProperty(exports, 'dxHostedTransitVirtualInterfaceAccepter', { get: function () { return require('./dx-hosted-transit-virtual-interface-accepter'); } });
Object.defineProperty(exports, 'dxLag', { get: function () { return require('./dx-lag'); } });
Object.defineProperty(exports, 'dxPrivateVirtualInterface', { get: function () { return require('./dx-private-virtual-interface'); } });
Object.defineProperty(exports, 'dxPublicVirtualInterface', { get: function () { return require('./dx-public-virtual-interface'); } });
Object.defineProperty(exports, 'dxTransitVirtualInterface', { get: function () { return require('./dx-transit-virtual-interface'); } });
Object.defineProperty(exports, 'dynamodbGlobalTable', { get: function () { return require('./dynamodb-global-table'); } });
Object.defineProperty(exports, 'dynamodbKinesisStreamingDestination', { get: function () { return require('./dynamodb-kinesis-streaming-destination'); } });
Object.defineProperty(exports, 'dynamodbTable', { get: function () { return require('./dynamodb-table'); } });
Object.defineProperty(exports, 'dynamodbTableItem', { get: function () { return require('./dynamodb-table-item'); } });
Object.defineProperty(exports, 'dynamodbTag', { get: function () { return require('./dynamodb-tag'); } });
Object.defineProperty(exports, 'ebsDefaultKmsKey', { get: function () { return require('./ebs-default-kms-key'); } });
Object.defineProperty(exports, 'ebsEncryptionByDefault', { get: function () { return require('./ebs-encryption-by-default'); } });
Object.defineProperty(exports, 'ebsSnapshot', { get: function () { return require('./ebs-snapshot'); } });
Object.defineProperty(exports, 'ebsSnapshotCopy', { get: function () { return require('./ebs-snapshot-copy'); } });
Object.defineProperty(exports, 'ebsSnapshotImport', { get: function () { return require('./ebs-snapshot-import'); } });
Object.defineProperty(exports, 'ebsVolume', { get: function () { return require('./ebs-volume'); } });
Object.defineProperty(exports, 'ec2AvailabilityZoneGroup', { get: function () { return require('./ec2-availability-zone-group'); } });
Object.defineProperty(exports, 'ec2CapacityReservation', { get: function () { return require('./ec2-capacity-reservation'); } });
Object.defineProperty(exports, 'ec2CarrierGateway', { get: function () { return require('./ec2-carrier-gateway'); } });
Object.defineProperty(exports, 'ec2ClientVpnAuthorizationRule', { get: function () { return require('./ec2-client-vpn-authorization-rule'); } });
Object.defineProperty(exports, 'ec2ClientVpnEndpoint', { get: function () { return require('./ec2-client-vpn-endpoint'); } });
Object.defineProperty(exports, 'ec2ClientVpnNetworkAssociation', { get: function () { return require('./ec2-client-vpn-network-association'); } });
Object.defineProperty(exports, 'ec2ClientVpnRoute', { get: function () { return require('./ec2-client-vpn-route'); } });
Object.defineProperty(exports, 'ec2Fleet', { get: function () { return require('./ec2-fleet'); } });
Object.defineProperty(exports, 'ec2Host', { get: function () { return require('./ec2-host'); } });
Object.defineProperty(exports, 'ec2LocalGatewayRoute', { get: function () { return require('./ec2-local-gateway-route'); } });
Object.defineProperty(exports, 'ec2LocalGatewayRouteTableVpcAssociation', { get: function () { return require('./ec2-local-gateway-route-table-vpc-association'); } });
Object.defineProperty(exports, 'ec2ManagedPrefixList', { get: function () { return require('./ec2-managed-prefix-list'); } });
Object.defineProperty(exports, 'ec2ManagedPrefixListEntry', { get: function () { return require('./ec2-managed-prefix-list-entry'); } });
Object.defineProperty(exports, 'ec2SubnetCidrReservation', { get: function () { return require('./ec2-subnet-cidr-reservation'); } });
Object.defineProperty(exports, 'ec2Tag', { get: function () { return require('./ec2-tag'); } });
Object.defineProperty(exports, 'ec2TrafficMirrorFilter', { get: function () { return require('./ec2-traffic-mirror-filter'); } });
Object.defineProperty(exports, 'ec2TrafficMirrorFilterRule', { get: function () { return require('./ec2-traffic-mirror-filter-rule'); } });
Object.defineProperty(exports, 'ec2TrafficMirrorSession', { get: function () { return require('./ec2-traffic-mirror-session'); } });
Object.defineProperty(exports, 'ec2TrafficMirrorTarget', { get: function () { return require('./ec2-traffic-mirror-target'); } });
Object.defineProperty(exports, 'ec2TransitGateway', { get: function () { return require('./ec2-transit-gateway'); } });
Object.defineProperty(exports, 'ec2TransitGatewayPeeringAttachment', { get: function () { return require('./ec2-transit-gateway-peering-attachment'); } });
Object.defineProperty(exports, 'ec2TransitGatewayPeeringAttachmentAccepter', { get: function () { return require('./ec2-transit-gateway-peering-attachment-accepter'); } });
Object.defineProperty(exports, 'ec2TransitGatewayPrefixListReference', { get: function () { return require('./ec2-transit-gateway-prefix-list-reference'); } });
Object.defineProperty(exports, 'ec2TransitGatewayRoute', { get: function () { return require('./ec2-transit-gateway-route'); } });
Object.defineProperty(exports, 'ec2TransitGatewayRouteTable', { get: function () { return require('./ec2-transit-gateway-route-table'); } });
Object.defineProperty(exports, 'ec2TransitGatewayRouteTableAssociation', { get: function () { return require('./ec2-transit-gateway-route-table-association'); } });
Object.defineProperty(exports, 'ec2TransitGatewayRouteTablePropagation', { get: function () { return require('./ec2-transit-gateway-route-table-propagation'); } });
Object.defineProperty(exports, 'ec2TransitGatewayVpcAttachment', { get: function () { return require('./ec2-transit-gateway-vpc-attachment'); } });
Object.defineProperty(exports, 'ec2TransitGatewayVpcAttachmentAccepter', { get: function () { return require('./ec2-transit-gateway-vpc-attachment-accepter'); } });
Object.defineProperty(exports, 'ec2EnclaveCertificateIamRoleAssociation', { get: function () { return require('./ec2-enclave-certificate-iam-role-association'); } });
Object.defineProperty(exports, 'ecrLifecyclePolicy', { get: function () { return require('./ecr-lifecycle-policy'); } });
Object.defineProperty(exports, 'ecrPullThroughCacheRule', { get: function () { return require('./ecr-pull-through-cache-rule'); } });
Object.defineProperty(exports, 'ecrRegistryPolicy', { get: function () { return require('./ecr-registry-policy'); } });
Object.defineProperty(exports, 'ecrRegistryScanningConfiguration', { get: function () { return require('./ecr-registry-scanning-configuration'); } });
Object.defineProperty(exports, 'ecrReplicationConfiguration', { get: function () { return require('./ecr-replication-configuration'); } });
Object.defineProperty(exports, 'ecrRepository', { get: function () { return require('./ecr-repository'); } });
Object.defineProperty(exports, 'ecrRepositoryPolicy', { get: function () { return require('./ecr-repository-policy'); } });
Object.defineProperty(exports, 'ecrpublicRepository', { get: function () { return require('./ecrpublic-repository'); } });
Object.defineProperty(exports, 'ecrpublicRepositoryPolicy', { get: function () { return require('./ecrpublic-repository-policy'); } });
Object.defineProperty(exports, 'ecsAccountSettingDefault', { get: function () { return require('./ecs-account-setting-default'); } });
Object.defineProperty(exports, 'ecsCapacityProvider', { get: function () { return require('./ecs-capacity-provider'); } });
Object.defineProperty(exports, 'ecsCluster', { get: function () { return require('./ecs-cluster'); } });
Object.defineProperty(exports, 'ecsClusterCapacityProviders', { get: function () { return require('./ecs-cluster-capacity-providers'); } });
Object.defineProperty(exports, 'ecsService', { get: function () { return require('./ecs-service'); } });
Object.defineProperty(exports, 'ecsTag', { get: function () { return require('./ecs-tag'); } });
Object.defineProperty(exports, 'ecsTaskDefinition', { get: function () { return require('./ecs-task-definition'); } });
Object.defineProperty(exports, 'ecsTaskSet', { get: function () { return require('./ecs-task-set'); } });
Object.defineProperty(exports, 'efsAccessPoint', { get: function () { return require('./efs-access-point'); } });
Object.defineProperty(exports, 'efsBackupPolicy', { get: function () { return require('./efs-backup-policy'); } });
Object.defineProperty(exports, 'efsFileSystem', { get: function () { return require('./efs-file-system'); } });
Object.defineProperty(exports, 'efsFileSystemPolicy', { get: function () { return require('./efs-file-system-policy'); } });
Object.defineProperty(exports, 'efsMountTarget', { get: function () { return require('./efs-mount-target'); } });
Object.defineProperty(exports, 'egressOnlyInternetGateway', { get: function () { return require('./egress-only-internet-gateway'); } });
Object.defineProperty(exports, 'eip', { get: function () { return require('./eip'); } });
Object.defineProperty(exports, 'eipAssociation', { get: function () { return require('./eip-association'); } });
Object.defineProperty(exports, 'eksAddon', { get: function () { return require('./eks-addon'); } });
Object.defineProperty(exports, 'eksCluster', { get: function () { return require('./eks-cluster'); } });
Object.defineProperty(exports, 'eksFargateProfile', { get: function () { return require('./eks-fargate-profile'); } });
Object.defineProperty(exports, 'eksIdentityProviderConfig', { get: function () { return require('./eks-identity-provider-config'); } });
Object.defineProperty(exports, 'eksNodeGroup', { get: function () { return require('./eks-node-group'); } });
Object.defineProperty(exports, 'elasticBeanstalkApplication', { get: function () { return require('./elastic-beanstalk-application'); } });
Object.defineProperty(exports, 'elasticBeanstalkApplicationVersion', { get: function () { return require('./elastic-beanstalk-application-version'); } });
Object.defineProperty(exports, 'elasticBeanstalkConfigurationTemplate', { get: function () { return require('./elastic-beanstalk-configuration-template'); } });
Object.defineProperty(exports, 'elasticBeanstalkEnvironment', { get: function () { return require('./elastic-beanstalk-environment'); } });
Object.defineProperty(exports, 'elasticacheCluster', { get: function () { return require('./elasticache-cluster'); } });
Object.defineProperty(exports, 'elasticacheGlobalReplicationGroup', { get: function () { return require('./elasticache-global-replication-group'); } });
Object.defineProperty(exports, 'elasticacheParameterGroup', { get: function () { return require('./elasticache-parameter-group'); } });
Object.defineProperty(exports, 'elasticacheReplicationGroup', { get: function () { return require('./elasticache-replication-group'); } });
Object.defineProperty(exports, 'elasticacheSecurityGroup', { get: function () { return require('./elasticache-security-group'); } });
Object.defineProperty(exports, 'elasticacheSubnetGroup', { get: function () { return require('./elasticache-subnet-group'); } });
Object.defineProperty(exports, 'elasticacheUser', { get: function () { return require('./elasticache-user'); } });
Object.defineProperty(exports, 'elasticacheUserGroup', { get: function () { return require('./elasticache-user-group'); } });
Object.defineProperty(exports, 'elasticsearchDomain', { get: function () { return require('./elasticsearch-domain'); } });
Object.defineProperty(exports, 'elasticsearchDomainPolicy', { get: function () { return require('./elasticsearch-domain-policy'); } });
Object.defineProperty(exports, 'elasticsearchDomainSamlOptions', { get: function () { return require('./elasticsearch-domain-saml-options'); } });
Object.defineProperty(exports, 'elastictranscoderPipeline', { get: function () { return require('./elastictranscoder-pipeline'); } });
Object.defineProperty(exports, 'elastictranscoderPreset', { get: function () { return require('./elastictranscoder-preset'); } });
Object.defineProperty(exports, 'elb', { get: function () { return require('./elb'); } });
Object.defineProperty(exports, 'elbAttachment', { get: function () { return require('./elb-attachment'); } });
Object.defineProperty(exports, 'emrCluster', { get: function () { return require('./emr-cluster'); } });
Object.defineProperty(exports, 'emrInstanceFleet', { get: function () { return require('./emr-instance-fleet'); } });
Object.defineProperty(exports, 'emrInstanceGroup', { get: function () { return require('./emr-instance-group'); } });
Object.defineProperty(exports, 'emrManagedScalingPolicy', { get: function () { return require('./emr-managed-scaling-policy'); } });
Object.defineProperty(exports, 'emrSecurityConfiguration', { get: function () { return require('./emr-security-configuration'); } });
Object.defineProperty(exports, 'emrStudio', { get: function () { return require('./emr-studio'); } });
Object.defineProperty(exports, 'emrStudioSessionMapping', { get: function () { return require('./emr-studio-session-mapping'); } });
Object.defineProperty(exports, 'flowLog', { get: function () { return require('./flow-log'); } });
Object.defineProperty(exports, 'fmsAdminAccount', { get: function () { return require('./fms-admin-account'); } });
Object.defineProperty(exports, 'fmsPolicy', { get: function () { return require('./fms-policy'); } });
Object.defineProperty(exports, 'fsxBackup', { get: function () { return require('./fsx-backup'); } });
Object.defineProperty(exports, 'fsxDataRepositoryAssociation', { get: function () { return require('./fsx-data-repository-association'); } });
Object.defineProperty(exports, 'fsxLustreFileSystem', { get: function () { return require('./fsx-lustre-file-system'); } });
Object.defineProperty(exports, 'fsxOntapFileSystem', { get: function () { return require('./fsx-ontap-file-system'); } });
Object.defineProperty(exports, 'fsxOntapStorageVirtualMachine', { get: function () { return require('./fsx-ontap-storage-virtual-machine'); } });
Object.defineProperty(exports, 'fsxOntapVolume', { get: function () { return require('./fsx-ontap-volume'); } });
Object.defineProperty(exports, 'fsxOpenzfsFileSystem', { get: function () { return require('./fsx-openzfs-file-system'); } });
Object.defineProperty(exports, 'fsxOpenzfsSnapshot', { get: function () { return require('./fsx-openzfs-snapshot'); } });
Object.defineProperty(exports, 'fsxOpenzfsVolume', { get: function () { return require('./fsx-openzfs-volume'); } });
Object.defineProperty(exports, 'fsxWindowsFileSystem', { get: function () { return require('./fsx-windows-file-system'); } });
Object.defineProperty(exports, 'gameliftAlias', { get: function () { return require('./gamelift-alias'); } });
Object.defineProperty(exports, 'gameliftBuild', { get: function () { return require('./gamelift-build'); } });
Object.defineProperty(exports, 'gameliftFleet', { get: function () { return require('./gamelift-fleet'); } });
Object.defineProperty(exports, 'gameliftGameSessionQueue', { get: function () { return require('./gamelift-game-session-queue'); } });
Object.defineProperty(exports, 'glacierVault', { get: function () { return require('./glacier-vault'); } });
Object.defineProperty(exports, 'glacierVaultLock', { get: function () { return require('./glacier-vault-lock'); } });
Object.defineProperty(exports, 'globalacceleratorAccelerator', { get: function () { return require('./globalaccelerator-accelerator'); } });
Object.defineProperty(exports, 'globalacceleratorEndpointGroup', { get: function () { return require('./globalaccelerator-endpoint-group'); } });
Object.defineProperty(exports, 'globalacceleratorListener', { get: function () { return require('./globalaccelerator-listener'); } });
Object.defineProperty(exports, 'glueCatalogDatabase', { get: function () { return require('./glue-catalog-database'); } });
Object.defineProperty(exports, 'glueCatalogTable', { get: function () { return require('./glue-catalog-table'); } });
Object.defineProperty(exports, 'glueClassifier', { get: function () { return require('./glue-classifier'); } });
Object.defineProperty(exports, 'glueConnection', { get: function () { return require('./glue-connection'); } });
Object.defineProperty(exports, 'glueCrawler', { get: function () { return require('./glue-crawler'); } });
Object.defineProperty(exports, 'glueDataCatalogEncryptionSettings', { get: function () { return require('./glue-data-catalog-encryption-settings'); } });
Object.defineProperty(exports, 'glueDevEndpoint', { get: function () { return require('./glue-dev-endpoint'); } });
Object.defineProperty(exports, 'glueJob', { get: function () { return require('./glue-job'); } });
Object.defineProperty(exports, 'glueMlTransform', { get: function () { return require('./glue-ml-transform'); } });
Object.defineProperty(exports, 'gluePartition', { get: function () { return require('./glue-partition'); } });
Object.defineProperty(exports, 'gluePartitionIndex', { get: function () { return require('./glue-partition-index'); } });
Object.defineProperty(exports, 'glueRegistry', { get: function () { return require('./glue-registry'); } });
Object.defineProperty(exports, 'glueResourcePolicy', { get: function () { return require('./glue-resource-policy'); } });
Object.defineProperty(exports, 'glueSchema', { get: function () { return require('./glue-schema'); } });
Object.defineProperty(exports, 'glueSecurityConfiguration', { get: function () { return require('./glue-security-configuration'); } });
Object.defineProperty(exports, 'glueTrigger', { get: function () { return require('./glue-trigger'); } });
Object.defineProperty(exports, 'glueUserDefinedFunction', { get: function () { return require('./glue-user-defined-function'); } });
Object.defineProperty(exports, 'glueWorkflow', { get: function () { return require('./glue-workflow'); } });
Object.defineProperty(exports, 'guarddutyDetector', { get: function () { return require('./guardduty-detector'); } });
Object.defineProperty(exports, 'guarddutyFilter', { get: function () { return require('./guardduty-filter'); } });
Object.defineProperty(exports, 'guarddutyInviteAccepter', { get: function () { return require('./guardduty-invite-accepter'); } });
Object.defineProperty(exports, 'guarddutyIpset', { get: function () { return require('./guardduty-ipset'); } });
Object.defineProperty(exports, 'guarddutyMember', { get: function () { return require('./guardduty-member'); } });
Object.defineProperty(exports, 'guarddutyOrganizationAdminAccount', { get: function () { return require('./guardduty-organization-admin-account'); } });
Object.defineProperty(exports, 'guarddutyOrganizationConfiguration', { get: function () { return require('./guardduty-organization-configuration'); } });
Object.defineProperty(exports, 'guarddutyPublishingDestination', { get: function () { return require('./guardduty-publishing-destination'); } });
Object.defineProperty(exports, 'guarddutyThreatintelset', { get: function () { return require('./guardduty-threatintelset'); } });
Object.defineProperty(exports, 'iamAccessKey', { get: function () { return require('./iam-access-key'); } });
Object.defineProperty(exports, 'iamAccountAlias', { get: function () { return require('./iam-account-alias'); } });
Object.defineProperty(exports, 'iamAccountPasswordPolicy', { get: function () { return require('./iam-account-password-policy'); } });
Object.defineProperty(exports, 'iamGroup', { get: function () { return require('./iam-group'); } });
Object.defineProperty(exports, 'iamGroupMembership', { get: function () { return require('./iam-group-membership'); } });
Object.defineProperty(exports, 'iamGroupPolicy', { get: function () { return require('./iam-group-policy'); } });
Object.defineProperty(exports, 'iamGroupPolicyAttachment', { get: function () { return require('./iam-group-policy-attachment'); } });
Object.defineProperty(exports, 'iamInstanceProfile', { get: function () { return require('./iam-instance-profile'); } });
Object.defineProperty(exports, 'iamOpenidConnectProvider', { get: function () { return require('./iam-openid-connect-provider'); } });
Object.defineProperty(exports, 'iamPolicy', { get: function () { return require('./iam-policy'); } });
Object.defineProperty(exports, 'iamPolicyAttachment', { get: function () { return require('./iam-policy-attachment'); } });
Object.defineProperty(exports, 'iamRole', { get: function () { return require('./iam-role'); } });
Object.defineProperty(exports, 'iamRolePolicy', { get: function () { return require('./iam-role-policy'); } });
Object.defineProperty(exports, 'iamRolePolicyAttachment', { get: function () { return require('./iam-role-policy-attachment'); } });
Object.defineProperty(exports, 'iamSamlProvider', { get: function () { return require('./iam-saml-provider'); } });
Object.defineProperty(exports, 'iamServerCertificate', { get: function () { return require('./iam-server-certificate'); } });
Object.defineProperty(exports, 'iamServiceLinkedRole', { get: function () { return require('./iam-service-linked-role'); } });
Object.defineProperty(exports, 'iamUser', { get: function () { return require('./iam-user'); } });
Object.defineProperty(exports, 'iamUserGroupMembership', { get: function () { return require('./iam-user-group-membership'); } });
Object.defineProperty(exports, 'iamUserLoginProfile', { get: function () { return require('./iam-user-login-profile'); } });
Object.defineProperty(exports, 'iamUserPolicy', { get: function () { return require('./iam-user-policy'); } });
Object.defineProperty(exports, 'iamUserPolicyAttachment', { get: function () { return require('./iam-user-policy-attachment'); } });
Object.defineProperty(exports, 'iamUserSshKey', { get: function () { return require('./iam-user-ssh-key'); } });
Object.defineProperty(exports, 'imagebuilderComponent', { get: function () { return require('./imagebuilder-component'); } });
Object.defineProperty(exports, 'imagebuilderDistributionConfiguration', { get: function () { return require('./imagebuilder-distribution-configuration'); } });
Object.defineProperty(exports, 'imagebuilderImage', { get: function () { return require('./imagebuilder-image'); } });
Object.defineProperty(exports, 'imagebuilderImagePipeline', { get: function () { return require('./imagebuilder-image-pipeline'); } });
Object.defineProperty(exports, 'imagebuilderImageRecipe', { get: function () { return require('./imagebuilder-image-recipe'); } });
Object.defineProperty(exports, 'imagebuilderInfrastructureConfiguration', { get: function () { return require('./imagebuilder-infrastructure-configuration'); } });
Object.defineProperty(exports, 'inspectorAssessmentTarget', { get: function () { return require('./inspector-assessment-target'); } });
Object.defineProperty(exports, 'inspectorAssessmentTemplate', { get: function () { return require('./inspector-assessment-template'); } });
Object.defineProperty(exports, 'inspectorResourceGroup', { get: function () { return require('./inspector-resource-group'); } });
Object.defineProperty(exports, 'instance', { get: function () { return require('./instance'); } });
Object.defineProperty(exports, 'internetGateway', { get: function () { return require('./internet-gateway'); } });
Object.defineProperty(exports, 'iotAuthorizer', { get: function () { return require('./iot-authorizer'); } });
Object.defineProperty(exports, 'iotCertificate', { get: function () { return require('./iot-certificate'); } });
Object.defineProperty(exports, 'iotPolicy', { get: function () { return require('./iot-policy'); } });
Object.defineProperty(exports, 'iotPolicyAttachment', { get: function () { return require('./iot-policy-attachment'); } });
Object.defineProperty(exports, 'iotRoleAlias', { get: function () { return require('./iot-role-alias'); } });
Object.defineProperty(exports, 'iotThing', { get: function () { return require('./iot-thing'); } });
Object.defineProperty(exports, 'iotThingGroup', { get: function () { return require('./iot-thing-group'); } });
Object.defineProperty(exports, 'iotThingGroupMembership', { get: function () { return require('./iot-thing-group-membership'); } });
Object.defineProperty(exports, 'iotThingPrincipalAttachment', { get: function () { return require('./iot-thing-principal-attachment'); } });
Object.defineProperty(exports, 'iotThingType', { get: function () { return require('./iot-thing-type'); } });
Object.defineProperty(exports, 'iotTopicRule', { get: function () { return require('./iot-topic-rule'); } });
Object.defineProperty(exports, 'keyPair', { get: function () { return require('./key-pair'); } });
Object.defineProperty(exports, 'kinesisAnalyticsApplication', { get: function () { return require('./kinesis-analytics-application'); } });
Object.defineProperty(exports, 'kinesisFirehoseDeliveryStream', { get: function () { return require('./kinesis-firehose-delivery-stream'); } });
Object.defineProperty(exports, 'kinesisStream', { get: function () { return require('./kinesis-stream'); } });
Object.defineProperty(exports, 'kinesisStreamConsumer', { get: function () { return require('./kinesis-stream-consumer'); } });
Object.defineProperty(exports, 'kinesisVideoStream', { get: function () { return require('./kinesis-video-stream'); } });
Object.defineProperty(exports, 'kinesisanalyticsv2Application', { get: function () { return require('./kinesisanalyticsv2-application'); } });
Object.defineProperty(exports, 'kinesisanalyticsv2ApplicationSnapshot', { get: function () { return require('./kinesisanalyticsv2-application-snapshot'); } });
Object.defineProperty(exports, 'kmsAlias', { get: function () { return require('./kms-alias'); } });
Object.defineProperty(exports, 'kmsCiphertext', { get: function () { return require('./kms-ciphertext'); } });
Object.defineProperty(exports, 'kmsExternalKey', { get: function () { return require('./kms-external-key'); } });
Object.defineProperty(exports, 'kmsGrant', { get: function () { return require('./kms-grant'); } });
Object.defineProperty(exports, 'kmsKey', { get: function () { return require('./kms-key'); } });
Object.defineProperty(exports, 'kmsReplicaExternalKey', { get: function () { return require('./kms-replica-external-key'); } });
Object.defineProperty(exports, 'kmsReplicaKey', { get: function () { return require('./kms-replica-key'); } });
Object.defineProperty(exports, 'lakeformationDataLakeSettings', { get: function () { return require('./lakeformation-data-lake-settings'); } });
Object.defineProperty(exports, 'lakeformationPermissions', { get: function () { return require('./lakeformation-permissions'); } });
Object.defineProperty(exports, 'lakeformationResource', { get: function () { return require('./lakeformation-resource'); } });
Object.defineProperty(exports, 'lambdaAlias', { get: function () { return require('./lambda-alias'); } });
Object.defineProperty(exports, 'lambdaCodeSigningConfig', { get: function () { return require('./lambda-code-signing-config'); } });
Object.defineProperty(exports, 'lambdaEventSourceMapping', { get: function () { return require('./lambda-event-source-mapping'); } });
Object.defineProperty(exports, 'lambdaFunction', { get: function () { return require('./lambda-function'); } });
Object.defineProperty(exports, 'lambdaFunctionEventInvokeConfig', { get: function () { return require('./lambda-function-event-invoke-config'); } });
Object.defineProperty(exports, 'lambdaInvocation', { get: function () { return require('./lambda-invocation'); } });
Object.defineProperty(exports, 'lambdaLayerVersion', { get: function () { return require('./lambda-layer-version'); } });
Object.defineProperty(exports, 'lambdaLayerVersionPermission', { get: function () { return require('./lambda-layer-version-permission'); } });
Object.defineProperty(exports, 'lambdaPermission', { get: function () { return require('./lambda-permission'); } });
Object.defineProperty(exports, 'lambdaProvisionedConcurrencyConfig', { get: function () { return require('./lambda-provisioned-concurrency-config'); } });
Object.defineProperty(exports, 'launchConfiguration', { get: function () { return require('./launch-configuration'); } });
Object.defineProperty(exports, 'launchTemplate', { get: function () { return require('./launch-template'); } });
Object.defineProperty(exports, 'lb', { get: function () { return require('./lb'); } });
Object.defineProperty(exports, 'lbCookieStickinessPolicy', { get: function () { return require('./lb-cookie-stickiness-policy'); } });
Object.defineProperty(exports, 'lbListener', { get: function () { return require('./lb-listener'); } });
Object.defineProperty(exports, 'lbListenerCertificate', { get: function () { return require('./lb-listener-certificate'); } });
Object.defineProperty(exports, 'lbListenerRule', { get: function () { return require('./lb-listener-rule'); } });
Object.defineProperty(exports, 'lbSslNegotiationPolicy', { get: function () { return require('./lb-ssl-negotiation-policy'); } });
Object.defineProperty(exports, 'lbTargetGroup', { get: function () { return require('./lb-target-group'); } });
Object.defineProperty(exports, 'lbTargetGroupAttachment', { get: function () { return require('./lb-target-group-attachment'); } });
Object.defineProperty(exports, 'lexBot', { get: function () { return require('./lex-bot'); } });
Object.defineProperty(exports, 'lexBotAlias', { get: function () { return require('./lex-bot-alias'); } });
Object.defineProperty(exports, 'lexIntent', { get: function () { return require('./lex-intent'); } });
Object.defineProperty(exports, 'lexSlotType', { get: function () { return require('./lex-slot-type'); } });
Object.defineProperty(exports, 'licensemanagerAssociation', { get: function () { return require('./licensemanager-association'); } });
Object.defineProperty(exports, 'licensemanagerLicenseConfiguration', { get: function () { return require('./licensemanager-license-configuration'); } });
Object.defineProperty(exports, 'lightsailDomain', { get: function () { return require('./lightsail-domain'); } });
Object.defineProperty(exports, 'lightsailInstance', { get: function () { return require('./lightsail-instance'); } });
Object.defineProperty(exports, 'lightsailInstancePublicPorts', { get: function () { return require('./lightsail-instance-public-ports'); } });
Object.defineProperty(exports, 'lightsailKeyPair', { get: function () { return require('./lightsail-key-pair'); } });
Object.defineProperty(exports, 'lightsailStaticIp', { get: function () { return require('./lightsail-static-ip'); } });
Object.defineProperty(exports, 'lightsailStaticIpAttachment', { get: function () { return require('./lightsail-static-ip-attachment'); } });
Object.defineProperty(exports, 'loadBalancerBackendServerPolicy', { get: function () { return require('./load-balancer-backend-server-policy'); } });
Object.defineProperty(exports, 'loadBalancerListenerPolicy', { get: function () { return require('./load-balancer-listener-policy'); } });
Object.defineProperty(exports, 'loadBalancerPolicy', { get: function () { return require('./load-balancer-policy'); } });
Object.defineProperty(exports, 'macie2Account', { get: function () { return require('./macie2-account'); } });
Object.defineProperty(exports, 'macie2ClassificationJob', { get: function () { return require('./macie2-classification-job'); } });
Object.defineProperty(exports, 'macie2CustomDataIdentifier', { get: function () { return require('./macie2-custom-data-identifier'); } });
Object.defineProperty(exports, 'macie2FindingsFilter', { get: function () { return require('./macie2-findings-filter'); } });
Object.defineProperty(exports, 'macie2InvitationAccepter', { get: function () { return require('./macie2-invitation-accepter'); } });
Object.defineProperty(exports, 'macie2Member', { get: function () { return require('./macie2-member'); } });
Object.defineProperty(exports, 'macie2OrganizationAdminAccount', { get: function () { return require('./macie2-organization-admin-account'); } });
Object.defineProperty(exports, 'macieMemberAccountAssociation', { get: function () { return require('./macie-member-account-association'); } });
Object.defineProperty(exports, 'macieS3BucketAssociation', { get: function () { return require('./macie-s3-bucket-association'); } });
Object.defineProperty(exports, 'mainRouteTableAssociation', { get: function () { return require('./main-route-table-association'); } });
Object.defineProperty(exports, 'mediaConvertQueue', { get: function () { return require('./media-convert-queue'); } });
Object.defineProperty(exports, 'mediaPackageChannel', { get: function () { return require('./media-package-channel'); } });
Object.defineProperty(exports, 'mediaStoreContainer', { get: function () { return require('./media-store-container'); } });
Object.defineProperty(exports, 'mediaStoreContainerPolicy', { get: function () { return require('./media-store-container-policy'); } });
Object.defineProperty(exports, 'memorydbAcl', { get: function () { return require('./memorydb-acl'); } });
Object.defineProperty(exports, 'memorydbCluster', { get: function () { return require('./memorydb-cluster'); } });
Object.defineProperty(exports, 'memorydbParameterGroup', { get: function () { return require('./memorydb-parameter-group'); } });
Object.defineProperty(exports, 'memorydbSnapshot', { get: function () { return require('./memorydb-snapshot'); } });
Object.defineProperty(exports, 'memorydbSubnetGroup', { get: function () { return require('./memorydb-subnet-group'); } });
Object.defineProperty(exports, 'memorydbUser', { get: function () { return require('./memorydb-user'); } });
Object.defineProperty(exports, 'mqBroker', { get: function () { return require('./mq-broker'); } });
Object.defineProperty(exports, 'mqConfiguration', { get: function () { return require('./mq-configuration'); } });
Object.defineProperty(exports, 'mskCluster', { get: function () { return require('./msk-cluster'); } });
Object.defineProperty(exports, 'mskConfiguration', { get: function () { return require('./msk-configuration'); } });
Object.defineProperty(exports, 'mskScramSecretAssociation', { get: function () { return require('./msk-scram-secret-association'); } });
Object.defineProperty(exports, 'mskconnectCustomPlugin', { get: function () { return require('./mskconnect-custom-plugin'); } });
Object.defineProperty(exports, 'mskconnectWorkerConfiguration', { get: function () { return require('./mskconnect-worker-configuration'); } });
Object.defineProperty(exports, 'mwaaEnvironment', { get: function () { return require('./mwaa-environment'); } });
Object.defineProperty(exports, 'natGateway', { get: function () { return require('./nat-gateway'); } });
Object.defineProperty(exports, 'neptuneCluster', { get: function () { return require('./neptune-cluster'); } });
Object.defineProperty(exports, 'neptuneClusterEndpoint', { get: function () { return require('./neptune-cluster-endpoint'); } });
Object.defineProperty(exports, 'neptuneClusterInstance', { get: function () { return require('./neptune-cluster-instance'); } });
Object.defineProperty(exports, 'neptuneClusterParameterGroup', { get: function () { return require('./neptune-cluster-parameter-group'); } });
Object.defineProperty(exports, 'neptuneClusterSnapshot', { get: function () { return require('./neptune-cluster-snapshot'); } });
Object.defineProperty(exports, 'neptuneEventSubscription', { get: function () { return require('./neptune-event-subscription'); } });
Object.defineProperty(exports, 'neptuneParameterGroup', { get: function () { return require('./neptune-parameter-group'); } });
Object.defineProperty(exports, 'neptuneSubnetGroup', { get: function () { return require('./neptune-subnet-group'); } });
Object.defineProperty(exports, 'networkAcl', { get: function () { return require('./network-acl'); } });
Object.defineProperty(exports, 'networkAclRule', { get: function () { return require('./network-acl-rule'); } });
Object.defineProperty(exports, 'networkInterface', { get: function () { return require('./network-interface'); } });
Object.defineProperty(exports, 'networkInterfaceAttachment', { get: function () { return require('./network-interface-attachment'); } });
Object.defineProperty(exports, 'networkInterfaceSgAttachment', { get: function () { return require('./network-interface-sg-attachment'); } });
Object.defineProperty(exports, 'networkfirewallFirewall', { get: function () { return require('./networkfirewall-firewall'); } });
Object.defineProperty(exports, 'networkfirewallFirewallPolicy', { get: function () { return require('./networkfirewall-firewall-policy'); } });
Object.defineProperty(exports, 'networkfirewallLoggingConfiguration', { get: function () { return require('./networkfirewall-logging-configuration'); } });
Object.defineProperty(exports, 'networkfirewallResourcePolicy', { get: function () { return require('./networkfirewall-resource-policy'); } });
Object.defineProperty(exports, 'networkfirewallRuleGroup', { get: function () { return require('./networkfirewall-rule-group'); } });
Object.defineProperty(exports, 'opsworksApplication', { get: function () { return require('./opsworks-application'); } });
Object.defineProperty(exports, 'opsworksCustomLayer', { get: function () { return require('./opsworks-custom-layer'); } });
Object.defineProperty(exports, 'opsworksGangliaLayer', { get: function () { return require('./opsworks-ganglia-layer'); } });
Object.defineProperty(exports, 'opsworksHaproxyLayer', { get: function () { return require('./opsworks-haproxy-layer'); } });
Object.defineProperty(exports, 'opsworksInstance', { get: function () { return require('./opsworks-instance'); } });
Object.defineProperty(exports, 'opsworksJavaAppLayer', { get: function () { return require('./opsworks-java-app-layer'); } });
Object.defineProperty(exports, 'opsworksMemcachedLayer', { get: function () { return require('./opsworks-memcached-layer'); } });
Object.defineProperty(exports, 'opsworksMysqlLayer', { get: function () { return require('./opsworks-mysql-layer'); } });
Object.defineProperty(exports, 'opsworksNodejsAppLayer', { get: function () { return require('./opsworks-nodejs-app-layer'); } });
Object.defineProperty(exports, 'opsworksPermission', { get: function () { return require('./opsworks-permission'); } });
Object.defineProperty(exports, 'opsworksPhpAppLayer', { get: function () { return require('./opsworks-php-app-layer'); } });
Object.defineProperty(exports, 'opsworksRailsAppLayer', { get: function () { return require('./opsworks-rails-app-layer'); } });
Object.defineProperty(exports, 'opsworksRdsDbInstance', { get: function () { return require('./opsworks-rds-db-instance'); } });
Object.defineProperty(exports, 'opsworksStack', { get: function () { return require('./opsworks-stack'); } });
Object.defineProperty(exports, 'opsworksStaticWebLayer', { get: function () { return require('./opsworks-static-web-layer'); } });
Object.defineProperty(exports, 'opsworksUserProfile', { get: function () { return require('./opsworks-user-profile'); } });
Object.defineProperty(exports, 'organizationsAccount', { get: function () { return require('./organizations-account'); } });
Object.defineProperty(exports, 'organizationsDelegatedAdministrator', { get: function () { return require('./organizations-delegated-administrator'); } });
Object.defineProperty(exports, 'organizationsOrganization', { get: function () { return require('./organizations-organization'); } });
Object.defineProperty(exports, 'organizationsOrganizationalUnit', { get: function () { return require('./organizations-organizational-unit'); } });
Object.defineProperty(exports, 'organizationsPolicy', { get: function () { return require('./organizations-policy'); } });
Object.defineProperty(exports, 'organizationsPolicyAttachment', { get: function () { return require('./organizations-policy-attachment'); } });
Object.defineProperty(exports, 'pinpointAdmChannel', { get: function () { return require('./pinpoint-adm-channel'); } });
Object.defineProperty(exports, 'pinpointApnsChannel', { get: function () { return require('./pinpoint-apns-channel'); } });
Object.defineProperty(exports, 'pinpointApnsSandboxChannel', { get: function () { return require('./pinpoint-apns-sandbox-channel'); } });
Object.defineProperty(exports, 'pinpointApnsVoipChannel', { get: function () { return require('./pinpoint-apns-voip-channel'); } });
Object.defineProperty(exports, 'pinpointApnsVoipSandboxChannel', { get: function () { return require('./pinpoint-apns-voip-sandbox-channel'); } });
Object.defineProperty(exports, 'pinpointApp', { get: function () { return require('./pinpoint-app'); } });
Object.defineProperty(exports, 'pinpointBaiduChannel', { get: function () { return require('./pinpoint-baidu-channel'); } });
Object.defineProperty(exports, 'pinpointEmailChannel', { get: function () { return require('./pinpoint-email-channel'); } });
Object.defineProperty(exports, 'pinpointEventStream', { get: function () { return require('./pinpoint-event-stream'); } });
Object.defineProperty(exports, 'pinpointGcmChannel', { get: function () { return require('./pinpoint-gcm-channel'); } });
Object.defineProperty(exports, 'pinpointSmsChannel', { get: function () { return require('./pinpoint-sms-channel'); } });
Object.defineProperty(exports, 'placementGroup', { get: function () { return require('./placement-group'); } });
Object.defineProperty(exports, 'prometheusAlertManagerDefinition', { get: function () { return require('./prometheus-alert-manager-definition'); } });
Object.defineProperty(exports, 'prometheusRuleGroupNamespace', { get: function () { return require('./prometheus-rule-group-namespace'); } });
Object.defineProperty(exports, 'prometheusWorkspace', { get: function () { return require('./prometheus-workspace'); } });
Object.defineProperty(exports, 'proxyProtocolPolicy', { get: function () { return require('./proxy-protocol-policy'); } });
Object.defineProperty(exports, 'qldbLedger', { get: function () { return require('./qldb-ledger'); } });
Object.defineProperty(exports, 'quicksightDataSource', { get: function () { return require('./quicksight-data-source'); } });
Object.defineProperty(exports, 'quicksightGroup', { get: function () { return require('./quicksight-group'); } });
Object.defineProperty(exports, 'quicksightGroupMembership', { get: function () { return require('./quicksight-group-membership'); } });
Object.defineProperty(exports, 'quicksightUser', { get: function () { return require('./quicksight-user'); } });
Object.defineProperty(exports, 'ramPrincipalAssociation', { get: function () { return require('./ram-principal-association'); } });
Object.defineProperty(exports, 'ramResourceAssociation', { get: function () { return require('./ram-resource-association'); } });
Object.defineProperty(exports, 'ramResourceShare', { get: function () { return require('./ram-resource-share'); } });
Object.defineProperty(exports, 'ramResourceShareAccepter', { get: function () { return require('./ram-resource-share-accepter'); } });
Object.defineProperty(exports, 'rdsCluster', { get: function () { return require('./rds-cluster'); } });
Object.defineProperty(exports, 'rdsClusterEndpoint', { get: function () { return require('./rds-cluster-endpoint'); } });
Object.defineProperty(exports, 'rdsClusterInstance', { get: function () { return require('./rds-cluster-instance'); } });
Object.defineProperty(exports, 'rdsClusterParameterGroup', { get: function () { return require('./rds-cluster-parameter-group'); } });
Object.defineProperty(exports, 'rdsClusterRoleAssociation', { get: function () { return require('./rds-cluster-role-association'); } });
Object.defineProperty(exports, 'rdsGlobalCluster', { get: function () { return require('./rds-global-cluster'); } });
Object.defineProperty(exports, 'redshiftCluster', { get: function () { return require('./redshift-cluster'); } });
Object.defineProperty(exports, 'redshiftEventSubscription', { get: function () { return require('./redshift-event-subscription'); } });
Object.defineProperty(exports, 'redshiftParameterGroup', { get: function () { return require('./redshift-parameter-group'); } });
Object.defineProperty(exports, 'redshiftScheduledAction', { get: function () { return require('./redshift-scheduled-action'); } });
Object.defineProperty(exports, 'redshiftSecurityGroup', { get: function () { return require('./redshift-security-group'); } });
Object.defineProperty(exports, 'redshiftSnapshotCopyGrant', { get: function () { return require('./redshift-snapshot-copy-grant'); } });
Object.defineProperty(exports, 'redshiftSnapshotSchedule', { get: function () { return require('./redshift-snapshot-schedule'); } });
Object.defineProperty(exports, 'redshiftSnapshotScheduleAssociation', { get: function () { return require('./redshift-snapshot-schedule-association'); } });
Object.defineProperty(exports, 'redshiftSubnetGroup', { get: function () { return require('./redshift-subnet-group'); } });
Object.defineProperty(exports, 'resourcegroupsGroup', { get: function () { return require('./resourcegroups-group'); } });
Object.defineProperty(exports, 'route', { get: function () { return require('./route'); } });
Object.defineProperty(exports, 'route53DelegationSet', { get: function () { return require('./route53-delegation-set'); } });
Object.defineProperty(exports, 'route53HealthCheck', { get: function () { return require('./route53-health-check'); } });
Object.defineProperty(exports, 'route53HostedZoneDnssec', { get: function () { return require('./route53-hosted-zone-dnssec'); } });
Object.defineProperty(exports, 'route53KeySigningKey', { get: function () { return require('./route53-key-signing-key'); } });
Object.defineProperty(exports, 'route53QueryLog', { get: function () { return require('./route53-query-log'); } });
Object.defineProperty(exports, 'route53Record', { get: function () { return require('./route53-record'); } });
Object.defineProperty(exports, 'route53ResolverDnssecConfig', { get: function () { return require('./route53-resolver-dnssec-config'); } });
Object.defineProperty(exports, 'route53ResolverEndpoint', { get: function () { return require('./route53-resolver-endpoint'); } });
Object.defineProperty(exports, 'route53ResolverFirewallConfig', { get: function () { return require('./route53-resolver-firewall-config'); } });
Object.defineProperty(exports, 'route53ResolverFirewallDomainList', { get: function () { return require('./route53-resolver-firewall-domain-list'); } });
Object.defineProperty(exports, 'route53ResolverFirewallRule', { get: function () { return require('./route53-resolver-firewall-rule'); } });
Object.defineProperty(exports, 'route53ResolverFirewallRuleGroup', { get: function () { return require('./route53-resolver-firewall-rule-group'); } });
Object.defineProperty(exports, 'route53ResolverFirewallRuleGroupAssociation', { get: function () { return require('./route53-resolver-firewall-rule-group-association'); } });
Object.defineProperty(exports, 'route53ResolverQueryLogConfig', { get: function () { return require('./route53-resolver-query-log-config'); } });
Object.defineProperty(exports, 'route53ResolverQueryLogConfigAssociation', { get: function () { return require('./route53-resolver-query-log-config-association'); } });
Object.defineProperty(exports, 'route53ResolverRule', { get: function () { return require('./route53-resolver-rule'); } });
Object.defineProperty(exports, 'route53ResolverRuleAssociation', { get: function () { return require('./route53-resolver-rule-association'); } });
Object.defineProperty(exports, 'route53VpcAssociationAuthorization', { get: function () { return require('./route53-vpc-association-authorization'); } });
Object.defineProperty(exports, 'route53Zone', { get: function () { return require('./route53-zone'); } });
Object.defineProperty(exports, 'route53ZoneAssociation', { get: function () { return require('./route53-zone-association'); } });
Object.defineProperty(exports, 'route53RecoverycontrolconfigCluster', { get: function () { return require('./route53recoverycontrolconfig-cluster'); } });
Object.defineProperty(exports, 'route53RecoverycontrolconfigControlPanel', { get: function () { return require('./route53recoverycontrolconfig-control-panel'); } });
Object.defineProperty(exports, 'route53RecoverycontrolconfigRoutingControl', { get: function () { return require('./route53recoverycontrolconfig-routing-control'); } });
Object.defineProperty(exports, 'route53RecoverycontrolconfigSafetyRule', { get: function () { return require('./route53recoverycontrolconfig-safety-rule'); } });
Object.defineProperty(exports, 'route53RecoveryreadinessCell', { get: function () { return require('./route53recoveryreadiness-cell'); } });
Object.defineProperty(exports, 'route53RecoveryreadinessReadinessCheck', { get: function () { return require('./route53recoveryreadiness-readiness-check'); } });
Object.defineProperty(exports, 'route53RecoveryreadinessRecoveryGroup', { get: function () { return require('./route53recoveryreadiness-recovery-group'); } });
Object.defineProperty(exports, 'route53RecoveryreadinessResourceSet', { get: function () { return require('./route53recoveryreadiness-resource-set'); } });
Object.defineProperty(exports, 'routeTable', { get: function () { return require('./route-table'); } });
Object.defineProperty(exports, 'routeTableAssociation', { get: function () { return require('./route-table-association'); } });
Object.defineProperty(exports, 's3AccessPoint', { get: function () { return require('./s3-access-point'); } });
Object.defineProperty(exports, 's3AccountPublicAccessBlock', { get: function () { return require('./s3-account-public-access-block'); } });
Object.defineProperty(exports, 's3Bucket', { get: function () { return require('./s3-bucket'); } });
Object.defineProperty(exports, 's3BucketAccelerateConfiguration', { get: function () { return require('./s3-bucket-accelerate-configuration'); } });
Object.defineProperty(exports, 's3BucketAcl', { get: function () { return require('./s3-bucket-acl'); } });
Object.defineProperty(exports, 's3BucketAnalyticsConfiguration', { get: function () { return require('./s3-bucket-analytics-configuration'); } });
Object.defineProperty(exports, 's3BucketCorsConfiguration', { get: function () { return require('./s3-bucket-cors-configuration'); } });
Object.defineProperty(exports, 's3BucketIntelligentTieringConfiguration', { get: function () { return require('./s3-bucket-intelligent-tiering-configuration'); } });
Object.defineProperty(exports, 's3BucketInventory', { get: function () { return require('./s3-bucket-inventory'); } });
Object.defineProperty(exports, 's3BucketLifecycleConfiguration', { get: function () { return require('./s3-bucket-lifecycle-configuration'); } });
Object.defineProperty(exports, 's3BucketLogging', { get: function () { return require('./s3-bucket-logging'); } });
Object.defineProperty(exports, 's3BucketMetric', { get: function () { return require('./s3-bucket-metric'); } });
Object.defineProperty(exports, 's3BucketNotification', { get: function () { return require('./s3-bucket-notification'); } });
Object.defineProperty(exports, 's3BucketObject', { get: function () { return require('./s3-bucket-object'); } });
Object.defineProperty(exports, 's3BucketObjectLockConfiguration', { get: function () { return require('./s3-bucket-object-lock-configuration'); } });
Object.defineProperty(exports, 's3BucketOwnershipControls', { get: function () { return require('./s3-bucket-ownership-controls'); } });
Object.defineProperty(exports, 's3BucketPolicy', { get: function () { return require('./s3-bucket-policy'); } });
Object.defineProperty(exports, 's3BucketPublicAccessBlock', { get: function () { return require('./s3-bucket-public-access-block'); } });
Object.defineProperty(exports, 's3BucketReplicationConfiguration', { get: function () { return require('./s3-bucket-replication-configuration'); } });
Object.defineProperty(exports, 's3BucketRequestPaymentConfiguration', { get: function () { return require('./s3-bucket-request-payment-configuration'); } });
Object.defineProperty(exports, 's3BucketServerSideEncryptionConfiguration', { get: function () { return require('./s3-bucket-server-side-encryption-configuration'); } });
Object.defineProperty(exports, 's3BucketVersioning', { get: function () { return require('./s3-bucket-versioning'); } });
Object.defineProperty(exports, 's3BucketWebsiteConfiguration', { get: function () { return require('./s3-bucket-website-configuration'); } });
Object.defineProperty(exports, 's3ObjectCopy', { get: function () { return require('./s3-object-copy'); } });
Object.defineProperty(exports, 's3ControlAccessPointPolicy', { get: function () { return require('./s3control-access-point-policy'); } });
Object.defineProperty(exports, 's3ControlBucket', { get: function () { return require('./s3control-bucket'); } });
Object.defineProperty(exports, 's3ControlBucketLifecycleConfiguration', { get: function () { return require('./s3control-bucket-lifecycle-configuration'); } });
Object.defineProperty(exports, 's3ControlBucketPolicy', { get: function () { return require('./s3control-bucket-policy'); } });
Object.defineProperty(exports, 's3ControlMultiRegionAccessPoint', { get: function () { return require('./s3control-multi-region-access-point'); } });
Object.defineProperty(exports, 's3ControlMultiRegionAccessPointPolicy', { get: function () { return require('./s3control-multi-region-access-point-policy'); } });
Object.defineProperty(exports, 's3ControlObjectLambdaAccessPoint', { get: function () { return require('./s3control-object-lambda-access-point'); } });
Object.defineProperty(exports, 's3ControlObjectLambdaAccessPointPolicy', { get: function () { return require('./s3control-object-lambda-access-point-policy'); } });
Object.defineProperty(exports, 's3OutpostsEndpoint', { get: function () { return require('./s3outposts-endpoint'); } });
Object.defineProperty(exports, 'sagemakerApp', { get: function () { return require('./sagemaker-app'); } });
Object.defineProperty(exports, 'sagemakerAppImageConfig', { get: function () { return require('./sagemaker-app-image-config'); } });
Object.defineProperty(exports, 'sagemakerCodeRepository', { get: function () { return require('./sagemaker-code-repository'); } });
Object.defineProperty(exports, 'sagemakerDevice', { get: function () { return require('./sagemaker-device'); } });
Object.defineProperty(exports, 'sagemakerDeviceFleet', { get: function () { return require('./sagemaker-device-fleet'); } });
Object.defineProperty(exports, 'sagemakerDomain', { get: function () { return require('./sagemaker-domain'); } });
Object.defineProperty(exports, 'sagemakerEndpoint', { get: function () { return require('./sagemaker-endpoint'); } });
Object.defineProperty(exports, 'sagemakerEndpointConfiguration', { get: function () { return require('./sagemaker-endpoint-configuration'); } });
Object.defineProperty(exports, 'sagemakerFeatureGroup', { get: function () { return require('./sagemaker-feature-group'); } });
Object.defineProperty(exports, 'sagemakerFlowDefinition', { get: function () { return require('./sagemaker-flow-definition'); } });
Object.defineProperty(exports, 'sagemakerHumanTaskUi', { get: function () { return require('./sagemaker-human-task-ui'); } });
Object.defineProperty(exports, 'sagemakerImage', { get: function () { return require('./sagemaker-image'); } });
Object.defineProperty(exports, 'sagemakerImageVersion', { get: function () { return require('./sagemaker-image-version'); } });
Object.defineProperty(exports, 'sagemakerModel', { get: function () { return require('./sagemaker-model'); } });
Object.defineProperty(exports, 'sagemakerModelPackageGroup', { get: function () { return require('./sagemaker-model-package-group'); } });
Object.defineProperty(exports, 'sagemakerModelPackageGroupPolicy', { get: function () { return require('./sagemaker-model-package-group-policy'); } });
Object.defineProperty(exports, 'sagemakerNotebookInstance', { get: function () { return require('./sagemaker-notebook-instance'); } });
Object.defineProperty(exports, 'sagemakerNotebookInstanceLifecycleConfiguration', { get: function () { return require('./sagemaker-notebook-instance-lifecycle-configuration'); } });
Object.defineProperty(exports, 'sagemakerProject', { get: function () { return require('./sagemaker-project'); } });
Object.defineProperty(exports, 'sagemakerStudioLifecycleConfig', { get: function () { return require('./sagemaker-studio-lifecycle-config'); } });
Object.defineProperty(exports, 'sagemakerUserProfile', { get: function () { return require('./sagemaker-user-profile'); } });
Object.defineProperty(exports, 'sagemakerWorkforce', { get: function () { return require('./sagemaker-workforce'); } });
Object.defineProperty(exports, 'sagemakerWorkteam', { get: function () { return require('./sagemaker-workteam'); } });
Object.defineProperty(exports, 'schemasDiscoverer', { get: function () { return require('./schemas-discoverer'); } });
Object.defineProperty(exports, 'schemasRegistry', { get: function () { return require('./schemas-registry'); } });
Object.defineProperty(exports, 'schemasSchema', { get: function () { return require('./schemas-schema'); } });
Object.defineProperty(exports, 'secretsmanagerSecret', { get: function () { return require('./secretsmanager-secret'); } });
Object.defineProperty(exports, 'secretsmanagerSecretPolicy', { get: function () { return require('./secretsmanager-secret-policy'); } });
Object.defineProperty(exports, 'secretsmanagerSecretRotation', { get: function () { return require('./secretsmanager-secret-rotation'); } });
Object.defineProperty(exports, 'secretsmanagerSecretVersion', { get: function () { return require('./secretsmanager-secret-version'); } });
Object.defineProperty(exports, 'securityGroup', { get: function () { return require('./security-group'); } });
Object.defineProperty(exports, 'securityGroupRule', { get: function () { return require('./security-group-rule'); } });
Object.defineProperty(exports, 'securityhubAccount', { get: function () { return require('./securityhub-account'); } });
Object.defineProperty(exports, 'securityhubActionTarget', { get: function () { return require('./securityhub-action-target'); } });
Object.defineProperty(exports, 'securityhubFindingAggregator', { get: function () { return require('./securityhub-finding-aggregator'); } });
Object.defineProperty(exports, 'securityhubInsight', { get: function () { return require('./securityhub-insight'); } });
Object.defineProperty(exports, 'securityhubInviteAccepter', { get: function () { return require('./securityhub-invite-accepter'); } });
Object.defineProperty(exports, 'securityhubMember', { get: function () { return require('./securityhub-member'); } });
Object.defineProperty(exports, 'securityhubOrganizationAdminAccount', { get: function () { return require('./securityhub-organization-admin-account'); } });
Object.defineProperty(exports, 'securityhubOrganizationConfiguration', { get: function () { return require('./securityhub-organization-configuration'); } });
Object.defineProperty(exports, 'securityhubProductSubscription', { get: function () { return require('./securityhub-product-subscription'); } });
Object.defineProperty(exports, 'securityhubStandardsControl', { get: function () { return require('./securityhub-standards-control'); } });
Object.defineProperty(exports, 'securityhubStandardsSubscription', { get: function () { return require('./securityhub-standards-subscription'); } });
Object.defineProperty(exports, 'serverlessapplicationrepositoryCloudformationStack', { get: function () { return require('./serverlessapplicationrepository-cloudformation-stack'); } });
Object.defineProperty(exports, 'serviceDiscoveryHttpNamespace', { get: function () { return require('./service-discovery-http-namespace'); } });
Object.defineProperty(exports, 'serviceDiscoveryInstance', { get: function () { return require('./service-discovery-instance'); } });
Object.defineProperty(exports, 'serviceDiscoveryPrivateDnsNamespace', { get: function () { return require('./service-discovery-private-dns-namespace'); } });
Object.defineProperty(exports, 'serviceDiscoveryPublicDnsNamespace', { get: function () { return require('./service-discovery-public-dns-namespace'); } });
Object.defineProperty(exports, 'serviceDiscoveryService', { get: function () { return require('./service-discovery-service'); } });
Object.defineProperty(exports, 'servicecatalogBudgetResourceAssociation', { get: function () { return require('./servicecatalog-budget-resource-association'); } });
Object.defineProperty(exports, 'servicecatalogConstraint', { get: function () { return require('./servicecatalog-constraint'); } });
Object.defineProperty(exports, 'servicecatalogOrganizationsAccess', { get: function () { return require('./servicecatalog-organizations-access'); } });
Object.defineProperty(exports, 'servicecatalogPortfolio', { get: function () { return require('./servicecatalog-portfolio'); } });
Object.defineProperty(exports, 'servicecatalogPortfolioShare', { get: function () { return require('./servicecatalog-portfolio-share'); } });
Object.defineProperty(exports, 'servicecatalogPrincipalPortfolioAssociation', { get: function () { return require('./servicecatalog-principal-portfolio-association'); } });
Object.defineProperty(exports, 'servicecatalogProduct', { get: function () { return require('./servicecatalog-product'); } });
Object.defineProperty(exports, 'servicecatalogProductPortfolioAssociation', { get: function () { return require('./servicecatalog-product-portfolio-association'); } });
Object.defineProperty(exports, 'servicecatalogProvisionedProduct', { get: function () { return require('./servicecatalog-provisioned-product'); } });
Object.defineProperty(exports, 'servicecatalogProvisioningArtifact', { get: function () { return require('./servicecatalog-provisioning-artifact'); } });
Object.defineProperty(exports, 'servicecatalogServiceAction', { get: function () { return require('./servicecatalog-service-action'); } });
Object.defineProperty(exports, 'servicecatalogTagOption', { get: function () { return require('./servicecatalog-tag-option'); } });
Object.defineProperty(exports, 'servicecatalogTagOptionResourceAssociation', { get: function () { return require('./servicecatalog-tag-option-resource-association'); } });
Object.defineProperty(exports, 'servicequotasServiceQuota', { get: function () { return require('./servicequotas-service-quota'); } });
Object.defineProperty(exports, 'sesActiveReceiptRuleSet', { get: function () { return require('./ses-active-receipt-rule-set'); } });
Object.defineProperty(exports, 'sesConfigurationSet', { get: function () { return require('./ses-configuration-set'); } });
Object.defineProperty(exports, 'sesDomainDkim', { get: function () { return require('./ses-domain-dkim'); } });
Object.defineProperty(exports, 'sesDomainIdentity', { get: function () { return require('./ses-domain-identity'); } });
Object.defineProperty(exports, 'sesDomainIdentityVerification', { get: function () { return require('./ses-domain-identity-verification'); } });
Object.defineProperty(exports, 'sesDomainMailFrom', { get: function () { return require('./ses-domain-mail-from'); } });
Object.defineProperty(exports, 'sesEmailIdentity', { get: function () { return require('./ses-email-identity'); } });
Object.defineProperty(exports, 'sesEventDestination', { get: function () { return require('./ses-event-destination'); } });
Object.defineProperty(exports, 'sesIdentityNotificationTopic', { get: function () { return require('./ses-identity-notification-topic'); } });
Object.defineProperty(exports, 'sesIdentityPolicy', { get: function () { return require('./ses-identity-policy'); } });
Object.defineProperty(exports, 'sesReceiptFilter', { get: function () { return require('./ses-receipt-filter'); } });
Object.defineProperty(exports, 'sesReceiptRule', { get: function () { return require('./ses-receipt-rule'); } });
Object.defineProperty(exports, 'sesReceiptRuleSet', { get: function () { return require('./ses-receipt-rule-set'); } });
Object.defineProperty(exports, 'sesTemplate', { get: function () { return require('./ses-template'); } });
Object.defineProperty(exports, 'sfnActivity', { get: function () { return require('./sfn-activity'); } });
Object.defineProperty(exports, 'sfnStateMachine', { get: function () { return require('./sfn-state-machine'); } });
Object.defineProperty(exports, 'shieldProtection', { get: function () { return require('./shield-protection'); } });
Object.defineProperty(exports, 'shieldProtectionGroup', { get: function () { return require('./shield-protection-group'); } });
Object.defineProperty(exports, 'shieldProtectionHealthCheckAssociation', { get: function () { return require('./shield-protection-health-check-association'); } });
Object.defineProperty(exports, 'signerSigningJob', { get: function () { return require('./signer-signing-job'); } });
Object.defineProperty(exports, 'signerSigningProfile', { get: function () { return require('./signer-signing-profile'); } });
Object.defineProperty(exports, 'signerSigningProfilePermission', { get: function () { return require('./signer-signing-profile-permission'); } });
Object.defineProperty(exports, 'simpledbDomain', { get: function () { return require('./simpledb-domain'); } });
Object.defineProperty(exports, 'snapshotCreateVolumePermission', { get: function () { return require('./snapshot-create-volume-permission'); } });
Object.defineProperty(exports, 'snsPlatformApplication', { get: function () { return require('./sns-platform-application'); } });
Object.defineProperty(exports, 'snsSmsPreferences', { get: function () { return require('./sns-sms-preferences'); } });
Object.defineProperty(exports, 'snsTopic', { get: function () { return require('./sns-topic'); } });
Object.defineProperty(exports, 'snsTopicPolicy', { get: function () { return require('./sns-topic-policy'); } });
Object.defineProperty(exports, 'snsTopicSubscription', { get: function () { return require('./sns-topic-subscription'); } });
Object.defineProperty(exports, 'spotDatafeedSubscription', { get: function () { return require('./spot-datafeed-subscription'); } });
Object.defineProperty(exports, 'spotFleetRequest', { get: function () { return require('./spot-fleet-request'); } });
Object.defineProperty(exports, 'spotInstanceRequest', { get: function () { return require('./spot-instance-request'); } });
Object.defineProperty(exports, 'sqsQueue', { get: function () { return require('./sqs-queue'); } });
Object.defineProperty(exports, 'sqsQueuePolicy', { get: function () { return require('./sqs-queue-policy'); } });
Object.defineProperty(exports, 'ssmActivation', { get: function () { return require('./ssm-activation'); } });
Object.defineProperty(exports, 'ssmAssociation', { get: function () { return require('./ssm-association'); } });
Object.defineProperty(exports, 'ssmDocument', { get: function () { return require('./ssm-document'); } });
Object.defineProperty(exports, 'ssmMaintenanceWindow', { get: function () { return require('./ssm-maintenance-window'); } });
Object.defineProperty(exports, 'ssmMaintenanceWindowTarget', { get: function () { return require('./ssm-maintenance-window-target'); } });
Object.defineProperty(exports, 'ssmMaintenanceWindowTask', { get: function () { return require('./ssm-maintenance-window-task'); } });
Object.defineProperty(exports, 'ssmParameter', { get: function () { return require('./ssm-parameter'); } });
Object.defineProperty(exports, 'ssmPatchBaseline', { get: function () { return require('./ssm-patch-baseline'); } });
Object.defineProperty(exports, 'ssmPatchGroup', { get: function () { return require('./ssm-patch-group'); } });
Object.defineProperty(exports, 'ssmResourceDataSync', { get: function () { return require('./ssm-resource-data-sync'); } });
Object.defineProperty(exports, 'ssoadminAccountAssignment', { get: function () { return require('./ssoadmin-account-assignment'); } });
Object.defineProperty(exports, 'ssoadminManagedPolicyAttachment', { get: function () { return require('./ssoadmin-managed-policy-attachment'); } });
Object.defineProperty(exports, 'ssoadminPermissionSet', { get: function () { return require('./ssoadmin-permission-set'); } });
Object.defineProperty(exports, 'ssoadminPermissionSetInlinePolicy', { get: function () { return require('./ssoadmin-permission-set-inline-policy'); } });
Object.defineProperty(exports, 'storagegatewayCache', { get: function () { return require('./storagegateway-cache'); } });
Object.defineProperty(exports, 'storagegatewayCachedIscsiVolume', { get: function () { return require('./storagegateway-cached-iscsi-volume'); } });
Object.defineProperty(exports, 'storagegatewayFileSystemAssociation', { get: function () { return require('./storagegateway-file-system-association'); } });
Object.defineProperty(exports, 'storagegatewayGateway', { get: function () { return require('./storagegateway-gateway'); } });
Object.defineProperty(exports, 'storagegatewayNfsFileShare', { get: function () { return require('./storagegateway-nfs-file-share'); } });
Object.defineProperty(exports, 'storagegatewaySmbFileShare', { get: function () { return require('./storagegateway-smb-file-share'); } });
Object.defineProperty(exports, 'storagegatewayStoredIscsiVolume', { get: function () { return require('./storagegateway-stored-iscsi-volume'); } });
Object.defineProperty(exports, 'storagegatewayTapePool', { get: function () { return require('./storagegateway-tape-pool'); } });
Object.defineProperty(exports, 'storagegatewayUploadBuffer', { get: function () { return require('./storagegateway-upload-buffer'); } });
Object.defineProperty(exports, 'storagegatewayWorkingStorage', { get: function () { return require('./storagegateway-working-storage'); } });
Object.defineProperty(exports, 'subnet', { get: function () { return require('./subnet'); } });
Object.defineProperty(exports, 'swfDomain', { get: function () { return require('./swf-domain'); } });
Object.defineProperty(exports, 'syntheticsCanary', { get: function () { return require('./synthetics-canary'); } });
Object.defineProperty(exports, 'timestreamwriteDatabase', { get: function () { return require('./timestreamwrite-database'); } });
Object.defineProperty(exports, 'timestreamwriteTable', { get: function () { return require('./timestreamwrite-table'); } });
Object.defineProperty(exports, 'transferAccess', { get: function () { return require('./transfer-access'); } });
Object.defineProperty(exports, 'transferServer', { get: function () { return require('./transfer-server'); } });
Object.defineProperty(exports, 'transferSshKey', { get: function () { return require('./transfer-ssh-key'); } });
Object.defineProperty(exports, 'transferUser', { get: function () { return require('./transfer-user'); } });
Object.defineProperty(exports, 'volumeAttachment', { get: function () { return require('./volume-attachment'); } });
Object.defineProperty(exports, 'vpc', { get: function () { return require('./vpc'); } });
Object.defineProperty(exports, 'vpcDhcpOptions', { get: function () { return require('./vpc-dhcp-options'); } });
Object.defineProperty(exports, 'vpcDhcpOptionsAssociation', { get: function () { return require('./vpc-dhcp-options-association'); } });
Object.defineProperty(exports, 'vpcEndpoint', { get: function () { return require('./vpc-endpoint'); } });
Object.defineProperty(exports, 'vpcEndpointConnectionAccepter', { get: function () { return require('./vpc-endpoint-connection-accepter'); } });
Object.defineProperty(exports, 'vpcEndpointConnectionNotification', { get: function () { return require('./vpc-endpoint-connection-notification'); } });
Object.defineProperty(exports, 'vpcEndpointRouteTableAssociation', { get: function () { return require('./vpc-endpoint-route-table-association'); } });
Object.defineProperty(exports, 'vpcEndpointService', { get: function () { return require('./vpc-endpoint-service'); } });
Object.defineProperty(exports, 'vpcEndpointServiceAllowedPrincipal', { get: function () { return require('./vpc-endpoint-service-allowed-principal'); } });
Object.defineProperty(exports, 'vpcEndpointSubnetAssociation', { get: function () { return require('./vpc-endpoint-subnet-association'); } });
Object.defineProperty(exports, 'vpcIpam', { get: function () { return require('./vpc-ipam'); } });
Object.defineProperty(exports, 'vpcIpamOrganizationAdminAccount', { get: function () { return require('./vpc-ipam-organization-admin-account'); } });
Object.defineProperty(exports, 'vpcIpamPool', { get: function () { return require('./vpc-ipam-pool'); } });
Object.defineProperty(exports, 'vpcIpamPoolCidr', { get: function () { return require('./vpc-ipam-pool-cidr'); } });
Object.defineProperty(exports, 'vpcIpamPoolCidrAllocation', { get: function () { return require('./vpc-ipam-pool-cidr-allocation'); } });
Object.defineProperty(exports, 'vpcIpamPreviewNextCidr', { get: function () { return require('./vpc-ipam-preview-next-cidr'); } });
Object.defineProperty(exports, 'vpcIpamScope', { get: function () { return require('./vpc-ipam-scope'); } });
Object.defineProperty(exports, 'vpcIpv4CidrBlockAssociation', { get: function () { return require('./vpc-ipv4-cidr-block-association'); } });
Object.defineProperty(exports, 'vpcIpv6CidrBlockAssociation', { get: function () { return require('./vpc-ipv6-cidr-block-association'); } });
Object.defineProperty(exports, 'vpcPeeringConnection', { get: function () { return require('./vpc-peering-connection'); } });
Object.defineProperty(exports, 'vpcPeeringConnectionAccepter', { get: function () { return require('./vpc-peering-connection-accepter'); } });
Object.defineProperty(exports, 'vpcPeeringConnectionOptions', { get: function () { return require('./vpc-peering-connection-options'); } });
Object.defineProperty(exports, 'vpnConnection', { get: function () { return require('./vpn-connection'); } });
Object.defineProperty(exports, 'vpnConnectionRoute', { get: function () { return require('./vpn-connection-route'); } });
Object.defineProperty(exports, 'vpnGateway', { get: function () { return require('./vpn-gateway'); } });
Object.defineProperty(exports, 'vpnGatewayAttachment', { get: function () { return require('./vpn-gateway-attachment'); } });
Object.defineProperty(exports, 'vpnGatewayRoutePropagation', { get: function () { return require('./vpn-gateway-route-propagation'); } });
Object.defineProperty(exports, 'wafByteMatchSet', { get: function () { return require('./waf-byte-match-set'); } });
Object.defineProperty(exports, 'wafGeoMatchSet', { get: function () { return require('./waf-geo-match-set'); } });
Object.defineProperty(exports, 'wafIpset', { get: function () { return require('./waf-ipset'); } });
Object.defineProperty(exports, 'wafRateBasedRule', { get: function () { return require('./waf-rate-based-rule'); } });
Object.defineProperty(exports, 'wafRegexMatchSet', { get: function () { return require('./waf-regex-match-set'); } });
Object.defineProperty(exports, 'wafRegexPatternSet', { get: function () { return require('./waf-regex-pattern-set'); } });
Object.defineProperty(exports, 'wafRule', { get: function () { return require('./waf-rule'); } });
Object.defineProperty(exports, 'wafRuleGroup', { get: function () { return require('./waf-rule-group'); } });
Object.defineProperty(exports, 'wafSizeConstraintSet', { get: function () { return require('./waf-size-constraint-set'); } });
Object.defineProperty(exports, 'wafSqlInjectionMatchSet', { get: function () { return require('./waf-sql-injection-match-set'); } });
Object.defineProperty(exports, 'wafWebAcl', { get: function () { return require('./waf-web-acl'); } });
Object.defineProperty(exports, 'wafXssMatchSet', { get: function () { return require('./waf-xss-match-set'); } });
Object.defineProperty(exports, 'wafregionalByteMatchSet', { get: function () { return require('./wafregional-byte-match-set'); } });
Object.defineProperty(exports, 'wafregionalGeoMatchSet', { get: function () { return require('./wafregional-geo-match-set'); } });
Object.defineProperty(exports, 'wafregionalIpset', { get: function () { return require('./wafregional-ipset'); } });
Object.defineProperty(exports, 'wafregionalRateBasedRule', { get: function () { return require('./wafregional-rate-based-rule'); } });
Object.defineProperty(exports, 'wafregionalRegexMatchSet', { get: function () { return require('./wafregional-regex-match-set'); } });
Object.defineProperty(exports, 'wafregionalRegexPatternSet', { get: function () { return require('./wafregional-regex-pattern-set'); } });
Object.defineProperty(exports, 'wafregionalRule', { get: function () { return require('./wafregional-rule'); } });
Object.defineProperty(exports, 'wafregionalRuleGroup', { get: function () { return require('./wafregional-rule-group'); } });
Object.defineProperty(exports, 'wafregionalSizeConstraintSet', { get: function () { return require('./wafregional-size-constraint-set'); } });
Object.defineProperty(exports, 'wafregionalSqlInjectionMatchSet', { get: function () { return require('./wafregional-sql-injection-match-set'); } });
Object.defineProperty(exports, 'wafregionalWebAcl', { get: function () { return require('./wafregional-web-acl'); } });
Object.defineProperty(exports, 'wafregionalWebAclAssociation', { get: function () { return require('./wafregional-web-acl-association'); } });
Object.defineProperty(exports, 'wafregionalXssMatchSet', { get: function () { return require('./wafregional-xss-match-set'); } });
Object.defineProperty(exports, 'wafv2IpSet', { get: function () { return require('./wafv2-ip-set'); } });
Object.defineProperty(exports, 'wafv2RegexPatternSet', { get: function () { return require('./wafv2-regex-pattern-set'); } });
Object.defineProperty(exports, 'wafv2RuleGroup', { get: function () { return require('./wafv2-rule-group'); } });
Object.defineProperty(exports, 'wafv2WebAcl', { get: function () { return require('./wafv2-web-acl'); } });
Object.defineProperty(exports, 'wafv2WebAclAssociation', { get: function () { return require('./wafv2-web-acl-association'); } });
Object.defineProperty(exports, 'wafv2WebAclLoggingConfiguration', { get: function () { return require('./wafv2-web-acl-logging-configuration'); } });
Object.defineProperty(exports, 'worklinkFleet', { get: function () { return require('./worklink-fleet'); } });
Object.defineProperty(exports, 'worklinkWebsiteCertificateAuthorityAssociation', { get: function () { return require('./worklink-website-certificate-authority-association'); } });
Object.defineProperty(exports, 'workspacesDirectory', { get: function () { return require('./workspaces-directory'); } });
Object.defineProperty(exports, 'workspacesIpGroup', { get: function () { return require('./workspaces-ip-group'); } });
Object.defineProperty(exports, 'workspacesWorkspace', { get: function () { return require('./workspaces-workspace'); } });
Object.defineProperty(exports, 'xrayEncryptionConfig', { get: function () { return require('./xray-encryption-config'); } });
Object.defineProperty(exports, 'xrayGroup', { get: function () { return require('./xray-group'); } });
Object.defineProperty(exports, 'xraySamplingRule', { get: function () { return require('./xray-sampling-rule'); } });
Object.defineProperty(exports, 'dataAwsAcmCertificate', { get: function () { return require('./data-aws-acm-certificate'); } });
Object.defineProperty(exports, 'dataAwsAcmpcaCertificate', { get: function () { return require('./data-aws-acmpca-certificate'); } });
Object.defineProperty(exports, 'dataAwsAcmpcaCertificateAuthority', { get: function () { return require('./data-aws-acmpca-certificate-authority'); } });
Object.defineProperty(exports, 'dataAwsAlb', { get: function () { return require('./data-aws-alb'); } });
Object.defineProperty(exports, 'dataAwsAlbListener', { get: function () { return require('./data-aws-alb-listener'); } });
Object.defineProperty(exports, 'dataAwsAlbTargetGroup', { get: function () { return require('./data-aws-alb-target-group'); } });
Object.defineProperty(exports, 'dataAwsAmi', { get: function () { return require('./data-aws-ami'); } });
Object.defineProperty(exports, 'dataAwsAmiIds', { get: function () { return require('./data-aws-ami-ids'); } });
Object.defineProperty(exports, 'dataAwsApiGatewayApiKey', { get: function () { return require('./data-aws-api-gateway-api-key'); } });
Object.defineProperty(exports, 'dataAwsApiGatewayDomainName', { get: function () { return require('./data-aws-api-gateway-domain-name'); } });
Object.defineProperty(exports, 'dataAwsApiGatewayExport', { get: function () { return require('./data-aws-api-gateway-export'); } });
Object.defineProperty(exports, 'dataAwsApiGatewayResource', { get: function () { return require('./data-aws-api-gateway-resource'); } });
Object.defineProperty(exports, 'dataAwsApiGatewayRestApi', { get: function () { return require('./data-aws-api-gateway-rest-api'); } });
Object.defineProperty(exports, 'dataAwsApiGatewaySdk', { get: function () { return require('./data-aws-api-gateway-sdk'); } });
Object.defineProperty(exports, 'dataAwsApiGatewayVpcLink', { get: function () { return require('./data-aws-api-gateway-vpc-link'); } });
Object.defineProperty(exports, 'dataAwsApigatewayv2Api', { get: function () { return require('./data-aws-apigatewayv2-api'); } });
Object.defineProperty(exports, 'dataAwsApigatewayv2Apis', { get: function () { return require('./data-aws-apigatewayv2-apis'); } });
Object.defineProperty(exports, 'dataAwsApigatewayv2Export', { get: function () { return require('./data-aws-apigatewayv2-export'); } });
Object.defineProperty(exports, 'dataAwsAppmeshMesh', { get: function () { return require('./data-aws-appmesh-mesh'); } });
Object.defineProperty(exports, 'dataAwsAppmeshVirtualService', { get: function () { return require('./data-aws-appmesh-virtual-service'); } });
Object.defineProperty(exports, 'dataAwsArn', { get: function () { return require('./data-aws-arn'); } });
Object.defineProperty(exports, 'dataAwsAutoscalingGroup', { get: function () { return require('./data-aws-autoscaling-group'); } });
Object.defineProperty(exports, 'dataAwsAutoscalingGroups', { get: function () { return require('./data-aws-autoscaling-groups'); } });
Object.defineProperty(exports, 'dataAwsAvailabilityZone', { get: function () { return require('./data-aws-availability-zone'); } });
Object.defineProperty(exports, 'dataAwsAvailabilityZones', { get: function () { return require('./data-aws-availability-zones'); } });
Object.defineProperty(exports, 'dataAwsBackupPlan', { get: function () { return require('./data-aws-backup-plan'); } });
Object.defineProperty(exports, 'dataAwsBackupSelection', { get: function () { return require('./data-aws-backup-selection'); } });
Object.defineProperty(exports, 'dataAwsBackupVault', { get: function () { return require('./data-aws-backup-vault'); } });
Object.defineProperty(exports, 'dataAwsBatchComputeEnvironment', { get: function () { return require('./data-aws-batch-compute-environment'); } });
Object.defineProperty(exports, 'dataAwsBatchJobQueue', { get: function () { return require('./data-aws-batch-job-queue'); } });
Object.defineProperty(exports, 'dataAwsBatchSchedulingPolicy', { get: function () { return require('./data-aws-batch-scheduling-policy'); } });
Object.defineProperty(exports, 'dataAwsBillingServiceAccount', { get: function () { return require('./data-aws-billing-service-account'); } });
Object.defineProperty(exports, 'dataAwsCallerIdentity', { get: function () { return require('./data-aws-caller-identity'); } });
Object.defineProperty(exports, 'dataAwsCanonicalUserId', { get: function () { return require('./data-aws-canonical-user-id'); } });
Object.defineProperty(exports, 'dataAwsCloudcontrolapiResource', { get: function () { return require('./data-aws-cloudcontrolapi-resource'); } });
Object.defineProperty(exports, 'dataAwsCloudformationExport', { get: function () { return require('./data-aws-cloudformation-export'); } });
Object.defineProperty(exports, 'dataAwsCloudformationStack', { get: function () { return require('./data-aws-cloudformation-stack'); } });
Object.defineProperty(exports, 'dataAwsCloudformationType', { get: function () { return require('./data-aws-cloudformation-type'); } });
Object.defineProperty(exports, 'dataAwsCloudfrontCachePolicy', { get: function () { return require('./data-aws-cloudfront-cache-policy'); } });
Object.defineProperty(exports, 'dataAwsCloudfrontDistribution', { get: function () { return require('./data-aws-cloudfront-distribution'); } });
Object.defineProperty(exports, 'dataAwsCloudfrontFunction', { get: function () { return require('./data-aws-cloudfront-function'); } });
Object.defineProperty(exports, 'dataAwsCloudfrontLogDeliveryCanonicalUserId', { get: function () { return require('./data-aws-cloudfront-log-delivery-canonical-user-id'); } });
Object.defineProperty(exports, 'dataAwsCloudfrontOriginAccessIdentity', { get: function () { return require('./data-aws-cloudfront-origin-access-identity'); } });
Object.defineProperty(exports, 'dataAwsCloudfrontOriginRequestPolicy', { get: function () { return require('./data-aws-cloudfront-origin-request-policy'); } });
Object.defineProperty(exports, 'dataAwsCloudfrontResponseHeadersPolicy', { get: function () { return require('./data-aws-cloudfront-response-headers-policy'); } });
Object.defineProperty(exports, 'dataAwsCloudhsmV2Cluster', { get: function () { return require('./data-aws-cloudhsm-v2-cluster'); } });
Object.defineProperty(exports, 'dataAwsCloudtrailServiceAccount', { get: function () { return require('./data-aws-cloudtrail-service-account'); } });
Object.defineProperty(exports, 'dataAwsCloudwatchEventConnection', { get: function () { return require('./data-aws-cloudwatch-event-connection'); } });
Object.defineProperty(exports, 'dataAwsCloudwatchEventSource', { get: function () { return require('./data-aws-cloudwatch-event-source'); } });
Object.defineProperty(exports, 'dataAwsCloudwatchLogGroup', { get: function () { return require('./data-aws-cloudwatch-log-group'); } });
Object.defineProperty(exports, 'dataAwsCloudwatchLogGroups', { get: function () { return require('./data-aws-cloudwatch-log-groups'); } });
Object.defineProperty(exports, 'dataAwsCodeartifactAuthorizationToken', { get: function () { return require('./data-aws-codeartifact-authorization-token'); } });
Object.defineProperty(exports, 'dataAwsCodeartifactRepositoryEndpoint', { get: function () { return require('./data-aws-codeartifact-repository-endpoint'); } });
Object.defineProperty(exports, 'dataAwsCodecommitApprovalRuleTemplate', { get: function () { return require('./data-aws-codecommit-approval-rule-template'); } });
Object.defineProperty(exports, 'dataAwsCodecommitRepository', { get: function () { return require('./data-aws-codecommit-repository'); } });
Object.defineProperty(exports, 'dataAwsCodestarconnectionsConnection', { get: function () { return require('./data-aws-codestarconnections-connection'); } });
Object.defineProperty(exports, 'dataAwsCognitoUserPoolClient', { get: function () { return require('./data-aws-cognito-user-pool-client'); } });
Object.defineProperty(exports, 'dataAwsCognitoUserPoolClients', { get: function () { return require('./data-aws-cognito-user-pool-clients'); } });
Object.defineProperty(exports, 'dataAwsCognitoUserPoolSigningCertificate', { get: function () { return require('./data-aws-cognito-user-pool-signing-certificate'); } });
Object.defineProperty(exports, 'dataAwsCognitoUserPools', { get: function () { return require('./data-aws-cognito-user-pools'); } });
Object.defineProperty(exports, 'dataAwsConnectBotAssociation', { get: function () { return require('./data-aws-connect-bot-association'); } });
Object.defineProperty(exports, 'dataAwsConnectContactFlow', { get: function () { return require('./data-aws-connect-contact-flow'); } });
Object.defineProperty(exports, 'dataAwsConnectContactFlowModule', { get: function () { return require('./data-aws-connect-contact-flow-module'); } });
Object.defineProperty(exports, 'dataAwsConnectHoursOfOperation', { get: function () { return require('./data-aws-connect-hours-of-operation'); } });
Object.defineProperty(exports, 'dataAwsConnectInstance', { get: function () { return require('./data-aws-connect-instance'); } });
Object.defineProperty(exports, 'dataAwsConnectLambdaFunctionAssociation', { get: function () { return require('./data-aws-connect-lambda-function-association'); } });
Object.defineProperty(exports, 'dataAwsConnectPrompt', { get: function () { return require('./data-aws-connect-prompt'); } });
Object.defineProperty(exports, 'dataAwsConnectQuickConnect', { get: function () { return require('./data-aws-connect-quick-connect'); } });
Object.defineProperty(exports, 'dataAwsCurReportDefinition', { get: function () { return require('./data-aws-cur-report-definition'); } });
Object.defineProperty(exports, 'dataAwsCustomerGateway', { get: function () { return require('./data-aws-customer-gateway'); } });
Object.defineProperty(exports, 'dataAwsDatapipelinePipeline', { get: function () { return require('./data-aws-datapipeline-pipeline'); } });
Object.defineProperty(exports, 'dataAwsDatapipelinePipelineDefinition', { get: function () { return require('./data-aws-datapipeline-pipeline-definition'); } });
Object.defineProperty(exports, 'dataAwsDbClusterSnapshot', { get: function () { return require('./data-aws-db-cluster-snapshot'); } });
Object.defineProperty(exports, 'dataAwsDbEventCategories', { get: function () { return require('./data-aws-db-event-categories'); } });
Object.defineProperty(exports, 'dataAwsDbInstance', { get: function () { return require('./data-aws-db-instance'); } });
Object.defineProperty(exports, 'dataAwsDbProxy', { get: function () { return require('./data-aws-db-proxy'); } });
Object.defineProperty(exports, 'dataAwsDbSnapshot', { get: function () { return require('./data-aws-db-snapshot'); } });
Object.defineProperty(exports, 'dataAwsDbSubnetGroup', { get: function () { return require('./data-aws-db-subnet-group'); } });
Object.defineProperty(exports, 'dataAwsDefaultTags', { get: function () { return require('./data-aws-default-tags'); } });
Object.defineProperty(exports, 'dataAwsDirectoryServiceDirectory', { get: function () { return require('./data-aws-directory-service-directory'); } });
Object.defineProperty(exports, 'dataAwsDocdbEngineVersion', { get: function () { return require('./data-aws-docdb-engine-version'); } });
Object.defineProperty(exports, 'dataAwsDocdbOrderableDbInstance', { get: function () { return require('./data-aws-docdb-orderable-db-instance'); } });
Object.defineProperty(exports, 'dataAwsDxConnection', { get: function () { return require('./data-aws-dx-connection'); } });
Object.defineProperty(exports, 'dataAwsDxGateway', { get: function () { return require('./data-aws-dx-gateway'); } });
Object.defineProperty(exports, 'dataAwsDxLocation', { get: function () { return require('./data-aws-dx-location'); } });
Object.defineProperty(exports, 'dataAwsDxLocations', { get: function () { return require('./data-aws-dx-locations'); } });
Object.defineProperty(exports, 'dataAwsDynamodbTable', { get: function () { return require('./data-aws-dynamodb-table'); } });
Object.defineProperty(exports, 'dataAwsEbsDefaultKmsKey', { get: function () { return require('./data-aws-ebs-default-kms-key'); } });
Object.defineProperty(exports, 'dataAwsEbsEncryptionByDefault', { get: function () { return require('./data-aws-ebs-encryption-by-default'); } });
Object.defineProperty(exports, 'dataAwsEbsSnapshot', { get: function () { return require('./data-aws-ebs-snapshot'); } });
Object.defineProperty(exports, 'dataAwsEbsSnapshotIds', { get: function () { return require('./data-aws-ebs-snapshot-ids'); } });
Object.defineProperty(exports, 'dataAwsEbsVolume', { get: function () { return require('./data-aws-ebs-volume'); } });
Object.defineProperty(exports, 'dataAwsEbsVolumes', { get: function () { return require('./data-aws-ebs-volumes'); } });
Object.defineProperty(exports, 'dataAwsEc2CoipPool', { get: function () { return require('./data-aws-ec2-coip-pool'); } });
Object.defineProperty(exports, 'dataAwsEc2CoipPools', { get: function () { return require('./data-aws-ec2-coip-pools'); } });
Object.defineProperty(exports, 'dataAwsEc2Host', { get: function () { return require('./data-aws-ec2-host'); } });
Object.defineProperty(exports, 'dataAwsEc2InstanceType', { get: function () { return require('./data-aws-ec2-instance-type'); } });
Object.defineProperty(exports, 'dataAwsEc2InstanceTypeOffering', { get: function () { return require('./data-aws-ec2-instance-type-offering'); } });
Object.defineProperty(exports, 'dataAwsEc2InstanceTypeOfferings', { get: function () { return require('./data-aws-ec2-instance-type-offerings'); } });
Object.defineProperty(exports, 'dataAwsEc2InstanceTypes', { get: function () { return require('./data-aws-ec2-instance-types'); } });
Object.defineProperty(exports, 'dataAwsEc2LocalGateway', { get: function () { return require('./data-aws-ec2-local-gateway'); } });
Object.defineProperty(exports, 'dataAwsEc2LocalGatewayRouteTable', { get: function () { return require('./data-aws-ec2-local-gateway-route-table'); } });
Object.defineProperty(exports, 'dataAwsEc2LocalGatewayRouteTables', { get: function () { return require('./data-aws-ec2-local-gateway-route-tables'); } });
Object.defineProperty(exports, 'dataAwsEc2LocalGatewayVirtualInterface', { get: function () { return require('./data-aws-ec2-local-gateway-virtual-interface'); } });
Object.defineProperty(exports, 'dataAwsEc2LocalGatewayVirtualInterfaceGroup', { get: function () { return require('./data-aws-ec2-local-gateway-virtual-interface-group'); } });
Object.defineProperty(exports, 'dataAwsEc2LocalGatewayVirtualInterfaceGroups', { get: function () { return require('./data-aws-ec2-local-gateway-virtual-interface-groups'); } });
Object.defineProperty(exports, 'dataAwsEc2LocalGateways', { get: function () { return require('./data-aws-ec2-local-gateways'); } });
Object.defineProperty(exports, 'dataAwsEc2ManagedPrefixList', { get: function () { return require('./data-aws-ec2-managed-prefix-list'); } });
Object.defineProperty(exports, 'dataAwsEc2SpotPrice', { get: function () { return require('./data-aws-ec2-spot-price'); } });
Object.defineProperty(exports, 'dataAwsEc2TransitGateway', { get: function () { return require('./data-aws-ec2-transit-gateway'); } });
Object.defineProperty(exports, 'dataAwsEc2TransitGatewayDxGatewayAttachment', { get: function () { return require('./data-aws-ec2-transit-gateway-dx-gateway-attachment'); } });
Object.defineProperty(exports, 'dataAwsEc2TransitGatewayPeeringAttachment', { get: function () { return require('./data-aws-ec2-transit-gateway-peering-attachment'); } });
Object.defineProperty(exports, 'dataAwsEc2TransitGatewayRouteTable', { get: function () { return require('./data-aws-ec2-transit-gateway-route-table'); } });
Object.defineProperty(exports, 'dataAwsEc2TransitGatewayRouteTables', { get: function () { return require('./data-aws-ec2-transit-gateway-route-tables'); } });
Object.defineProperty(exports, 'dataAwsEc2TransitGatewayVpcAttachment', { get: function () { return require('./data-aws-ec2-transit-gateway-vpc-attachment'); } });
Object.defineProperty(exports, 'dataAwsEc2TransitGatewayVpnAttachment', { get: function () { return require('./data-aws-ec2-transit-gateway-vpn-attachment'); } });
Object.defineProperty(exports, 'dataAwsEcrAuthorizationToken', { get: function () { return require('./data-aws-ecr-authorization-token'); } });
Object.defineProperty(exports, 'dataAwsEcrImage', { get: function () { return require('./data-aws-ecr-image'); } });
Object.defineProperty(exports, 'dataAwsEcrRepository', { get: function () { return require('./data-aws-ecr-repository'); } });
Object.defineProperty(exports, 'dataAwsEcsCluster', { get: function () { return require('./data-aws-ecs-cluster'); } });
Object.defineProperty(exports, 'dataAwsEcsContainerDefinition', { get: function () { return require('./data-aws-ecs-container-definition'); } });
Object.defineProperty(exports, 'dataAwsEcsService', { get: function () { return require('./data-aws-ecs-service'); } });
Object.defineProperty(exports, 'dataAwsEcsTaskDefinition', { get: function () { return require('./data-aws-ecs-task-definition'); } });
Object.defineProperty(exports, 'dataAwsEfsAccessPoint', { get: function () { return require('./data-aws-efs-access-point'); } });
Object.defineProperty(exports, 'dataAwsEfsAccessPoints', { get: function () { return require('./data-aws-efs-access-points'); } });
Object.defineProperty(exports, 'dataAwsEfsFileSystem', { get: function () { return require('./data-aws-efs-file-system'); } });
Object.defineProperty(exports, 'dataAwsEfsMountTarget', { get: function () { return require('./data-aws-efs-mount-target'); } });
Object.defineProperty(exports, 'dataAwsEip', { get: function () { return require('./data-aws-eip'); } });
Object.defineProperty(exports, 'dataAwsEksAddon', { get: function () { return require('./data-aws-eks-addon'); } });
Object.defineProperty(exports, 'dataAwsEksCluster', { get: function () { return require('./data-aws-eks-cluster'); } });
Object.defineProperty(exports, 'dataAwsEksClusterAuth', { get: function () { return require('./data-aws-eks-cluster-auth'); } });
Object.defineProperty(exports, 'dataAwsEksClusters', { get: function () { return require('./data-aws-eks-clusters'); } });
Object.defineProperty(exports, 'dataAwsEksNodeGroup', { get: function () { return require('./data-aws-eks-node-group'); } });
Object.defineProperty(exports, 'dataAwsEksNodeGroups', { get: function () { return require('./data-aws-eks-node-groups'); } });
Object.defineProperty(exports, 'dataAwsElasticBeanstalkApplication', { get: function () { return require('./data-aws-elastic-beanstalk-application'); } });
Object.defineProperty(exports, 'dataAwsElasticBeanstalkHostedZone', { get: function () { return require('./data-aws-elastic-beanstalk-hosted-zone'); } });
Object.defineProperty(exports, 'dataAwsElasticBeanstalkSolutionStack', { get: function () { return require('./data-aws-elastic-beanstalk-solution-stack'); } });
Object.defineProperty(exports, 'dataAwsElasticacheCluster', { get: function () { return require('./data-aws-elasticache-cluster'); } });
Object.defineProperty(exports, 'dataAwsElasticacheReplicationGroup', { get: function () { return require('./data-aws-elasticache-replication-group'); } });
Object.defineProperty(exports, 'dataAwsElasticacheUser', { get: function () { return require('./data-aws-elasticache-user'); } });
Object.defineProperty(exports, 'dataAwsElasticsearchDomain', { get: function () { return require('./data-aws-elasticsearch-domain'); } });
Object.defineProperty(exports, 'dataAwsElb', { get: function () { return require('./data-aws-elb'); } });
Object.defineProperty(exports, 'dataAwsElbHostedZoneId', { get: function () { return require('./data-aws-elb-hosted-zone-id'); } });
Object.defineProperty(exports, 'dataAwsElbServiceAccount', { get: function () { return require('./data-aws-elb-service-account'); } });
Object.defineProperty(exports, 'dataAwsEmrReleaseLabels', { get: function () { return require('./data-aws-emr-release-labels'); } });
Object.defineProperty(exports, 'dataAwsGlobalacceleratorAccelerator', { get: function () { return require('./data-aws-globalaccelerator-accelerator'); } });
Object.defineProperty(exports, 'dataAwsGlueConnection', { get: function () { return require('./data-aws-glue-connection'); } });
Object.defineProperty(exports, 'dataAwsGlueDataCatalogEncryptionSettings', { get: function () { return require('./data-aws-glue-data-catalog-encryption-settings'); } });
Object.defineProperty(exports, 'dataAwsGlueScript', { get: function () { return require('./data-aws-glue-script'); } });
Object.defineProperty(exports, 'dataAwsGuarddutyDetector', { get: function () { return require('./data-aws-guardduty-detector'); } });
Object.defineProperty(exports, 'dataAwsIamAccountAlias', { get: function () { return require('./data-aws-iam-account-alias'); } });
Object.defineProperty(exports, 'dataAwsIamGroup', { get: function () { return require('./data-aws-iam-group'); } });
Object.defineProperty(exports, 'dataAwsIamInstanceProfile', { get: function () { return require('./data-aws-iam-instance-profile'); } });
Object.defineProperty(exports, 'dataAwsIamPolicy', { get: function () { return require('./data-aws-iam-policy'); } });
Object.defineProperty(exports, 'dataAwsIamPolicyDocument', { get: function () { return require('./data-aws-iam-policy-document'); } });
Object.defineProperty(exports, 'dataAwsIamRole', { get: function () { return require('./data-aws-iam-role'); } });
Object.defineProperty(exports, 'dataAwsIamRoles', { get: function () { return require('./data-aws-iam-roles'); } });
Object.defineProperty(exports, 'dataAwsIamServerCertificate', { get: function () { return require('./data-aws-iam-server-certificate'); } });
Object.defineProperty(exports, 'dataAwsIamSessionContext', { get: function () { return require('./data-aws-iam-session-context'); } });
Object.defineProperty(exports, 'dataAwsIamUser', { get: function () { return require('./data-aws-iam-user'); } });
Object.defineProperty(exports, 'dataAwsIamUserSshKey', { get: function () { return require('./data-aws-iam-user-ssh-key'); } });
Object.defineProperty(exports, 'dataAwsIamUsers', { get: function () { return require('./data-aws-iam-users'); } });
Object.defineProperty(exports, 'dataAwsIdentitystoreGroup', { get: function () { return require('./data-aws-identitystore-group'); } });
Object.defineProperty(exports, 'dataAwsIdentitystoreUser', { get: function () { return require('./data-aws-identitystore-user'); } });
Object.defineProperty(exports, 'dataAwsImagebuilderComponent', { get: function () { return require('./data-aws-imagebuilder-component'); } });
Object.defineProperty(exports, 'dataAwsImagebuilderComponents', { get: function () { return require('./data-aws-imagebuilder-components'); } });
Object.defineProperty(exports, 'dataAwsImagebuilderDistributionConfiguration', { get: function () { return require('./data-aws-imagebuilder-distribution-configuration'); } });
Object.defineProperty(exports, 'dataAwsImagebuilderDistributionConfigurations', { get: function () { return require('./data-aws-imagebuilder-distribution-configurations'); } });
Object.defineProperty(exports, 'dataAwsImagebuilderImage', { get: function () { return require('./data-aws-imagebuilder-image'); } });
Object.defineProperty(exports, 'dataAwsImagebuilderImagePipeline', { get: function () { return require('./data-aws-imagebuilder-image-pipeline'); } });
Object.defineProperty(exports, 'dataAwsImagebuilderImageRecipe', { get: function () { return require('./data-aws-imagebuilder-image-recipe'); } });
Object.defineProperty(exports, 'dataAwsImagebuilderImageRecipes', { get: function () { return require('./data-aws-imagebuilder-image-recipes'); } });
Object.defineProperty(exports, 'dataAwsImagebuilderInfrastructureConfiguration', { get: function () { return require('./data-aws-imagebuilder-infrastructure-configuration'); } });
Object.defineProperty(exports, 'dataAwsImagebuilderInfrastructureConfigurations', { get: function () { return require('./data-aws-imagebuilder-infrastructure-configurations'); } });
Object.defineProperty(exports, 'dataAwsInspectorRulesPackages', { get: function () { return require('./data-aws-inspector-rules-packages'); } });
Object.defineProperty(exports, 'dataAwsInstance', { get: function () { return require('./data-aws-instance'); } });
Object.defineProperty(exports, 'dataAwsInstances', { get: function () { return require('./data-aws-instances'); } });
Object.defineProperty(exports, 'dataAwsInternetGateway', { get: function () { return require('./data-aws-internet-gateway'); } });
Object.defineProperty(exports, 'dataAwsIotEndpoint', { get: function () { return require('./data-aws-iot-endpoint'); } });
Object.defineProperty(exports, 'dataAwsIpRanges', { get: function () { return require('./data-aws-ip-ranges'); } });
Object.defineProperty(exports, 'dataAwsKeyPair', { get: function () { return require('./data-aws-key-pair'); } });
Object.defineProperty(exports, 'dataAwsKinesisFirehoseDeliveryStream', { get: function () { return require('./data-aws-kinesis-firehose-delivery-stream'); } });
Object.defineProperty(exports, 'dataAwsKinesisStream', { get: function () { return require('./data-aws-kinesis-stream'); } });
Object.defineProperty(exports, 'dataAwsKinesisStreamConsumer', { get: function () { return require('./data-aws-kinesis-stream-consumer'); } });
Object.defineProperty(exports, 'dataAwsKmsAlias', { get: function () { return require('./data-aws-kms-alias'); } });
Object.defineProperty(exports, 'dataAwsKmsCiphertext', { get: function () { return require('./data-aws-kms-ciphertext'); } });
Object.defineProperty(exports, 'dataAwsKmsKey', { get: function () { return require('./data-aws-kms-key'); } });
Object.defineProperty(exports, 'dataAwsKmsPublicKey', { get: function () { return require('./data-aws-kms-public-key'); } });
Object.defineProperty(exports, 'dataAwsKmsSecret', { get: function () { return require('./data-aws-kms-secret'); } });
Object.defineProperty(exports, 'dataAwsKmsSecrets', { get: function () { return require('./data-aws-kms-secrets'); } });
Object.defineProperty(exports, 'dataAwsLakeformationDataLakeSettings', { get: function () { return require('./data-aws-lakeformation-data-lake-settings'); } });
Object.defineProperty(exports, 'dataAwsLakeformationPermissions', { get: function () { return require('./data-aws-lakeformation-permissions'); } });
Object.defineProperty(exports, 'dataAwsLakeformationResource', { get: function () { return require('./data-aws-lakeformation-resource'); } });
Object.defineProperty(exports, 'dataAwsLambdaAlias', { get: function () { return require('./data-aws-lambda-alias'); } });
Object.defineProperty(exports, 'dataAwsLambdaCodeSigningConfig', { get: function () { return require('./data-aws-lambda-code-signing-config'); } });
Object.defineProperty(exports, 'dataAwsLambdaFunction', { get: function () { return require('./data-aws-lambda-function'); } });
Object.defineProperty(exports, 'dataAwsLambdaInvocation', { get: function () { return require('./data-aws-lambda-invocation'); } });
Object.defineProperty(exports, 'dataAwsLambdaLayerVersion', { get: function () { return require('./data-aws-lambda-layer-version'); } });
Object.defineProperty(exports, 'dataAwsLaunchConfiguration', { get: function () { return require('./data-aws-launch-configuration'); } });
Object.defineProperty(exports, 'dataAwsLaunchTemplate', { get: function () { return require('./data-aws-launch-template'); } });
Object.defineProperty(exports, 'dataAwsLb', { get: function () { return require('./data-aws-lb'); } });
Object.defineProperty(exports, 'dataAwsLbListener', { get: function () { return require('./data-aws-lb-listener'); } });
Object.defineProperty(exports, 'dataAwsLbTargetGroup', { get: function () { return require('./data-aws-lb-target-group'); } });
Object.defineProperty(exports, 'dataAwsLexBot', { get: function () { return require('./data-aws-lex-bot'); } });
Object.defineProperty(exports, 'dataAwsLexBotAlias', { get: function () { return require('./data-aws-lex-bot-alias'); } });
Object.defineProperty(exports, 'dataAwsLexIntent', { get: function () { return require('./data-aws-lex-intent'); } });
Object.defineProperty(exports, 'dataAwsLexSlotType', { get: function () { return require('./data-aws-lex-slot-type'); } });
Object.defineProperty(exports, 'dataAwsMqBroker', { get: function () { return require('./data-aws-mq-broker'); } });
Object.defineProperty(exports, 'dataAwsMskBrokerNodes', { get: function () { return require('./data-aws-msk-broker-nodes'); } });
Object.defineProperty(exports, 'dataAwsMskCluster', { get: function () { return require('./data-aws-msk-cluster'); } });
Object.defineProperty(exports, 'dataAwsMskConfiguration', { get: function () { return require('./data-aws-msk-configuration'); } });
Object.defineProperty(exports, 'dataAwsMskKafkaVersion', { get: function () { return require('./data-aws-msk-kafka-version'); } });
Object.defineProperty(exports, 'dataAwsMskconnectCustomPlugin', { get: function () { return require('./data-aws-mskconnect-custom-plugin'); } });
Object.defineProperty(exports, 'dataAwsMskconnectWorkerConfiguration', { get: function () { return require('./data-aws-mskconnect-worker-configuration'); } });
Object.defineProperty(exports, 'dataAwsNatGateway', { get: function () { return require('./data-aws-nat-gateway'); } });
Object.defineProperty(exports, 'dataAwsNeptuneEngineVersion', { get: function () { return require('./data-aws-neptune-engine-version'); } });
Object.defineProperty(exports, 'dataAwsNeptuneOrderableDbInstance', { get: function () { return require('./data-aws-neptune-orderable-db-instance'); } });
Object.defineProperty(exports, 'dataAwsNetworkAcls', { get: function () { return require('./data-aws-network-acls'); } });
Object.defineProperty(exports, 'dataAwsNetworkInterface', { get: function () { return require('./data-aws-network-interface'); } });
Object.defineProperty(exports, 'dataAwsNetworkInterfaces', { get: function () { return require('./data-aws-network-interfaces'); } });
Object.defineProperty(exports, 'dataAwsOrganizationsDelegatedAdministrators', { get: function () { return require('./data-aws-organizations-delegated-administrators'); } });
Object.defineProperty(exports, 'dataAwsOrganizationsDelegatedServices', { get: function () { return require('./data-aws-organizations-delegated-services'); } });
Object.defineProperty(exports, 'dataAwsOrganizationsOrganization', { get: function () { return require('./data-aws-organizations-organization'); } });
Object.defineProperty(exports, 'dataAwsOrganizationsOrganizationalUnits', { get: function () { return require('./data-aws-organizations-organizational-units'); } });
Object.defineProperty(exports, 'dataAwsOrganizationsResourceTags', { get: function () { return require('./data-aws-organizations-resource-tags'); } });
Object.defineProperty(exports, 'dataAwsOutpostsOutpost', { get: function () { return require('./data-aws-outposts-outpost'); } });
Object.defineProperty(exports, 'dataAwsOutpostsOutpostInstanceType', { get: function () { return require('./data-aws-outposts-outpost-instance-type'); } });
Object.defineProperty(exports, 'dataAwsOutpostsOutpostInstanceTypes', { get: function () { return require('./data-aws-outposts-outpost-instance-types'); } });
Object.defineProperty(exports, 'dataAwsOutpostsOutposts', { get: function () { return require('./data-aws-outposts-outposts'); } });
Object.defineProperty(exports, 'dataAwsOutpostsSite', { get: function () { return require('./data-aws-outposts-site'); } });
Object.defineProperty(exports, 'dataAwsOutpostsSites', { get: function () { return require('./data-aws-outposts-sites'); } });
Object.defineProperty(exports, 'dataAwsPartition', { get: function () { return require('./data-aws-partition'); } });
Object.defineProperty(exports, 'dataAwsPrefixList', { get: function () { return require('./data-aws-prefix-list'); } });
Object.defineProperty(exports, 'dataAwsPricingProduct', { get: function () { return require('./data-aws-pricing-product'); } });
Object.defineProperty(exports, 'dataAwsQldbLedger', { get: function () { return require('./data-aws-qldb-ledger'); } });
Object.defineProperty(exports, 'dataAwsRamResourceShare', { get: function () { return require('./data-aws-ram-resource-share'); } });
Object.defineProperty(exports, 'dataAwsRdsCertificate', { get: function () { return require('./data-aws-rds-certificate'); } });
Object.defineProperty(exports, 'dataAwsRdsCluster', { get: function () { return require('./data-aws-rds-cluster'); } });
Object.defineProperty(exports, 'dataAwsRdsEngineVersion', { get: function () { return require('./data-aws-rds-engine-version'); } });
Object.defineProperty(exports, 'dataAwsRdsOrderableDbInstance', { get: function () { return require('./data-aws-rds-orderable-db-instance'); } });
Object.defineProperty(exports, 'dataAwsRedshiftCluster', { get: function () { return require('./data-aws-redshift-cluster'); } });
Object.defineProperty(exports, 'dataAwsRedshiftOrderableCluster', { get: function () { return require('./data-aws-redshift-orderable-cluster'); } });
Object.defineProperty(exports, 'dataAwsRedshiftServiceAccount', { get: function () { return require('./data-aws-redshift-service-account'); } });
Object.defineProperty(exports, 'dataAwsRegion', { get: function () { return require('./data-aws-region'); } });
Object.defineProperty(exports, 'dataAwsRegions', { get: function () { return require('./data-aws-regions'); } });
Object.defineProperty(exports, 'dataAwsResourcegroupstaggingapiResources', { get: function () { return require('./data-aws-resourcegroupstaggingapi-resources'); } });
Object.defineProperty(exports, 'dataAwsRoute', { get: function () { return require('./data-aws-route'); } });
Object.defineProperty(exports, 'dataAwsRoute53DelegationSet', { get: function () { return require('./data-aws-route53-delegation-set'); } });
Object.defineProperty(exports, 'dataAwsRoute53ResolverEndpoint', { get: function () { return require('./data-aws-route53-resolver-endpoint'); } });
Object.defineProperty(exports, 'dataAwsRoute53ResolverRule', { get: function () { return require('./data-aws-route53-resolver-rule'); } });
Object.defineProperty(exports, 'dataAwsRoute53ResolverRules', { get: function () { return require('./data-aws-route53-resolver-rules'); } });
Object.defineProperty(exports, 'dataAwsRoute53Zone', { get: function () { return require('./data-aws-route53-zone'); } });
Object.defineProperty(exports, 'dataAwsRouteTable', { get: function () { return require('./data-aws-route-table'); } });
Object.defineProperty(exports, 'dataAwsRouteTables', { get: function () { return require('./data-aws-route-tables'); } });
Object.defineProperty(exports, 'dataAwsS3Bucket', { get: function () { return require('./data-aws-s3-bucket'); } });
Object.defineProperty(exports, 'dataAwsS3BucketObject', { get: function () { return require('./data-aws-s3-bucket-object'); } });
Object.defineProperty(exports, 'dataAwsS3BucketObjects', { get: function () { return require('./data-aws-s3-bucket-objects'); } });
Object.defineProperty(exports, 'dataAwsSagemakerPrebuiltEcrImage', { get: function () { return require('./data-aws-sagemaker-prebuilt-ecr-image'); } });
Object.defineProperty(exports, 'dataAwsSecretsmanagerSecret', { get: function () { return require('./data-aws-secretsmanager-secret'); } });
Object.defineProperty(exports, 'dataAwsSecretsmanagerSecretRotation', { get: function () { return require('./data-aws-secretsmanager-secret-rotation'); } });
Object.defineProperty(exports, 'dataAwsSecretsmanagerSecretVersion', { get: function () { return require('./data-aws-secretsmanager-secret-version'); } });
Object.defineProperty(exports, 'dataAwsSecurityGroup', { get: function () { return require('./data-aws-security-group'); } });
Object.defineProperty(exports, 'dataAwsSecurityGroups', { get: function () { return require('./data-aws-security-groups'); } });
Object.defineProperty(exports, 'dataAwsServerlessapplicationrepositoryApplication', { get: function () { return require('./data-aws-serverlessapplicationrepository-application'); } });
Object.defineProperty(exports, 'dataAwsServiceDiscoveryDnsNamespace', { get: function () { return require('./data-aws-service-discovery-dns-namespace'); } });
Object.defineProperty(exports, 'dataAwsServicecatalogConstraint', { get: function () { return require('./data-aws-servicecatalog-constraint'); } });
Object.defineProperty(exports, 'dataAwsServicecatalogLaunchPaths', { get: function () { return require('./data-aws-servicecatalog-launch-paths'); } });
Object.defineProperty(exports, 'dataAwsServicecatalogPortfolio', { get: function () { return require('./data-aws-servicecatalog-portfolio'); } });
Object.defineProperty(exports, 'dataAwsServicecatalogPortfolioConstraints', { get: function () { return require('./data-aws-servicecatalog-portfolio-constraints'); } });
Object.defineProperty(exports, 'dataAwsServicecatalogProduct', { get: function () { return require('./data-aws-servicecatalog-product'); } });
Object.defineProperty(exports, 'dataAwsServicequotasService', { get: function () { return require('./data-aws-servicequotas-service'); } });
Object.defineProperty(exports, 'dataAwsServicequotasServiceQuota', { get: function () { return require('./data-aws-servicequotas-service-quota'); } });
Object.defineProperty(exports, 'dataAwsSesActiveReceiptRuleSet', { get: function () { return require('./data-aws-ses-active-receipt-rule-set'); } });
Object.defineProperty(exports, 'dataAwsSesDomainIdentity', { get: function () { return require('./data-aws-ses-domain-identity'); } });
Object.defineProperty(exports, 'dataAwsSesEmailIdentity', { get: function () { return require('./data-aws-ses-email-identity'); } });
Object.defineProperty(exports, 'dataAwsSfnActivity', { get: function () { return require('./data-aws-sfn-activity'); } });
Object.defineProperty(exports, 'dataAwsSfnStateMachine', { get: function () { return require('./data-aws-sfn-state-machine'); } });
Object.defineProperty(exports, 'dataAwsSignerSigningJob', { get: function () { return require('./data-aws-signer-signing-job'); } });
Object.defineProperty(exports, 'dataAwsSignerSigningProfile', { get: function () { return require('./data-aws-signer-signing-profile'); } });
Object.defineProperty(exports, 'dataAwsSnsTopic', { get: function () { return require('./data-aws-sns-topic'); } });
Object.defineProperty(exports, 'dataAwsSqsQueue', { get: function () { return require('./data-aws-sqs-queue'); } });
Object.defineProperty(exports, 'dataAwsSsmDocument', { get: function () { return require('./data-aws-ssm-document'); } });
Object.defineProperty(exports, 'dataAwsSsmParameter', { get: function () { return require('./data-aws-ssm-parameter'); } });
Object.defineProperty(exports, 'dataAwsSsmParametersByPath', { get: function () { return require('./data-aws-ssm-parameters-by-path'); } });
Object.defineProperty(exports, 'dataAwsSsmPatchBaseline', { get: function () { return require('./data-aws-ssm-patch-baseline'); } });
Object.defineProperty(exports, 'dataAwsSsoadminInstances', { get: function () { return require('./data-aws-ssoadmin-instances'); } });
Object.defineProperty(exports, 'dataAwsSsoadminPermissionSet', { get: function () { return require('./data-aws-ssoadmin-permission-set'); } });
Object.defineProperty(exports, 'dataAwsStoragegatewayLocalDisk', { get: function () { return require('./data-aws-storagegateway-local-disk'); } });
Object.defineProperty(exports, 'dataAwsSubnet', { get: function () { return require('./data-aws-subnet'); } });
Object.defineProperty(exports, 'dataAwsSubnetIds', { get: function () { return require('./data-aws-subnet-ids'); } });
Object.defineProperty(exports, 'dataAwsSubnets', { get: function () { return require('./data-aws-subnets'); } });
Object.defineProperty(exports, 'dataAwsTransferServer', { get: function () { return require('./data-aws-transfer-server'); } });
Object.defineProperty(exports, 'dataAwsVpc', { get: function () { return require('./data-aws-vpc'); } });
Object.defineProperty(exports, 'dataAwsVpcDhcpOptions', { get: function () { return require('./data-aws-vpc-dhcp-options'); } });
Object.defineProperty(exports, 'dataAwsVpcEndpoint', { get: function () { return require('./data-aws-vpc-endpoint'); } });
Object.defineProperty(exports, 'dataAwsVpcEndpointService', { get: function () { return require('./data-aws-vpc-endpoint-service'); } });
Object.defineProperty(exports, 'dataAwsVpcIpamPool', { get: function () { return require('./data-aws-vpc-ipam-pool'); } });
Object.defineProperty(exports, 'dataAwsVpcIpamPreviewNextCidr', { get: function () { return require('./data-aws-vpc-ipam-preview-next-cidr'); } });
Object.defineProperty(exports, 'dataAwsVpcPeeringConnection', { get: function () { return require('./data-aws-vpc-peering-connection'); } });
Object.defineProperty(exports, 'dataAwsVpcPeeringConnections', { get: function () { return require('./data-aws-vpc-peering-connections'); } });
Object.defineProperty(exports, 'dataAwsVpcs', { get: function () { return require('./data-aws-vpcs'); } });
Object.defineProperty(exports, 'dataAwsVpnGateway', { get: function () { return require('./data-aws-vpn-gateway'); } });
Object.defineProperty(exports, 'dataAwsWafIpset', { get: function () { return require('./data-aws-waf-ipset'); } });
Object.defineProperty(exports, 'dataAwsWafRateBasedRule', { get: function () { return require('./data-aws-waf-rate-based-rule'); } });
Object.defineProperty(exports, 'dataAwsWafRule', { get: function () { return require('./data-aws-waf-rule'); } });
Object.defineProperty(exports, 'dataAwsWafWebAcl', { get: function () { return require('./data-aws-waf-web-acl'); } });
Object.defineProperty(exports, 'dataAwsWafregionalIpset', { get: function () { return require('./data-aws-wafregional-ipset'); } });
Object.defineProperty(exports, 'dataAwsWafregionalRateBasedRule', { get: function () { return require('./data-aws-wafregional-rate-based-rule'); } });
Object.defineProperty(exports, 'dataAwsWafregionalRule', { get: function () { return require('./data-aws-wafregional-rule'); } });
Object.defineProperty(exports, 'dataAwsWafregionalWebAcl', { get: function () { return require('./data-aws-wafregional-web-acl'); } });
Object.defineProperty(exports, 'dataAwsWafv2IpSet', { get: function () { return require('./data-aws-wafv2-ip-set'); } });
Object.defineProperty(exports, 'dataAwsWafv2RegexPatternSet', { get: function () { return require('./data-aws-wafv2-regex-pattern-set'); } });
Object.defineProperty(exports, 'dataAwsWafv2RuleGroup', { get: function () { return require('./data-aws-wafv2-rule-group'); } });
Object.defineProperty(exports, 'dataAwsWafv2WebAcl', { get: function () { return require('./data-aws-wafv2-web-acl'); } });
Object.defineProperty(exports, 'dataAwsWorkspacesBundle', { get: function () { return require('./data-aws-workspaces-bundle'); } });
Object.defineProperty(exports, 'dataAwsWorkspacesDirectory', { get: function () { return require('./data-aws-workspaces-directory'); } });
Object.defineProperty(exports, 'dataAwsWorkspacesImage', { get: function () { return require('./data-aws-workspaces-image'); } });
Object.defineProperty(exports, 'dataAwsWorkspacesWorkspace', { get: function () { return require('./data-aws-workspaces-workspace'); } });
Object.defineProperty(exports, 'provider', { get: function () { return require('./provider'); } });
//# sourceMappingURL=data:application/json;base64,