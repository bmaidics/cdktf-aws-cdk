"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.schema = void 0;
// Copyright (c) HashiCorp, Inc
// SPDX-License-Identifier: MPL-2.0
const z = __importStar(require("zod"));
const tfObject = (config) => z.array(z.object(config).partial());
const outputConfig = tfObject({
    value: z.any(),
    description: z.string().optional(),
    sensitive: z.boolean().optional(),
    depends_on: z.string().optional(),
});
const validationConfig = z.object({
    error_message: z.string(),
    condition: z.any(),
});
const variableConfig = tfObject({
    type: z.string(),
    default: z.any(),
    description: z.string(),
    sensitive: z.boolean(),
    nullable: z.boolean().optional(),
    validation: z.array(validationConfig).optional(),
});
const providerConfig = z.array(z.record(z.any()));
const moduleConfig = z.array(z.object({ source: z.string() }).nonstrict());
const resourceConfig = z.array(z.record(z.any()));
const providerSpecification = z.union([
    z.object({ source: z.string(), version: z.string() }).partial(),
    z.string(),
]);
const terraformConfig = z
    .object({
    required_version: z.string(),
    required_providers: z.array(z.record(providerSpecification)),
    backend: z.record(z.array(z.record(z.any()))),
})
    .partial();
exports.schema = z
    .object({
    terraform: z.array(terraformConfig),
    locals: z.array(z.record(z.any())),
    variable: z.record(variableConfig),
    output: z.record(outputConfig),
    provider: z.record(providerConfig),
    module: z.record(moduleConfig),
    resource: z.record(z.record(resourceConfig)),
    data: z.record(z.record(resourceConfig)),
})
    .partial();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZW1hLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2NoZW1hLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsK0JBQStCO0FBQy9CLG1DQUFtQztBQUNuQyx1Q0FBeUI7QUFFekIsTUFBTSxRQUFRLEdBQUcsQ0FBMEIsTUFBUyxFQUFFLEVBQUUsQ0FDdEQsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7QUFFdEMsTUFBTSxZQUFZLEdBQUcsUUFBUSxDQUFDO0lBQzVCLEtBQUssRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFO0lBQ2QsV0FBVyxFQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDbEMsU0FBUyxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDakMsVUFBVSxFQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7Q0FDbEMsQ0FBQyxDQUFDO0FBR0gsTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDO0lBQ2hDLGFBQWEsRUFBRSxDQUFDLENBQUMsTUFBTSxFQUFFO0lBQ3pCLFNBQVMsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFO0NBQ25CLENBQUMsQ0FBQztBQUVILE1BQU0sY0FBYyxHQUFHLFFBQVEsQ0FBQztJQUM5QixJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRTtJQUNoQixPQUFPLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRTtJQUNoQixXQUFXLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRTtJQUN2QixTQUFTLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRTtJQUN0QixRQUFRLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsRUFBRTtJQUNoQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLFFBQVEsRUFBRTtDQUNqRCxDQUFDLENBQUM7QUFHSCxNQUFNLGNBQWMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUdsRCxNQUFNLFlBQVksR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDO0FBRzNFLE1BQU0sY0FBYyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBSWxELE1BQU0scUJBQXFCLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUNwQyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUU7SUFDL0QsQ0FBQyxDQUFDLE1BQU0sRUFBRTtDQUNYLENBQUMsQ0FBQztBQUVILE1BQU0sZUFBZSxHQUFHLENBQUM7S0FDdEIsTUFBTSxDQUFDO0lBQ04sZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRTtJQUM1QixrQkFBa0IsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUM1RCxPQUFPLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztDQUM5QyxDQUFDO0tBQ0QsT0FBTyxFQUFFLENBQUM7QUFHQSxRQUFBLE1BQU0sR0FBRyxDQUFDO0tBQ3BCLE1BQU0sQ0FBQztJQUNOLFNBQVMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQztJQUNuQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ2xDLFFBQVEsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQztJQUNsQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUM7SUFDOUIsUUFBUSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDO0lBQ2xDLE1BQU0sRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQztJQUM5QixRQUFRLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzVDLElBQUksRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUM7Q0FDekMsQ0FBQztLQUNELE9BQU8sRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBIYXNoaUNvcnAsIEluY1xuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1QTC0yLjBcbmltcG9ydCAqIGFzIHogZnJvbSBcInpvZFwiO1xuXG5jb25zdCB0Zk9iamVjdCA9IDxUIGV4dGVuZHMgei5ab2RSYXdTaGFwZT4oY29uZmlnOiBUKSA9PlxuICB6LmFycmF5KHoub2JqZWN0KGNvbmZpZykucGFydGlhbCgpKTtcblxuY29uc3Qgb3V0cHV0Q29uZmlnID0gdGZPYmplY3Qoe1xuICB2YWx1ZTogei5hbnkoKSxcbiAgZGVzY3JpcHRpb246IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgc2Vuc2l0aXZlOiB6LmJvb2xlYW4oKS5vcHRpb25hbCgpLFxuICBkZXBlbmRzX29uOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG59KTtcbmV4cG9ydCB0eXBlIE91dHB1dCA9IHouaW5mZXI8dHlwZW9mIG91dHB1dENvbmZpZz47XG5cbmNvbnN0IHZhbGlkYXRpb25Db25maWcgPSB6Lm9iamVjdCh7XG4gIGVycm9yX21lc3NhZ2U6IHouc3RyaW5nKCksXG4gIGNvbmRpdGlvbjogei5hbnkoKSxcbn0pO1xuXG5jb25zdCB2YXJpYWJsZUNvbmZpZyA9IHRmT2JqZWN0KHtcbiAgdHlwZTogei5zdHJpbmcoKSxcbiAgZGVmYXVsdDogei5hbnkoKSxcbiAgZGVzY3JpcHRpb246IHouc3RyaW5nKCksXG4gIHNlbnNpdGl2ZTogei5ib29sZWFuKCksXG4gIG51bGxhYmxlOiB6LmJvb2xlYW4oKS5vcHRpb25hbCgpLFxuICB2YWxpZGF0aW9uOiB6LmFycmF5KHZhbGlkYXRpb25Db25maWcpLm9wdGlvbmFsKCksXG59KTtcbmV4cG9ydCB0eXBlIFZhcmlhYmxlID0gei5pbmZlcjx0eXBlb2YgdmFyaWFibGVDb25maWc+O1xuXG5jb25zdCBwcm92aWRlckNvbmZpZyA9IHouYXJyYXkoei5yZWNvcmQoei5hbnkoKSkpO1xuZXhwb3J0IHR5cGUgUHJvdmlkZXIgPSB6LmluZmVyPHR5cGVvZiBwcm92aWRlckNvbmZpZz47XG5cbmNvbnN0IG1vZHVsZUNvbmZpZyA9IHouYXJyYXkoei5vYmplY3QoeyBzb3VyY2U6IHouc3RyaW5nKCkgfSkubm9uc3RyaWN0KCkpO1xuZXhwb3J0IHR5cGUgTW9kdWxlID0gei5pbmZlcjx0eXBlb2YgbW9kdWxlQ29uZmlnPjtcblxuY29uc3QgcmVzb3VyY2VDb25maWcgPSB6LmFycmF5KHoucmVjb3JkKHouYW55KCkpKTtcbmV4cG9ydCB0eXBlIFJlc291cmNlID0gei5pbmZlcjx0eXBlb2YgcmVzb3VyY2VDb25maWc+O1xuZXhwb3J0IHR5cGUgRGF0YSA9IFJlc291cmNlO1xuXG5jb25zdCBwcm92aWRlclNwZWNpZmljYXRpb24gPSB6LnVuaW9uKFtcbiAgei5vYmplY3QoeyBzb3VyY2U6IHouc3RyaW5nKCksIHZlcnNpb246IHouc3RyaW5nKCkgfSkucGFydGlhbCgpLFxuICB6LnN0cmluZygpLFxuXSk7XG5cbmNvbnN0IHRlcnJhZm9ybUNvbmZpZyA9IHpcbiAgLm9iamVjdCh7XG4gICAgcmVxdWlyZWRfdmVyc2lvbjogei5zdHJpbmcoKSxcbiAgICByZXF1aXJlZF9wcm92aWRlcnM6IHouYXJyYXkoei5yZWNvcmQocHJvdmlkZXJTcGVjaWZpY2F0aW9uKSksXG4gICAgYmFja2VuZDogei5yZWNvcmQoei5hcnJheSh6LnJlY29yZCh6LmFueSgpKSkpLFxuICB9KVxuICAucGFydGlhbCgpO1xuZXhwb3J0IHR5cGUgVGVycmFmb3JtQ29uZmlnID0gei5pbmZlcjx0eXBlb2YgdGVycmFmb3JtQ29uZmlnPjtcblxuZXhwb3J0IGNvbnN0IHNjaGVtYSA9IHpcbiAgLm9iamVjdCh7XG4gICAgdGVycmFmb3JtOiB6LmFycmF5KHRlcnJhZm9ybUNvbmZpZyksXG4gICAgbG9jYWxzOiB6LmFycmF5KHoucmVjb3JkKHouYW55KCkpKSxcbiAgICB2YXJpYWJsZTogei5yZWNvcmQodmFyaWFibGVDb25maWcpLFxuICAgIG91dHB1dDogei5yZWNvcmQob3V0cHV0Q29uZmlnKSxcbiAgICBwcm92aWRlcjogei5yZWNvcmQocHJvdmlkZXJDb25maWcpLFxuICAgIG1vZHVsZTogei5yZWNvcmQobW9kdWxlQ29uZmlnKSxcbiAgICByZXNvdXJjZTogei5yZWNvcmQoei5yZWNvcmQocmVzb3VyY2VDb25maWcpKSxcbiAgICBkYXRhOiB6LnJlY29yZCh6LnJlY29yZChyZXNvdXJjZUNvbmZpZykpLFxuICB9KVxuICAucGFydGlhbCgpO1xuIl19